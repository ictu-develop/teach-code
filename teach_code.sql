-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: Dec 09, 2018 at 10:14 PM
-- Server version: 10.1.36-MariaDB
-- PHP Version: 7.2.11

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `teach_code`
--

-- --------------------------------------------------------

--
-- Table structure for table `wp_commentmeta`
--

CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) UNSIGNED NOT NULL,
  `comment_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `wp_comments`
--

CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) UNSIGNED NOT NULL,
  `comment_post_ID` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `user_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `wp_links`
--

CREATE TABLE `wp_links` (
  `link_id` bigint(20) UNSIGNED NOT NULL,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) UNSIGNED NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `wp_options`
--

CREATE TABLE `wp_options` (
  `option_id` bigint(20) UNSIGNED NOT NULL,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'yes'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_options`
--

INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1, 'siteurl', 'http://localhost/web-teach-code/blog', 'yes'),
(2, 'home', 'http://localhost/web-teach-code/blog', 'yes'),
(3, 'blogname', 'Lập trình online', 'yes'),
(4, 'blogdescription', 'ICTU', 'yes'),
(5, 'users_can_register', '1', 'yes'),
(6, 'admin_email', 'minhduc2521997@gmail.com', 'yes'),
(7, 'start_of_week', '1', 'yes'),
(8, 'use_balanceTags', '0', 'yes'),
(9, 'use_smilies', '1', 'yes'),
(10, 'require_name_email', '', 'yes'),
(11, 'comments_notify', '', 'yes'),
(12, 'posts_per_rss', '10', 'yes'),
(13, 'rss_use_excerpt', '1', 'yes'),
(14, 'mailserver_url', 'mail.example.com', 'yes'),
(15, 'mailserver_login', 'login@example.com', 'yes'),
(16, 'mailserver_pass', 'password', 'yes'),
(17, 'mailserver_port', '110', 'yes'),
(18, 'default_category', '1', 'yes'),
(19, 'default_comment_status', 'open', 'yes'),
(20, 'default_ping_status', 'closed', 'yes'),
(21, 'default_pingback_flag', '1', 'yes'),
(22, 'posts_per_page', '10', 'yes'),
(23, 'date_format', 'F j, Y', 'yes'),
(24, 'time_format', 'g:i a', 'yes'),
(25, 'links_updated_date_format', 'F j, Y g:i a', 'yes'),
(26, 'comment_moderation', '', 'yes'),
(27, 'moderation_notify', '', 'yes'),
(28, 'permalink_structure', '/%year%/%monthnum%/%day%/%postname%/', 'yes'),
(29, 'rewrite_rules', 'a:95:{s:11:\"^wp-json/?$\";s:22:\"index.php?rest_route=/\";s:14:\"^wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:21:\"^index.php/wp-json/?$\";s:22:\"index.php?rest_route=/\";s:24:\"^index.php/wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:8:\"login/?$\";s:22:\"index.php?action=login\";s:9:\"logout/?$\";s:23:\"index.php?action=logout\";s:11:\"register/?$\";s:25:\"index.php?action=register\";s:15:\"lostpassword/?$\";s:29:\"index.php?action=lostpassword\";s:12:\"resetpass/?$\";s:26:\"index.php?action=resetpass\";s:16:\"confirmaction/?$\";s:30:\"index.php?action=confirmaction\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:23:\"category/(.+?)/embed/?$\";s:46:\"index.php?category_name=$matches[1]&embed=true\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:20:\"tag/([^/]+)/embed/?$\";s:36:\"index.php?tag=$matches[1]&embed=true\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:21:\"type/([^/]+)/embed/?$\";s:44:\"index.php?post_format=$matches[1]&embed=true\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:8:\"embed/?$\";s:21:\"index.php?&embed=true\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:17:\"comments/embed/?$\";s:21:\"index.php?&embed=true\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:20:\"search/(.+)/embed/?$\";s:34:\"index.php?s=$matches[1]&embed=true\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:23:\"author/([^/]+)/embed/?$\";s:44:\"index.php?author_name=$matches[1]&embed=true\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:45:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$\";s:74:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:32:\"([0-9]{4})/([0-9]{1,2})/embed/?$\";s:58:\"index.php?year=$matches[1]&monthnum=$matches[2]&embed=true\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:19:\"([0-9]{4})/embed/?$\";s:37:\"index.php?year=$matches[1]&embed=true\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:58:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:68:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:88:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:64:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:53:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/embed/?$\";s:91:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:85:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&tb=1\";s:77:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:65:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&paged=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&cpage=$matches[5]\";s:61:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)(?:/([0-9]+))?/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&page=$matches[5]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:53:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&cpage=$matches[4]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\".?.+?/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"(.?.+?)/embed/?$\";s:41:\"index.php?pagename=$matches[1]&embed=true\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:24:\"(.?.+?)(?:/([0-9]+))?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";}', 'yes'),
(30, 'hack_file', '0', 'yes'),
(31, 'blog_charset', 'UTF-8', 'yes'),
(32, 'moderation_keys', '', 'no'),
(33, 'active_plugins', 'a:2:{i:0;s:21:\"submit-code/index.php\";i:1;s:33:\"theme-my-login/theme-my-login.php\";}', 'yes'),
(34, 'category_base', '', 'yes'),
(35, 'ping_sites', 'http://rpc.pingomatic.com/', 'yes'),
(36, 'comment_max_links', '2', 'yes'),
(37, 'gmt_offset', '7', 'yes'),
(38, 'default_email_category', '1', 'yes'),
(39, 'recently_edited', 'a:2:{i:0;s:81:\"/opt/lampp/htdocs/web-teach-code/blog/wp-content/themes/my-vcard-resume/style.css\";i:2;s:0:\"\";}', 'no'),
(40, 'template', 'ribbon-lite', 'yes'),
(41, 'stylesheet', 'ribbon-lite', 'yes'),
(42, 'comment_whitelist', '1', 'yes'),
(43, 'blacklist_keys', '', 'no'),
(44, 'comment_registration', '1', 'yes'),
(45, 'html_type', 'text/html', 'yes'),
(46, 'use_trackback', '0', 'yes'),
(47, 'default_role', 'subscriber', 'yes'),
(48, 'db_version', '38590', 'yes'),
(49, 'uploads_use_yearmonth_folders', '1', 'yes'),
(50, 'upload_path', '', 'yes'),
(51, 'blog_public', '1', 'yes'),
(52, 'default_link_category', '2', 'yes'),
(53, 'show_on_front', 'posts', 'yes'),
(54, 'tag_base', '', 'yes'),
(55, 'show_avatars', '1', 'yes'),
(56, 'avatar_rating', 'G', 'yes'),
(57, 'upload_url_path', '', 'yes'),
(58, 'thumbnail_size_w', '150', 'yes'),
(59, 'thumbnail_size_h', '100', 'yes'),
(60, 'thumbnail_crop', '1', 'yes'),
(61, 'medium_size_w', '300', 'yes'),
(62, 'medium_size_h', '300', 'yes'),
(63, 'avatar_default', 'mystery', 'yes'),
(64, 'large_size_w', '1024', 'yes'),
(65, 'large_size_h', '1024', 'yes'),
(66, 'image_default_link_type', '', 'yes'),
(67, 'image_default_size', '', 'yes'),
(68, 'image_default_align', '', 'yes'),
(69, 'close_comments_for_old_posts', '', 'yes'),
(70, 'close_comments_days_old', '14', 'yes'),
(71, 'thread_comments', '1', 'yes'),
(72, 'thread_comments_depth', '10', 'yes'),
(73, 'page_comments', '', 'yes'),
(74, 'comments_per_page', '50', 'yes'),
(75, 'default_comments_page', 'newest', 'yes'),
(76, 'comment_order', 'asc', 'yes'),
(77, 'sticky_posts', 'a:0:{}', 'yes'),
(78, 'widget_categories', 'a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}', 'yes'),
(79, 'widget_text', 'a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}', 'yes'),
(80, 'widget_rss', 'a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}', 'yes'),
(81, 'uninstall_plugins', 'a:0:{}', 'no'),
(82, 'timezone_string', '', 'yes'),
(83, 'page_for_posts', '0', 'yes'),
(84, 'page_on_front', '0', 'yes'),
(85, 'default_post_format', '0', 'yes'),
(86, 'link_manager_enabled', '0', 'yes'),
(87, 'finished_splitting_shared_terms', '1', 'yes'),
(88, 'site_icon', '0', 'yes'),
(89, 'medium_large_size_w', '768', 'yes'),
(90, 'medium_large_size_h', '0', 'yes'),
(91, 'wp_page_for_privacy_policy', '3', 'yes'),
(92, 'show_comments_cookies_opt_in', '', 'yes'),
(93, 'initial_db_version', '38590', 'yes'),
(94, 'wp_user_roles', 'a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}', 'yes'),
(95, 'fresh_site', '0', 'yes'),
(96, 'widget_search', 'a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}', 'yes'),
(97, 'widget_recent-posts', 'a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}', 'yes'),
(98, 'widget_recent-comments', 'a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}', 'yes'),
(99, 'widget_archives', 'a:3:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;i:4;a:0:{}}', 'yes'),
(100, 'widget_meta', 'a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}', 'yes'),
(101, 'sidebars_widgets', 'a:7:{s:19:\"wp_inactive_widgets\";a:6:{i:0;s:10:\"archives-4\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:7:\"sidebar\";a:1:{i:0;s:8:\"search-2\";}s:13:\"widget-header\";a:0:{}s:12:\"footer-first\";a:0:{}s:13:\"footer-second\";a:0:{}s:12:\"footer-third\";a:0:{}s:13:\"array_version\";i:3;}', 'yes'),
(102, 'widget_pages', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(103, 'widget_calendar', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(104, 'widget_media_audio', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(105, 'widget_media_image', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(106, 'widget_media_gallery', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(107, 'widget_media_video', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(108, 'widget_tag_cloud', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(109, 'widget_nav_menu', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(110, 'widget_custom_html', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(111, 'cron', 'a:5:{i:1544391098;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1544430698;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1544430712;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1544436203;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}', 'yes'),
(112, 'theme_mods_twentyseventeen', 'a:3:{s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1544022688;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:5:{i:0;s:14:\"recent-posts-2\";i:1;s:17:\"recent-comments-2\";i:2;s:10:\"archives-2\";i:3;s:12:\"categories-2\";i:4;s:6:\"meta-2\";}s:9:\"sidebar-1\";a:1:{i:0;s:8:\"search-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}s:18:\"nav_menu_locations\";a:1:{s:3:\"top\";i:2;}}', 'yes'),
(123, '_site_transient_timeout_browser_e9370d0f7f7a5d66a2e939d99b17726b', '1544430713', 'no'),
(124, '_site_transient_browser_e9370d0f7f7a5d66a2e939d99b17726b', 'a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"70.0.3538.77\";s:8:\"platform\";s:5:\"Linux\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}', 'no'),
(126, 'can_compress_scripts', '1', 'no'),
(145, 'theme_mods_my-vcard-resume', 'a:4:{s:18:\"custom_css_post_id\";i:15;s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:2;}s:12:\"header_image\";s:13:\"remove-header\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1544365442;s:4:\"data\";a:2:{s:19:\"wp_inactive_widgets\";a:5:{i:0;s:14:\"recent-posts-2\";i:1;s:17:\"recent-comments-2\";i:2;s:10:\"archives-2\";i:3;s:12:\"categories-2\";i:4;s:6:\"meta-2\";}s:9:\"sidebar-1\";a:1:{i:0;s:8:\"search-2\";}}}}', 'yes'),
(146, 'current_theme', 'Ribbon Lite', 'yes'),
(147, 'theme_switched', '', 'yes'),
(148, 'my_vcard_resume_admin_notice_welcome', '1', 'yes'),
(149, 'nav_menu_options', 'a:1:{s:8:\"auto_add\";a:0:{}}', 'yes'),
(163, '_site_transient_timeout_browser_5ac5ce57647169b251182b313622b37f', '1544519537', 'no'),
(164, '_site_transient_browser_5ac5ce57647169b251182b313622b37f', 'a:10:{s:4:\"name\";s:7:\"Firefox\";s:7:\"version\";s:4:\"63.0\";s:8:\"platform\";s:5:\"Linux\";s:10:\"update_url\";s:24:\"https://www.firefox.com/\";s:7:\"img_src\";s:44:\"http://s.w.org/images/browsers/firefox.png?1\";s:11:\"img_src_ssl\";s:45:\"https://s.w.org/images/browsers/firefox.png?1\";s:15:\"current_version\";s:2:\"56\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}', 'no'),
(214, 'recently_activated', 'a:0:{}', 'yes'),
(281, '_transient_twentyseventeen_categories', '2', 'yes'),
(334, '_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca', '1544407483', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(335, '_transient_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca', 'a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:49:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"https://wordpress.org/news\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 Dec 2018 19:42:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://wordpress.org/?v=5.0.1-alpha-43972\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:35:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n	\n\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 5.0 “Bebo”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"https://wordpress.org/news/2018/12/bebo/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 Dec 2018 19:28:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6328\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:342:\"Say Hello to the New Editor We’ve made some big upgrades to the editor. Our new block-based editor is the first step toward an exciting new future with a streamlined editing experience across your site. You’ll have more flexibility with how content is displayed, whether you are building your first site, revamping your blog, or [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:2:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:52:\"https://s.w.org/images/core/5.0/videos/add-block.mp4\";s:6:\"length\";s:7:\"8086508\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:48:\"https://s.w.org/images/core/5.0/videos/build.mp4\";s:6:\"length\";s:7:\"2623964\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:55246:\"\n<h2 style=\"text-align:center\">Say Hello to the New Editor</h2>\n\n\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe class=\'youtube-player\' type=\'text/html\' width=\'632\' height=\'386\' src=\'https://www.youtube.com/embed/72xdCU__XCk?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent\' allowfullscreen=\'true\' style=\'border:0;\'></iframe>\n</div></figure>\n\n\n\n<p>We’ve made some big upgrades to the editor. Our new block-based editor is the first step toward an exciting new future with a streamlined editing experience across your site. You’ll have more flexibility with how content is displayed, whether you are building your first site, revamping your blog, or write code for a living.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?fit=2400%2C1200&amp;ssl=1\" alt=\"\" class=\"wp-image-6331\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?w=2400&amp;ssl=1 2400w, https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?resize=300%2C150&amp;ssl=1 300w, https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?resize=768%2C384&amp;ssl=1 768w, https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?resize=1024%2C512&amp;ssl=1 1024w, https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?w=1264&amp;ssl=1 1264w, https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?w=1896&amp;ssl=1 1896w\" sizes=\"(max-width: 632px) 100vw, 632px\" /></figure></div>\n\n\n\n<h2 style=\"text-align:center\">Building with Blocks</h2>\n\n\n\n<p>The new block-based editor won’t change the way any of your content looks to your visitors. What it will do is let you insert any type of multimedia in a snap and rearrange to your heart’s content. Each piece of content will be in its own block; a distinct wrapper for easy maneuvering. If you’re more of an HTML and CSS sort of person, then the blocks won’t stand in your way. WordPress is here to simplify the process, not the outcome.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://s.w.org/images/core/5.0/videos/add-block.mp4\"></video></figure>\n\n\n\n<p>We have tons of blocks available by default, and more get added by the community every day. Here are a few of the blocks to help you get started:</p>\n\n\n\n<ul class=\"wp-block-gallery columns-4 is-cropped\"><li class=\"blocks-gallery-item\"><figure><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Paragraph.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6340\" data-link=\"https://wordpress.org/news/?attachment_id=6340\" class=\"wp-image-6340\" srcset=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Paragraph.jpg?w=500&amp;ssl=1 500w, https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Paragraph.jpg?resize=150%2C150&amp;ssl=1 150w, https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Paragraph.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Paragraph</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Heading.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6341\" data-link=\"https://wordpress.org/news/?attachment_id=6341\" class=\"wp-image-6341\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Heading.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Heading.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Heading.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Heading</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Preformatted.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6342\" data-link=\"https://wordpress.org/news/?attachment_id=6342\" class=\"wp-image-6342\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Preformatted.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Preformatted.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Preformatted.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Preformatted</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Quote.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6343\" data-link=\"https://wordpress.org/news/?attachment_id=6343\" class=\"wp-image-6343\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Quote.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Quote.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Quote.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Quote</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Image.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6344\" data-link=\"https://wordpress.org/news/?attachment_id=6344\" class=\"wp-image-6344\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Image.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Image.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Image.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Image</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Gallery.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6345\" data-link=\"https://wordpress.org/news/?attachment_id=6345\" class=\"wp-image-6345\" srcset=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Gallery.jpg?w=500&amp;ssl=1 500w, https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Gallery.jpg?resize=150%2C150&amp;ssl=1 150w, https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Gallery.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Gallery</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Cover-Image.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6346\" data-link=\"https://wordpress.org/news/?attachment_id=6346\" class=\"wp-image-6346\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Cover-Image.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Cover-Image.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Cover-Image.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Cover</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Video.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6347\" data-link=\"https://wordpress.org/news/?attachment_id=6347\" class=\"wp-image-6347\" srcset=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Video.jpg?w=500&amp;ssl=1 500w, https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Video.jpg?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Video.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Video</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Audio.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6348\" data-link=\"https://wordpress.org/news/?attachment_id=6348\" class=\"wp-image-6348\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Audio.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Audio.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Audio.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Audio</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Column.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6349\" data-link=\"https://wordpress.org/news/?attachment_id=6349\" class=\"wp-image-6349\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Column.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Column.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Column.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Columns</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-File.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6350\" data-link=\"https://wordpress.org/news/?attachment_id=6350\" class=\"wp-image-6350\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-File.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-File.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-File.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>File</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Code.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6351\" data-link=\"https://wordpress.org/news/?attachment_id=6351\" class=\"wp-image-6351\" srcset=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Code.jpg?w=500&amp;ssl=1 500w, https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Code.jpg?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Code.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Code</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-List.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6352\" data-link=\"https://wordpress.org/news/?attachment_id=6352\" class=\"wp-image-6352\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-List.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-List.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-List.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>List</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Button.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6353\" data-link=\"https://wordpress.org/news/?attachment_id=6353\" class=\"wp-image-6353\" srcset=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Button.jpg?w=500&amp;ssl=1 500w, https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Button.jpg?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Button.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Button</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Embeds.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6354\" data-link=\"https://wordpress.org/news/?attachment_id=6354\" class=\"wp-image-6354\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Embeds.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Embeds.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Embeds.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>Embeds</figcaption></figure></li><li class=\"blocks-gallery-item\"><figure><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-More.jpg?w=632&#038;ssl=1\" alt=\"\" data-id=\"6355\" data-link=\"https://wordpress.org/news/?attachment_id=6355\" class=\"wp-image-6355\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-More.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-More.jpg?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-More.jpg?resize=300%2C300&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /><figcaption>More</figcaption></figure></li></ul>\n\n\n\n<h2 style=\"text-align:center\">Freedom to Build, Freedom to Write</h2>\n\n\n\n<p>This new editing experience provides a more consistent treatment of design as well as content. If you’re building client sites, you can create reusable blocks. This lets your clients add new content anytime, while still maintaining a consistent look and feel.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://s.w.org/images/core/5.0/videos/build.mp4\"></video></figure>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2 style=\"text-align:center\">A Stunning New Default Theme</h2>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?fit=2400%2C1600&amp;ssl=1\" alt=\"\" class=\"wp-image-6358\" srcset=\"https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?w=2400&amp;ssl=1 2400w, https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?w=1264&amp;ssl=1 1264w, https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?w=1896&amp;ssl=1 1896w\" sizes=\"(max-width: 632px) 100vw, 632px\" /></figure></div>\n\n\n\n<p>Introducing Twenty Nineteen, a new default theme that shows off the power of the new editor.</p>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><figure class=\"wp-block-media-text__media\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/block-editor-1024x683.jpg?resize=632%2C422&#038;ssl=1\" alt=\"\" class=\"wp-image-6359\" srcset=\"https://i0.wp.com/wordpress.org/news/files/2018/12/block-editor.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/wordpress.org/news/files/2018/12/block-editor.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/wordpress.org/news/files/2018/12/block-editor.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/wordpress.org/news/files/2018/12/block-editor.jpg?w=1200&amp;ssl=1 1200w\" sizes=\"(max-width: 632px) 100vw, 632px\" data-recalc-dims=\"1\" /></figure><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_9\">Designed for the block editor</h3>\n\n\n\n<p>Twenty Nineteen features custom styles for the blocks available by default in 5.0. It makes extensive use of editor styles throughout the theme. That way, what you create in your content editor is what you see on the front of your site.<br></p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><figure class=\"wp-block-media-text__media\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/typography-1.jpg?w=632&#038;ssl=1\" alt=\"\" class=\"wp-image-6427\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/typography-1.jpg?w=900&amp;ssl=1 900w, https://i1.wp.com/wordpress.org/news/files/2018/12/typography-1.jpg?resize=300%2C200&amp;ssl=1 300w, https://i1.wp.com/wordpress.org/news/files/2018/12/typography-1.jpg?resize=768%2C512&amp;ssl=1 768w\" sizes=\"(max-width: 632px) 100vw, 632px\" data-recalc-dims=\"1\" /></figure><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_18\">Simple, type-driven layout</h3>\n\n\n\n<p>Featuring ample whitespace, and modern sans-serif headlines paired with classic serif body text, Twenty Nineteen is built to be beautiful on the go. It uses system fonts to increase loading speed. No more long waits on slow networks!</p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><figure class=\"wp-block-media-text__media\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen-versatile.gif?w=632&#038;ssl=1\" alt=\"\" class=\"wp-image-6361\" data-recalc-dims=\"1\" /></figure><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_24\">Versatile design for all sites</h3>\n\n\n\n<p>Twenty Nineteen is designed to work for a wide variety of use cases. Whether you’re running a photo blog, launching a new business, or supporting a non-profit, Twenty Nineteen is flexible enough to fit your needs.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-button aligncenter\"><a class=\"wp-block-button__link has-text-color\" href=\"https://wordpress.org/themes/twentynineteen/\" style=\"color:#ffffff\">Give Twenty Nineteen a try</a></div>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2 style=\"text-align:center\">Developer Happiness</h2>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><figure class=\"wp-block-media-text__media\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Protect.jpg?w=632&#038;ssl=1\" alt=\"\" class=\"wp-image-6362\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Protect.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Protect.jpg?resize=300%2C210&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /></figure><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_34\">Protect</h3>\n\n\n\n<p>Blocks provide a comfortable way for users to change content directly, while also ensuring the content structure cannot be easily disturbed by accidental code edits. This allows the developer to control the output, building polished and semantic markup that is preserved through edits and not easily broken.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><figure class=\"wp-block-media-text__media\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Compose.jpg?w=632&#038;ssl=1\" alt=\"\" class=\"wp-image-6363\" srcset=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Compose.jpg?w=500&amp;ssl=1 500w, https://i2.wp.com/wordpress.org/news/files/2018/12/Compose.jpg?resize=300%2C210&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /></figure><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_39\">Compose</h3>\n\n\n\n<p>Take advantage of a wide collection of APIs and interface components to easily create blocks with intuitive controls for your clients. Utilizing these components not only speeds up development work but also provide a more consistent, usable, and accessible interface to all users.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><figure class=\"wp-block-media-text__media\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Create.jpg?w=632&#038;ssl=1\" alt=\"\" class=\"wp-image-6364\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Create.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/wordpress.org/news/files/2018/12/Create.jpg?resize=300%2C210&amp;ssl=1 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" data-recalc-dims=\"1\" /></figure><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_45\">Create</h3>\n\n\n\n<p>The new block paradigm opens up a path of exploration and imagination when it comes to solving user needs. With the unified block insertion flow, it’s easier for your clients and customers to find and use blocks for all types of content. Developers can focus on executing their vision and providing rich editing experiences, rather than fussing with difficult APIs.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-button aligncenter\"><a class=\"wp-block-button__link has-text-color\" href=\"https://wordpress.org/gutenberg/handbook/\" style=\"color:#ffffff\">Learn how to get started</a></div>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2 style=\"text-align:center\">Keep it Classic</h2>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?fit=2400%2C1130&amp;ssl=1\" alt=\"\" class=\"wp-image-6365\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?w=2400&amp;ssl=1 2400w, https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?resize=300%2C141&amp;ssl=1 300w, https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?resize=768%2C362&amp;ssl=1 768w, https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?resize=1024%2C482&amp;ssl=1 1024w, https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?w=1264&amp;ssl=1 1264w, https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?w=1896&amp;ssl=1 1896w\" sizes=\"(max-width: 632px) 100vw, 632px\" /></figure></div>\n\n\n\n<p>Prefer to stick with the familiar Classic Editor? No problem! Support for the Classic Editor plugin will remain in WordPress through 2021.</p>\n\n\n\n<p>The Classic Editor plugin restores the previous WordPress editor and the Edit Post screen. It lets you keep using plugins that extend it, add old-style meta boxes, or otherwise depend on the previous editor. To install, visit your plugins page and click the “Install Now” button next to “Classic Editor”. After the plugin finishes installing, click “Activate”. That’s it!</p>\n\n\n\n<p>Note to users of assistive technology: if you experience usability issues with the block editor, we recommend you continue to use the Classic Editor.</p>\n\n\n\n<div class=\"wp-block-button aligncenter\"><a class=\"wp-block-button__link has-text-color\" href=\"https://wordpress.org/plugins/classic-editor/\" style=\"color:#ffffff\">Check out the Classic Editor</a></div>\n\n\n\n<p>This release is named in homage to the pioneering Cuban jazz musician <a href=\"https://en.wikipedia.org/wiki/Bebo_Vald%C3%A9s\">Bebo Valdés</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>The Squad</h2>\n\n\n\n<p>This release was led by <a href=\"http://ma.tt/\">Matt Mullenweg</a>, along with co-leads <a href=\"https://www.allancole.com/\">Allan Cole</a>, <a href=\"http://antpb.com/\">Anthony Burchell</a>, <a href=\"https://pento.net/\">Gary Pendergast</a>, <a href=\"https://josepha.blog/\">Josepha Haden Chomphosy</a>, <a href=\"https://laurel.blog/\">Laurel Fulford</a>, <a href=\"https://yoast.com/about-us/team/omar-reiss/\">Omar Reiss</a>, <a href=\"https://danielbachhuber.com/\">Daniel Bachhuber</a>, <a href=\"https://matiasventura.com/\">Matías Ventura</a>, <a href=\"https://lamda.blog/\">Miguel Fonseca</a>, <a href=\"https://tam.blog/\">Tammie Lister</a>, <a href=\"https://tofumatt.com/\">Matthew Riley MacPherson</a>. They were ably assisted by the following fabulous folks. There were 423 contributors with props in this release. Pull up some Bebo Valdés on your music service of choice, and check out some of their profiles:</p>\n\n\n<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/abdulwahab610\">Abdul Wahab</a>, <a href=\"https://profiles.wordpress.org/abdullahramzan\">Abdullah Ramzan</a>, <a href=\"https://profiles.wordpress.org/abhijitrakas\">Abhijit Rakas</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/afraithe\">afraithe</a>, <a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>, <a href=\"https://profiles.wordpress.org/ahmadawais\">ahmadawais</a>, <a href=\"https://profiles.wordpress.org/airathalitov\">Airat Halitov</a>, <a href=\"https://profiles.wordpress.org/ajitbohra\">Ajit Bohra</a>, <a href=\"https://profiles.wordpress.org/schlessera\">Alain Schlesser</a>, <a href=\"https://profiles.wordpress.org/albertomedina\">albertomedina</a>, <a href=\"https://profiles.wordpress.org/aldavigdis\">aldavigdis</a>, <a href=\"https://profiles.wordpress.org/alexsanford1\">Alex Sanford</a>, <a href=\"https://profiles.wordpress.org/xyfi\">Alexander Botteram</a>, <a href=\"https://profiles.wordpress.org/alexis\">alexis</a>, <a href=\"https://profiles.wordpress.org/alexislloyd\">Alexis Lloyd</a>, <a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>, <a href=\"https://profiles.wordpress.org/amedina\">amedina</a>, <a href=\"https://profiles.wordpress.org/nosolosw\">Andr&#233;s</a>, <a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andreamiddleton\">Andrea Middleton</a>, <a href=\"https://profiles.wordpress.org/euthelup\">Andrei Lupu</a>, <a href=\"https://profiles.wordpress.org/andreiglingeanu\">andreiglingeanu</a>, <a href=\"https://profiles.wordpress.org/aduth\">Andrew Duthie</a>, <a href=\"https://profiles.wordpress.org/sumobi\">Andrew Munro</a>, <a href=\"https://profiles.wordpress.org/anevins\">Andrew Nevins</a>, <a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/androb\">Andrew Roberts</a>, <a href=\"https://profiles.wordpress.org/andrewtaylor-1\">Andrew Taylor</a>, <a href=\"https://profiles.wordpress.org/andrewserong\">andrewserong</a>, <a href=\"https://profiles.wordpress.org/apeatling\">Andy Peatling</a>, <a href=\"https://profiles.wordpress.org/ameeker\">Angie Meeker</a>, <a href=\"https://profiles.wordpress.org/annaharrison\">Anna Harrison</a>, <a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"https://profiles.wordpress.org/arnaudban\">ArnaudBan</a>, <a href=\"https://profiles.wordpress.org/arshidkv12\">Arshid</a>, <a href=\"https://profiles.wordpress.org/aprakasa\">Arya Prakasa</a>, <a href=\"https://profiles.wordpress.org/artisticasad\">Asad</a>, <a href=\"https://profiles.wordpress.org/mrasharirfan\">Ashar Irfan</a>, <a href=\"https://profiles.wordpress.org/asvinballoo\">Asvin Balloo</a>, <a href=\"https://profiles.wordpress.org/atanasangelovdev\">Atanas Angelov</a>, <a href=\"https://profiles.wordpress.org/b-07\">Bappi</a>, <a href=\"https://profiles.wordpress.org/bcolumbia\">bcolumbia</a>, <a href=\"https://profiles.wordpress.org/belcherj\">belcherj</a>, <a href=\"https://profiles.wordpress.org/blowery\">Ben Lowery</a>, <a href=\"https://profiles.wordpress.org/caxco93\">Benjamin Eyzaguirre</a>, <a href=\"https://profiles.wordpress.org/benjamin_zekavica\">Benjamin Zekavica</a>, <a href=\"https://profiles.wordpress.org/benlk\">benlk</a>, <a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>, <a href=\"https://profiles.wordpress.org/bernhard-reiter\">Bernhard Reiter</a>, <a href=\"https://profiles.wordpress.org/betsela\">betsela</a>, <a href=\"https://profiles.wordpress.org/bhargavmehta\">Bhargav Mehta</a>, <a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>, <a href=\"https://profiles.wordpress.org/bph\">Birgit Pauli-Haack</a>, <a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>, <a href=\"https://profiles.wordpress.org/boblinthorst\">boblinthorst</a>, <a href=\"https://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>, <a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"https://profiles.wordpress.org/bpayton\">Brandon Payton</a>, <a href=\"https://profiles.wordpress.org/brentswisher\">Brent Swisher</a>, <a href=\"https://profiles.wordpress.org/technosiren\">Brianna Privett</a>, <a href=\"https://profiles.wordpress.org/briannaorg\">briannaorg</a>, <a href=\"https://profiles.wordpress.org/bronsonquick\">Bronson Quick</a>, <a href=\"https://profiles.wordpress.org/bandonrandon\">Brooke.</a>, <a href=\"https://profiles.wordpress.org/burhandodhy\">Burhan Nasir</a>, <a href=\"https://profiles.wordpress.org/cantothemes\">CantoThemes</a>, <a href=\"https://profiles.wordpress.org/cathibosco\">cathibosco</a>, <a href=\"https://profiles.wordpress.org/chetan200891\">Chetan Prajapati</a>, <a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>, <a href=\"https://profiles.wordpress.org/chetansatasiya\">chetansatasiya</a>, <a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"https://profiles.wordpress.org/chrisl27\">Chris Lloyd</a>, <a href=\"https://profiles.wordpress.org/crunnells\">Chris Runnells</a>, <a href=\"https://profiles.wordpress.org/chrisvanpatten\">Chris Van Patten</a>, <a href=\"https://profiles.wordpress.org/chriskmnds\">chriskmnds</a>, <a href=\"https://profiles.wordpress.org/pixelverbieger\">Christian Sabo</a>, <a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>, <a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>, <a href=\"https://profiles.wordpress.org/coderkevin\">coderkevin</a>, <a href=\"https://profiles.wordpress.org/copons\">Copons</a>, <a href=\"https://profiles.wordpress.org/courtney0burton\">courtney0burton</a>, <a href=\"https://profiles.wordpress.org/mitogh\">Crisoforo Gaspar Hernandez</a>, <a href=\"https://profiles.wordpress.org/littlebigthing\">Csaba (LittleBigThings)</a>, <a href=\"https://profiles.wordpress.org/csabotta\">csabotta</a>, <a href=\"https://profiles.wordpress.org/danieltj\">Daniel James</a>, <a href=\"https://profiles.wordpress.org/talldanwp\">Daniel Richards</a>, <a href=\"https://profiles.wordpress.org/danielhw\">danielhw</a>, <a href=\"https://profiles.wordpress.org/daniloercoli\">daniloercoli</a>, <a href=\"https://profiles.wordpress.org/dannycooper\">DannyCooper</a>, <a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>, <a href=\"https://profiles.wordpress.org/davemoran118\">davemoran118</a>, <a href=\"https://profiles.wordpress.org/dcavins\">David Cavins</a>, <a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/davidakennedy\">David Kennedy</a>, <a href=\"https://profiles.wordpress.org/dryanpress\">David Ryan</a>, <a href=\"https://profiles.wordpress.org/davidsword\">David Sword</a>, <a href=\"https://profiles.wordpress.org/folletto\">Davide \'Folletto\' Casali</a>, <a href=\"https://profiles.wordpress.org/davidherrera\">davidherrera</a>, <a href=\"https://profiles.wordpress.org/davisshaver\">Davis</a>, <a href=\"https://profiles.wordpress.org/dciso\">dciso</a>, <a href=\"https://profiles.wordpress.org/dmsnell\">Dennis Snell</a>, <a href=\"https://profiles.wordpress.org/dsmart\">Derek Smart</a>, <a href=\"https://profiles.wordpress.org/designsimply\">designsimply</a>, <a href=\"https://profiles.wordpress.org/dlocc\">Devin Walker</a>, <a href=\"https://profiles.wordpress.org/deviodigital\">Devio Digital</a>, <a href=\"https://profiles.wordpress.org/dfangstrom\">dfangstrom</a>, <a href=\"https://profiles.wordpress.org/dhanendran\">Dhanendran</a>, <a href=\"https://profiles.wordpress.org/diegoliv\">Diego de Oliveira</a>, <a href=\"https://profiles.wordpress.org/diegoreymendez\">diegoreymendez</a>, <a href=\"https://profiles.wordpress.org/dingo_bastard\">dingo-d</a>, <a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/dency\">Dixita Dusara</a>, <a href=\"https://profiles.wordpress.org/dixitadusara\">Dixita Dusara Gohil</a>, <a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"https://profiles.wordpress.org/donnapep\">Donna Peplinskie</a>, <a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"https://profiles.wordpress.org/dsawardekar\">dsawardekar</a>, <a href=\"https://profiles.wordpress.org/dsifford\">dsifford</a>, <a href=\"https://profiles.wordpress.org/duanestorey\">Duane Storey</a>, <a href=\"https://profiles.wordpress.org/chopinbach\">Edwin Cromley</a>, <a href=\"https://profiles.wordpress.org/ehg\">ehg</a>, <a href=\"https://profiles.wordpress.org/electricfeet\">ElectricFeet</a>, <a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>, <a href=\"https://profiles.wordpress.org/epointal\">Elisabeth Pointal</a>, <a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/elrae\">elrae</a>, <a href=\"https://profiles.wordpress.org/enodekciw\">enodekciw</a>, <a href=\"https://profiles.wordpress.org/ephoxjames\">ephoxjames</a>, <a href=\"https://profiles.wordpress.org/ephoxmogran\">ephoxmogran</a>, <a href=\"https://profiles.wordpress.org/sewmyheadon\">Eric Amundson</a>, <a href=\"https://profiles.wordpress.org/ericnmurphy\">ericnmurphy</a>, <a href=\"https://profiles.wordpress.org/etoledom\">etoledom</a>, <a href=\"https://profiles.wordpress.org/circlecube\">Evan Mullins</a>, <a href=\"https://profiles.wordpress.org/fabiankaegy\">fabiankaegy</a>, <a href=\"https://profiles.wordpress.org/fabs_pim\">fabs_pim</a>, <a href=\"https://profiles.wordpress.org/faishal\">faishal</a>, <a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>, <a href=\"https://profiles.wordpress.org/floriansimeth\">Florian Simeth</a>, <a href=\"https://profiles.wordpress.org/foobar4u\">foobar4u</a>, <a href=\"https://profiles.wordpress.org/foreverpinetree\">foreverpinetree</a>, <a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"https://profiles.wordpress.org/fuyuko\">fuyuko</a>, <a href=\"https://profiles.wordpress.org/gma992\">Gabriel Maldonado</a>, <a href=\"https://profiles.wordpress.org/garrett-eclipse\">Garrett Hyder</a>, <a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"https://profiles.wordpress.org/doomwaxer\">Gary Thayer</a>, <a href=\"https://profiles.wordpress.org/garyjones\">garyjones</a>, <a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>, <a href=\"https://profiles.wordpress.org/babbardel\">George Olaru</a>, <a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"https://profiles.wordpress.org/georgeh\">georgeh</a>, <a href=\"https://profiles.wordpress.org/gnif\">gnif</a>, <a href=\"https://profiles.wordpress.org/goldsounds\">goldsounds</a>, <a href=\"https://profiles.wordpress.org/grappler\">Grappler</a>, <a href=\"https://profiles.wordpress.org/gziolo\">Grzegorz Ziółkowski</a>, <a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>, <a href=\"https://profiles.wordpress.org/gwwar\">gwwar</a>, <a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>, <a href=\"https://profiles.wordpress.org/hblackett\">hblackett</a>, <a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandi</a>, <a href=\"https://profiles.wordpress.org/luehrsen\">Hendrik Luehrsen</a>, <a href=\"https://profiles.wordpress.org/herbmiller\">herbmiller</a>, <a href=\"https://profiles.wordpress.org/herregroen\">Herre Groen</a>, <a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>, <a href=\"https://profiles.wordpress.org/hypest\">hypest</a>, <a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>, <a href=\"https://profiles.wordpress.org/ianstewart\">ianstewart</a>, <a href=\"https://profiles.wordpress.org/ianbelanger\">ibelanger</a>, <a href=\"https://profiles.wordpress.org/icaleb\">iCaleb</a>, <a href=\"https://profiles.wordpress.org/idpokute\">idpokute</a>, <a href=\"https://profiles.wordpress.org/igorsch\">Igor</a>, <a href=\"https://profiles.wordpress.org/imath\">imath</a>, <a href=\"https://profiles.wordpress.org/imonly_ik\">Imran Khalid</a>, <a href=\"https://profiles.wordpress.org/intronic\">intronic</a>, <a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"https://profiles.wordpress.org/ireneyoast\">Irene Strikkers</a>, <a href=\"https://profiles.wordpress.org/ismailelkorchi\">Ismail El Korchi</a>, <a href=\"https://profiles.wordpress.org/israelshmueli\">israelshmueli</a>, <a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jd55\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jakept\">Jacob Peattie</a>, <a href=\"https://profiles.wordpress.org/jagnew\">jagnew</a>, <a href=\"https://profiles.wordpress.org/jahvi\">jahvi</a>, <a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>, <a href=\"https://profiles.wordpress.org/jamestryon\">jamestryon</a>, <a href=\"https://profiles.wordpress.org/jamiehalvorson\">jamiehalvorson</a>, <a href=\"https://profiles.wordpress.org/jdembowski\">Jan Dembowski</a>, <a href=\"https://profiles.wordpress.org/janalwin\">janalwin</a>, <a href=\"https://profiles.wordpress.org/jaswrks\">Jason Caldwell</a>, <a href=\"https://profiles.wordpress.org/octalmage\">Jason Stallings</a>, <a href=\"https://profiles.wordpress.org/yingling017\">Jason Yingling</a>, <a href=\"https://profiles.wordpress.org/vengisss\">Javier Villanueva</a>, <a href=\"https://profiles.wordpress.org/jhoffm34\">Jay Hoffmann</a>, <a href=\"https://profiles.wordpress.org/audrasjb\">Jb Audras</a>, <a href=\"https://profiles.wordpress.org/jblz\">Jeff Bowen</a>, <a href=\"https://profiles.wordpress.org/jeffpaul\">Jeffrey Paul</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby\">JJJ</a>, <a href=\"https://profiles.wordpress.org/sephsekla\">Joe Bailey-Roberts</a>, <a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>, <a href=\"https://profiles.wordpress.org/joemaller\">joemaller</a>, <a href=\"https://profiles.wordpress.org/joen\">Joen Asmussen</a>, <a href=\"https://profiles.wordpress.org/j-falk\">Johan Falk</a>, <a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/johnny5\">John Godley</a>, <a href=\"https://profiles.wordpress.org/johndyer\">johndyer</a>, <a href=\"https://profiles.wordpress.org/johnpixle\">JohnPixle</a>, <a href=\"https://profiles.wordpress.org/johnwatkins0\">johnwatkins0</a>, <a href=\"https://profiles.wordpress.org/jomurgel\">jomurgel</a>, <a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>, <a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>, <a href=\"https://profiles.wordpress.org/jonsurrell\">jonsurrell</a>, <a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"https://profiles.wordpress.org/koke\">Jorge Bernal</a>, <a href=\"https://profiles.wordpress.org/jorgefilipecosta\">Jorge Costa</a>, <a href=\"https://profiles.wordpress.org/ieatwebsites\">Jose Fremaint</a>, <a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>, <a href=\"https://profiles.wordpress.org/jvisick77\">Josh Visick</a>, <a href=\"https://profiles.wordpress.org/joshuawold\">Joshua Wold</a>, <a href=\"https://profiles.wordpress.org/joyously\">Joy</a>, <a href=\"https://profiles.wordpress.org/jrf\">jrf</a>, <a href=\"https://profiles.wordpress.org/jryancard\">jryancard</a>, <a href=\"https://profiles.wordpress.org/jsnajdr\">jsnajdr</a>, <a href=\"https://profiles.wordpress.org/julienmelissas\">JulienMelissas</a>, <a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>, <a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"https://profiles.wordpress.org/kallehauge\">Kallehauge</a>, <a href=\"https://profiles.wordpress.org/kalpshit\">KalpShit Akabari</a>, <a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>, <a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"https://profiles.wordpress.org/kevinwhoffman\">Kevin Hoffman</a>, <a href=\"https://profiles.wordpress.org/khleomix\">khleomix</a>, <a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>, <a href=\"https://profiles.wordpress.org/kjellr\">Kjell Reigstad</a>, <a href=\"https://profiles.wordpress.org/kluny\">kluny</a>, <a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/xkon\">Konstantinos Xenos</a>, <a href=\"https://profiles.wordpress.org/krutidugade\">krutidugade</a>, <a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/notlaura\">Lara Schenck</a>, <a href=\"https://profiles.wordpress.org/leahkoerper\">leahkoerper</a>, <a href=\"https://profiles.wordpress.org/lloyd\">lloyd</a>, <a href=\"https://profiles.wordpress.org/loicblascos\">Lo&#239;c Blascos</a>, <a href=\"https://profiles.wordpress.org/lucasstark\">Lucas Stark</a>, <a href=\"https://profiles.wordpress.org/lucasrolff\">LucasRolff</a>, <a href=\"https://profiles.wordpress.org/luigipulcini\">luigipulcini</a>, <a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>, <a href=\"https://profiles.wordpress.org/lucaskowalski\">Luke Kowalski</a>, <a href=\"https://profiles.wordpress.org/lukepettway\">Luke Pettway</a>, <a href=\"https://profiles.wordpress.org/luminus\">Luminus</a>, <a href=\"https://profiles.wordpress.org/lynneux\">lynneux</a>, <a href=\"https://profiles.wordpress.org/macbookandrew\">macbookandrew</a>, <a href=\"https://profiles.wordpress.org/maedahbatool\">Maedah Batool</a>, <a href=\"https://profiles.wordpress.org/mahdiyazdani\">Mahdi Yazdani</a>, <a href=\"https://profiles.wordpress.org/mahmoudsaeed\">mahmoudsaeed</a>, <a href=\"https://profiles.wordpress.org/travel_girl\">Maja Benke</a>, <a href=\"https://profiles.wordpress.org/mkaz\">Marcus Kazmierczak</a>, <a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>, <a href=\"https://profiles.wordpress.org/marina_wp\">marina_wp</a>, <a href=\"https://profiles.wordpress.org/clorith\">Marius L. J.</a>, <a href=\"https://profiles.wordpress.org/mariusvw\">mariusvw</a>, <a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>, <a href=\"https://profiles.wordpress.org/vindl\">Marko Andrijasevic</a>, <a href=\"https://profiles.wordpress.org/martinlugton\">martinlugton</a>, <a href=\"https://profiles.wordpress.org/m-e-h\">Marty Helmick</a>, <a href=\"https://profiles.wordpress.org/mathiu\">mathiu</a>, <a href=\"https://profiles.wordpress.org/webdevmattcrom\">Matt Cromwell</a>, <a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"https://profiles.wordpress.org/mattgeri\">MattGeri</a>, <a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"https://profiles.wordpress.org/maurobringolf\">maurobringolf</a>, <a href=\"https://profiles.wordpress.org/maximebj\">Maxime BERNARD-JACQUET</a>, <a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>, <a href=\"https://profiles.wordpress.org/meetjey\">meetjey</a>, <a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/mendezcode\">mendezcode</a>, <a href=\"https://profiles.wordpress.org/woodent\">Micah Wood</a>, <a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"https://profiles.wordpress.org/michaelhull\">Michael Hull</a>, <a href=\"https://profiles.wordpress.org/mnelson4\">Michael Nelson</a>, <a href=\"https://profiles.wordpress.org/mizejewski\">Michele Mizejewski</a>, <a href=\"https://profiles.wordpress.org/jbpaul17\">Migrated to @jeffpaul</a>, <a href=\"https://profiles.wordpress.org/stubgo\">Miina Sikk</a>, <a href=\"https://profiles.wordpress.org/simison\">Mikael Korpela</a>, <a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>, <a href=\"https://profiles.wordpress.org/mike-haydon-swo\">Mike Haydon</a>, <a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>, <a href=\"https://profiles.wordpress.org/mikehaydon\">mikehaydon</a>, <a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>, <a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>, <a href=\"https://profiles.wordpress.org/milana_cap\">Milana Cap</a>, <a href=\"https://profiles.wordpress.org/gonzomir\">Milen Petrinski - Gonzo</a>, <a href=\"https://profiles.wordpress.org/milesdelliott\">milesdelliott</a>, <a href=\"https://profiles.wordpress.org/mimo84\">mimo84</a>, <a href=\"https://profiles.wordpress.org/0mirka00\">mirka</a>, <a href=\"https://profiles.wordpress.org/mmtr86\">mmtr86</a>, <a href=\"https://profiles.wordpress.org/boemedia\">Monique Dubbelman</a>, <a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>, <a href=\"https://profiles.wordpress.org/mostafas1990\">Mostafa Soufi</a>, <a href=\"https://profiles.wordpress.org/motleydev\">motleydev</a>, <a href=\"https://profiles.wordpress.org/mpheasant\">mpheasant</a>, <a href=\"https://profiles.wordpress.org/mrmadhat\">mrmadhat</a>, <a href=\"https://profiles.wordpress.org/mrwweb\">mrwweb</a>, <a href=\"https://profiles.wordpress.org/msdesign21\">msdesign21</a>, <a href=\"https://profiles.wordpress.org/mtias\">mtias</a>, <a href=\"https://profiles.wordpress.org/desideveloper\">Muhammad Irfan</a>, <a href=\"https://profiles.wordpress.org/mukesh27\">Mukesh Panchal</a>, <a href=\"https://profiles.wordpress.org/munirkamal\">munirkamal</a>, <a href=\"https://profiles.wordpress.org/mmaumio\">Muntasir Mahmud</a>, <a href=\"https://profiles.wordpress.org/mzorz\">mzorz</a>, <a href=\"https://profiles.wordpress.org/nagayama\">nagayama</a>, <a href=\"https://profiles.wordpress.org/nfmohit\">Nahid F. Mohit</a>, <a href=\"https://profiles.wordpress.org/nao\">Naoko Takano</a>, <a href=\"https://profiles.wordpress.org/napy84\">napy84</a>, <a href=\"https://profiles.wordpress.org/nateconley\">nateconley</a>, <a href=\"https://profiles.wordpress.org/nativeinside\">Native Inside</a>, <a href=\"https://profiles.wordpress.org/greatislander\">Ned Zimmerman</a>, <a href=\"https://profiles.wordpress.org/buzztone\">Neil Murray</a>, <a href=\"https://profiles.wordpress.org/nicbertino\">nic.bertino</a>, <a href=\"https://profiles.wordpress.org/notnownikki\">Nicola Heald</a>, <a href=\"https://profiles.wordpress.org/nielslange\">Niels Lange</a>, <a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>, <a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"https://profiles.wordpress.org/nitrajka\">nitrajka</a>, <a href=\"https://profiles.wordpress.org/njpanderson\">njpanderson</a>, <a href=\"https://profiles.wordpress.org/nshki\">nshki</a>, <a href=\"https://profiles.wordpress.org/hideokamoto\">Okamoto Hidetaka</a>, <a href=\"https://profiles.wordpress.org/oskosk\">oskosk</a>, <a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>, <a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>, <a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"https://profiles.wordpress.org/pauldechov\">Paul Dechov</a>, <a href=\"https://profiles.wordpress.org/paulstonier\">Paul Stonier</a>, <a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"https://profiles.wordpress.org/pedromendonca\">Pedro Mendon&#231;a</a>, <a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>, <a href=\"https://profiles.wordpress.org/pglewis\">pglewis</a>, <a href=\"https://profiles.wordpress.org/tyrannous\">Philipp Bammes</a>, <a href=\"https://profiles.wordpress.org/piersb\">piersb</a>, <a href=\"https://profiles.wordpress.org/wizzard_\">Pieter Daalder</a>, <a href=\"https://profiles.wordpress.org/pilou69\">pilou69</a>, <a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>, <a href=\"https://profiles.wordpress.org/poena\">poena</a>, <a href=\"https://profiles.wordpress.org/postphotos\">postphotos</a>, <a href=\"https://profiles.wordpress.org/potbot\">potbot</a>, <a href=\"https://profiles.wordpress.org/prtksxna\">Prateek Saxena</a>, <a href=\"https://profiles.wordpress.org/pratikthink\">Pratik K. Yadav</a>, <a href=\"https://profiles.wordpress.org/presskopp\">Presskopp</a>, <a href=\"https://profiles.wordpress.org/psealock\">psealock</a>, <a href=\"https://profiles.wordpress.org/ptasker\">ptasker</a>, <a href=\"https://profiles.wordpress.org/rachelmcr\">Rachel</a>, <a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/rahmohn\">Rahmohn</a>, <a href=\"https://profiles.wordpress.org/rahmon\">Rahmon</a>, <a href=\"https://profiles.wordpress.org/rahulsprajapati\">Rahul Prajapati</a>, <a href=\"https://profiles.wordpress.org/rakshans1\">rakshans1</a>, <a href=\"https://profiles.wordpress.org/ramonopoly\">ramonopoly</a>, <a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>, <a href=\"https://profiles.wordpress.org/revgeorge\">revgeorge</a>, <a href=\"https://profiles.wordpress.org/youknowriad\">Riad Benguella</a>, <a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>, <a href=\"https://profiles.wordpress.org/richsalvucci\">richsalvucci</a>, <a href=\"https://profiles.wordpress.org/riddhiehta02\">Riddhi Mehta</a>, <a href=\"https://profiles.wordpress.org/rileybrook\">rileybrook</a>, <a href=\"https://profiles.wordpress.org/noisysocks\">Robert Anderson</a>, <a href=\"https://profiles.wordpress.org/sanchothefat\">Robert O\'Rourke</a>, <a href=\"https://profiles.wordpress.org/robertsky\">robertsky</a>, <a href=\"https://profiles.wordpress.org/_dorsvenabili\">Rocio Valdivia</a>, <a href=\"https://profiles.wordpress.org/rohittm\">Rohit Motwani</a>, <a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>, <a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>, <a href=\"https://profiles.wordpress.org/ryo511\">ryo511</a>, <a href=\"https://profiles.wordpress.org/sagarprajapati\">Sagar Prajapati</a>, <a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>, <a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"https://profiles.wordpress.org/smyoon315\">Sang-Min Yoon</a>, <a href=\"https://profiles.wordpress.org/tinkerbelly\">sarah semark</a>, <a href=\"https://profiles.wordpress.org/scottmweaver\">Scott Weaver</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/sergioestevao\">SergioEstevao</a>, <a href=\"https://profiles.wordpress.org/azchughtai\">Shahjehan Ali</a>, <a href=\"https://profiles.wordpress.org/shaileesheth\">Shailee Sheth</a>, <a href=\"https://profiles.wordpress.org/sharaz\">Sharaz Shahid</a>, <a href=\"https://profiles.wordpress.org/giventofly76\">Shaun sc</a>, <a href=\"https://profiles.wordpress.org/shaunandrews\">shaunandrews</a>, <a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>, <a href=\"https://profiles.wordpress.org/shenkj\">shenkj</a>, <a href=\"https://profiles.wordpress.org/sikander\">sikander</a>, <a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"https://profiles.wordpress.org/siriokun\">siriokun</a>, <a href=\"https://profiles.wordpress.org/sirjonathan\">sirjonathan</a>, <a href=\"https://profiles.wordpress.org/sirreal\">sirreal</a>, <a href=\"https://profiles.wordpress.org/sisanu\">Sisanu</a>, <a href=\"https://profiles.wordpress.org/skorasaurus\">skorasaurus</a>, <a href=\"https://profiles.wordpress.org/butimnoexpert\">Slushman</a>, <a href=\"https://profiles.wordpress.org/ssousa\">Sofia Sousa</a>, <a href=\"https://profiles.wordpress.org/somtijds\">SOMTIJDS</a>, <a href=\"https://profiles.wordpress.org/soean\">Soren Wrede</a>, <a href=\"https://profiles.wordpress.org/spocke\">spocke</a>, <a href=\"https://profiles.wordpress.org/stagger-lee\">Stagger Lee</a>, <a href=\"https://profiles.wordpress.org/sstoqnov\">Stanimir Stoyanov</a>, <a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/stevehenty\">Steve Henty</a>, <a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>, <a href=\"https://profiles.wordpress.org/strategio\">strategio</a>, <a href=\"https://profiles.wordpress.org/stuartfeldt\">stuartfeldt</a>, <a href=\"https://profiles.wordpress.org/tacrapo\">tacrapo</a>, <a href=\"https://profiles.wordpress.org/talldan\">talldan</a>, <a href=\"https://profiles.wordpress.org/tammie_l\">Tammie Lister</a>, <a href=\"https://profiles.wordpress.org/themeroots\">ThemeRoots</a>, <a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>, <a href=\"https://profiles.wordpress.org/thrijith\">Thrijith Thankachan</a>, <a href=\"https://profiles.wordpress.org/hedgefield\">Tim Hengeveld</a>, <a href=\"https://profiles.wordpress.org/timgardner\">timgardner</a>, <a href=\"https://profiles.wordpress.org/timmydcrawford\">Timmy Crawford</a>, <a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>, <a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>, <a href=\"https://profiles.wordpress.org/tlxo\">Toni Laakso</a>, <a href=\"https://profiles.wordpress.org/skithund\">Toni Viemer&#246;</a>, <a href=\"https://profiles.wordpress.org/tobifjellner\">Tor-Bjorn Fjellner</a>, <a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>, <a href=\"https://profiles.wordpress.org/mirucon\">Toshihiro Kanai</a>, <a href=\"https://profiles.wordpress.org/itowhid06\">Towhidul Islam</a>, <a href=\"https://profiles.wordpress.org/travislopes\">Travis Lopes</a>, <a href=\"https://profiles.wordpress.org/truongwp\">truongwp</a>, <a href=\"https://profiles.wordpress.org/tjfunke001\">Tunji Ayoola</a>, <a href=\"https://profiles.wordpress.org/twoelevenjay\">twoelevenjay</a>, <a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>, <a href=\"https://profiles.wordpress.org/vishalkakadiya\">Vishal Kakadiya</a>, <a href=\"https://profiles.wordpress.org/vtrpldn\">Vitor Paladini</a>, <a href=\"https://profiles.wordpress.org/walterebert\">Walter Ebert</a>, <a href=\"https://profiles.wordpress.org/warmarks\">warmarks</a>, <a href=\"https://profiles.wordpress.org/webmandesign\">WebMan Design &#124; Oliver Juhas</a>, <a href=\"https://profiles.wordpress.org/websupporter\">websupporter</a>, <a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>, <a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>, <a href=\"https://profiles.wordpress.org/willybahuaud\">Willy Bahuaud</a>, <a href=\"https://profiles.wordpress.org/wpscholar\">wpscholar</a>, <a href=\"https://profiles.wordpress.org/yahil\">Yahil Madakiya</a>, <a href=\"https://profiles.wordpress.org/yingles\">yingles</a>, <a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"https://profiles.wordpress.org/youthkee\">Yusuke Takahashi</a>, <a href=\"https://profiles.wordpress.org/zebulan\">zebulan</a>, and <a href=\"https://profiles.wordpress.org/ziyaddin\">Ziyaddin Sadigov</a>.\n\n\n\n<p>Finally, thanks to all the community translators who worked on WordPress 5.0. Their efforts bring WordPress 5.0 fully translated to 37 languages at release time, with more on the way.</p>\n\n\n\n<p>If you want to follow along or help out, check out <a href=\"https://make.wordpress.org/\">Make WordPress</a> and our <a href=\"https://make.wordpress.org/core/\">core development blog</a>.</p>\n\n\n\n<p>Thanks for choosing WordPress!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6328\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:39:\"\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"WordPress 5.0 RC3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/news/2018/12/wordpress-5-0-rc3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 04 Dec 2018 07:07:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:3:\"5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6322\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:388:\"The third release candidate for WordPress 5.0 is now available! WordPress 5.0 will be released on December 6, 2018. This is a big release and needs&#160;your&#160;help—if you haven’t tried 5.0 yet, now is the time! To test WordPress 5.0, you can use the&#160;WordPress Beta Tester&#160;plugin or you can&#160;download the release candidate here&#160;(zip). For details about [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2791:\"\n<p>The third release candidate for WordPress 5.0 is now available!</p>\n\n\n\n<p><strong>WordPress 5.0 will be released on </strong><a href=\"https://make.wordpress.org/core/2018/12/04/new-5-0-target-date/\"><strong>December 6, 2018</strong></a>. This is a big release and needs&nbsp;<em>your</em>&nbsp;help—if you haven’t tried 5.0 yet, now is the time!</p>\n\n\n\n<p>To test WordPress 5.0, you can use the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-RC3.zip\">download the release candidate here</a>&nbsp;(zip).</p>\n\n\n\n<p>For details about what to expect in WordPress 5.0, please see the&nbsp;<a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\">first release candidate post</a>.</p>\n\n\n\n<p>This release candidate includes a fix for some scripts not loading on subdirectory installs (<a href=\"https://core.trac.wordpress.org/ticket/45469\">#45469</a>), and user locale settings not being loaded in the block editor (<a href=\"https://core.trac.wordpress.org/ticket/45465\">#45465</a>). Twenty Nineteen has also had a couple of minor tweaks.</p>\n\n\n\n<h2>Plugin and Theme Developers</h2>\n\n\n\n<p>Please test your plugins and themes against WordPress 5.0 and update the&nbsp;<em>Tested up to</em>&nbsp;version in the readme to 5.0. If you find compatibility problems, please be sure to post to the&nbsp;<a href=\"https://wordpress.org/support/forum/alphabeta/\">support forums</a>&nbsp;so we can figure those out before the final release. An in-depth field guide to developer-focused changes is coming soon on the&nbsp;<a href=\"https://make.wordpress.org/core/\">core development blog</a>. In the meantime, you can review the&nbsp;<a href=\"https://make.wordpress.org/core/tag/5.0+dev-notes/\">developer notes for 5.0</a>.</p>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p>If you think you’ve found a bug, you can post to the&nbsp;<a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;<a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find&nbsp;<a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p><em>WordPress Five Point Oh<br>Is just a few days away!<br>Nearly party time!</em> <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f389.png\" alt=\"🎉\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6322\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"The Month in WordPress: November 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wordpress.org/news/2018/12/the-month-in-wordpress-november-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 03 Dec 2018 17:43:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Month in WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6318\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:345:\"WordPress 5.0 is almost ready for release, including an all-new content editing experience. Volunteers all across the project are gearing up for the launch and making sure everything is ready. Read on to find out what&#8217;s been happening and how you can get involved. WordPress 5.0 Close to Launch The release date for WordPress 5.0 [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Hugh Lashbrooke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:6593:\"\n<p>WordPress 5.0 is almost ready for release, including an all-new content editing experience. Volunteers all across the project are gearing up for the launch and making sure everything is ready. Read on to find out what&#8217;s been happening and how you can get involved.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>WordPress 5.0 Close to Launch</h2>\n\n\n\n<p>The release date for WordPress 5.0 has not yet been set, but the second release candidate (RC) <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-rc2/\">is now available</a>. The final release date will be determined based on feedback and testing of this RC. The Core development team has been posting <a href=\"https://make.wordpress.org/core/2018/12/03/5-0-gutenberg-status-update-dec-3/\">daily updates</a> on the progress of their work on v5.0, with the number of open issues for this release decreasing every day.<br></p>\n\n\n\n<p>The primary feature of this release is <a href=\"https://wordpress.org/gutenberg/\">the new editor</a> that will become the default WordPress experience going forward. A number of people have been seeking more direct feedback from the release leads about the progress of this release, which <a href=\'https://profiles.wordpress.org/matt/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>matt</a> has facilitated by hosting <a href=\"https://make.wordpress.org/core/2018/11/29/gutenberg-5-0-listening-office-hours/\">one-to-one discussions</a> with anyone in the community who wanted to talk with him about it. He has also published <a href=\"https://ma.tt/2018/11/a-gutenberg-faq/\">an extended FAQ</a> covering many of the questions people have been asking.<br></p>\n\n\n\n<p>Alongside the development of the new editor, the Mobile team has been working hard to bring the WordPress mobile apps up to speed. They plan to make a beta version available <a href=\"https://make.wordpress.org/mobile/2018/11/15/gutenberg-in-the-apps-what-to-expect/\">in February 2019</a>.<br></p>\n\n\n\n<p>Want to get involved in developing WordPress Core in 5.0 and beyond? Follow <a href=\"https://make.wordpress.org/core\">the Core team blog</a> and join the #core channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.</p>\n\n\n\n<h2>New WordPress Support Platform Goes Live</h2>\n\n\n\n<p>WordPress user documentation has long been hosted on the <a href=\"https://codex.wordpress.org/\">WordPress Codex</a>, but for the past couple of years an ambitious project has been underway to move that content to a freshly-built WordPress-based platform. This project, named “HelpHub,” is now live and <a href=\"https://wordpress.org/support/\">the official home of WordPress Support</a>.<br></p>\n\n\n\n<p>There is still plenty of content that needs to be migrated from the Codex to HelpHub, but the initial move is done and the platform is ready to have all WordPress’ user documentation moved across. HelpHub will be the first place for support, encouraging users to find solutions for themselves before posting in the <a href=\"https://wordpress.org/support/forums/\">forums</a>.<br></p>\n\n\n\n<p>Want to get involved in populating HelpHub with content, or with its future development? Follow <a href=\"https://make.wordpress.org/docs/\">the Documentation team blog</a> and join the #docs channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.</p>\n\n\n\n<h2>Spanish WordPress Community Pushes Translations Forward</h2>\n\n\n\n<p>The WordPress community in Spain has been hard at work making sure as much of the WordPress project as possible is available in Spanish. <a href=\"https://es.wordpress.org/2018/11/07/logros-equipo-traducciones-wordpress-espana/\">They have recently translated more of the project than ever</a> — including WordPress Core, WordPress.org, the mobile apps and the top 120 plugins in the Directory.<br></p>\n\n\n\n<p>This achievement has largely been possible due to the fact that <a href=\"https://make.wordpress.org/polyglots/teams/?locale=es_ES\">the Spanish translation team</a> has over 2,500 individuals contributing to it, making it the largest translation team across the whole project. <br></p>\n\n\n\n<p>Want to get involved in translating WordPress into your local language? You can <a href=\"https://translate.wordpress.org/\">jump straight into translations</a>, follow <a href=\"https://make.wordpress.org/polyglots/\">the Polyglots team blog</a> and join the #polyglots channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Further Reading:</h2>\n\n\n\n<ul><li>All volunteer teams have checked in with their <a href=\"https://wordpress.org/news/2018/11/quarterly-updates-q3-2018/\">latest quarterly updates</a>.</li><li>The WordPress Support Team <a href=\"https://make.wordpress.org/support/2018/11/new-volunteer-orientation-for-wp-support-contributors-dec-9/\">is hosting an orientation</a> for new Support volunteers on December 9.</li><li><a href=\"https://2018.us.wordcamp.org/tickets/\">Tickets are now available</a> to watch the WordCamp US livestream for free.</li><li>WordPress Core <a href=\"https://core.trac.wordpress.org/ticket/45287\">has switched to a WP-CLI command</a> for generating localization files.</li><li>WordPress Coding Standards v1.2.0 <a href=\"https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/releases/tag/1.2.0\">has been released</a> with some really useful improvements.</li><li>The first ever <a href=\"https://2019.nordic.wordcamp.org/\">WordCamp Nordic</a> is taking place on March 7-8, 2019 with ticket sales now open.</li><li>The WordCamp Incubator program is going very well this year — <a href=\"https://make.wordpress.org/community/2018/11/27/wordcamp-incubator-2018-update-thread-november-edition/\">you can see the latest updates here</a>.</li><li>The Mobile Team is looking for testers for the upcoming v11.3 release of the WordPress mobile apps on <a href=\"https://make.wordpress.org/mobile/2018/11/21/call-for-testing-wordpress-for-android-11-3/\">Android</a> and <a href=\"https://make.wordpress.org/mobile/2018/11/21/call-for-testing-wordpress-for-ios-11-3/\">iOS</a>.</li><li>The WordCamp Europe team is looking for local communities to <a href=\"https://2019.europe.wordcamp.org/2018/11/29/call-for-host-city/\">apply to be the host city</a> for the 2020 event.</li></ul>\n\n\n\n<p><em>If you have a story we should consider including in the next “Month in WordPress” post, please </em><a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\"><em>submit it here</em></a><em>.</em><br></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6318\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:39:\"\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"WordPress 5.0 RC2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/news/2018/11/wordpress-5-0-rc2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Nov 2018 23:16:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:3:\"5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6287\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:332:\"The second release candidate for WordPress 5.0 is now available! This is an important milestone, as we near the release of WordPress 5.0. A final release date will be announced soon, based on feedback from this release candidate. Things are appearing very stable and we hope to announce a date soon. This is a big release [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3296:\"\n<p>The second release candidate for WordPress 5.0 is now available!</p>\n\n\n\n<p>This is an important milestone, as we near the release of WordPress 5.0. A final release date will be announced soon, based on feedback from this release candidate. Things are appearing very stable and we hope to announce a date soon. This is a big release and needs <em>your</em> help—if you haven’t tried 5.0 yet, now is the time! </p>\n\n\n\n<p>To test WordPress 5.0, you can use the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-RC2.zip\">download the release candidate here</a>&nbsp;(zip).</p>\n\n\n\n<p>For details about what to expect in WordPress 5.0, please see the <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\">previous release candidate post</a>.</p>\n\n\n\n<h2>Significant changes</h2>\n\n\n\n<ul><li>We stopped rendering&nbsp;<em>AdminNotices</em>&nbsp;compatibility component, as this previous attempt at backward compatibility was bringing in numerous incompatible banners and notices from plugins.</li><li>An update to the parser to better deal with malformed HTML that could cause a loop. We&#8217;re only aware of this in the wild being triggered once in the <a href=\"https://gutenstats.blog/\">over a million posts</a> made with Gutenberg, but it caused a loop so we wanted to fix for RC2.</li></ul>\n\n\n\n<h2>Cosmetic and minor changes in RC2</h2>\n\n\n\n<ul><li>Accessibility: Simplify sidebar tabs&nbsp;aria-labels.</li><li>Make the&nbsp;Image&nbsp;Link URL field readonly.</li><li>Internationalization: Merge&nbsp;similar text strings that differed only in capitalization.</li><li>CSS: Improve block preview&nbsp;styling.</li><li>CSS: Fix&nbsp;visual issues&nbsp;with&nbsp;Button&nbsp;block text wrap.</li><li>Fix&nbsp;getSelectedBlockClientId selector.</li><li>Fix&nbsp;Classic&nbsp;block&nbsp;not showing galleries on a grid.</li><li>Fix an issue where the block toolbar&nbsp;would cause an image to jump&nbsp;downwards when the&nbsp;<em>wide</em>&nbsp;or&nbsp;<em>full</em>&nbsp;alignments were activated.</li><li>Move editor specific styles&nbsp;from style.scss to editor.scss in&nbsp;Cover&nbsp;block.</li><li>Fix modals&nbsp;in Microsoft Edge browser.</li><li>Fix Microsoft IE11 focus loss&nbsp;after TinyMCE init.&nbsp;Add&nbsp;IE check.</li><li>Fix Microsoft IE11 input when mounting TinyMCE.</li><li>Change @package names&nbsp;to WordPress.</li></ul>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p>If you think you’ve found a bug, you can post to the <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<pre class=\"wp-block-verse\"><em>RC bittersweet.<br>We welcome in Gutenberg,<br>Vale Gutenbeard.</em></pre>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6287\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:39:\"\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress 5.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 23 Nov 2018 09:46:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:3:\"5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6257\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:323:\"The first release candidate for WordPress 5.0 is now available! This is an important milestone, as we near the release of WordPress 5.0.&#160;The WordPress 5.0 release date has shifted from the 27th to give more time for the RC to be fully tested. A final release date will be announced soon, based on feedback on [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matias Ventura\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:6009:\"\n<p>The first release candidate for WordPress 5.0 is now available!</p>\n\n\n\n<p>This is an important milestone, as we near the release of WordPress 5.0.&nbsp;<strong>The WordPress 5.0 release date has shifted from the 27th to give more time for the RC to be fully tested</strong>. A final release date will be announced soon, based on feedback on the RC. This is a big release and needs <em>your</em> help—if you haven’t tried 5.0 yet, now is the time!&nbsp;</p>\n\n\n\n<p>To test WordPress 5.0, you can use the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-RC1.zip\">download the release candidate here</a>&nbsp;(zip).</p>\n\n\n\n<h2>What&#8217;s in WordPress 5.0?</h2>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?resize=632%2C316&#038;ssl=1\" alt=\"Screenshot of the new block editor interface.\" class=\"wp-image-6271\" srcset=\"https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?resize=1024%2C512&amp;ssl=1 1024w, https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?resize=300%2C150&amp;ssl=1 300w, https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?resize=768%2C384&amp;ssl=1 768w, https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?w=1264&amp;ssl=1 1264w, https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?w=1896&amp;ssl=1 1896w\" sizes=\"(max-width: 632px) 100vw, 632px\" data-recalc-dims=\"1\" /><figcaption>The new block-based post editor.</figcaption></figure>\n\n\n\n<p>WordPress 5.0 introduces the <a href=\"https://wordpress.org/gutenberg/\">new block-based post editor</a>. This is the first step toward an exciting new future with a streamlined editing experience across your site. You’ll have more flexibility with how content is displayed, whether you are building your first site, revamping your blog, or write code for a living.</p>\n\n\n\n<p>The block editor is&nbsp;<a href=\"https://gutenstats.blog/\">used on over a million sites</a>, we think it&#8217;s ready to be used on all WordPress sites. We do understand that some sites might need some extra time, though. If that&#8217;s you, please install the <a href=\"https://wordpress.org/plugins/classic-editor/\">Classic Editor plugin</a>, you&#8217;ll continue to use the classic post editor when you upgrade to WordPress 5.0.</p>\n\n\n\n<p>Twenty Nineteen is WordPress&#8217; new default theme, it&nbsp;features custom styles for the blocks available by default in 5.0.&nbsp;Twenty Nineteen is designed to work for a wide variety of use cases. Whether you’re running a photo blog, launching a new business, or supporting a non-profit, Twenty Nineteen is flexible enough to fit your needs.</p>\n\n\n\n<p>The block editor is a big change, but that&#8217;s not all. We&#8217;ve made some smaller changes as well,&nbsp; including:</p>\n\n\n\n<ul><li>All of the previous default themes, from Twenty Ten through to Twenty Seventeen, have been updated to support the block editor.</li><li>You can improve the accessibility of the content you write, now that <a href=\"https://core.trac.wordpress.org/ticket/30421\">simple ARIA labels</a>&nbsp;can be saved in posts and pages.</li><li>WordPress 5.0 officially supports the upcoming PHP 7.3 release: if you&#8217;re using an older version, we encourage you to <a href=\"https://wordpress.org/support/upgrade-php/\">upgrade PHP</a>&nbsp;on your site.</li><li>Developers can now add translatable strings directly to your JavaScript code, using the new <a href=\"https://make.wordpress.org/core/2018/11/09/new-javascript-i18n-support-in-wordpress/\">JavaScript language packs</a>.</li></ul>\n\n\n\n<p>You can read more about the fixes and changes since  Beta 5 <a href=\"https://make.wordpress.org/core/2018/11/20/whats-new-in-gutenberg-20th-november/\">in the last update post</a>.</p>\n\n\n\n<p>For more details about what’s new in version 5.0, check out the&nbsp;<a href=\"https://wordpress.org/news/2018/10/wordpress-5-0-beta-1/\">Beta 1</a>,&nbsp;<a href=\"https://wordpress.org/news/2018/10/wordpress-5-0-beta-2/\">Beta 2</a>,&nbsp;<a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-3/\">Beta 3</a>, <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-4/\">Beta 4</a> and&nbsp;<a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-5/\">Beta 5</a>&nbsp;blog posts.</p>\n\n\n\n<h2>Plugin and Theme Developers</h2>\n\n\n\n<p>Please test your plugins and themes against WordPress 5.0 and update the&nbsp;<em>Tested up to</em>&nbsp;version in the readme to 5.0. If you find compatibility problems, please be sure to post to the <a href=\"https://wordpress.org/support/forum/alphabeta/\">support forums</a> so we can figure those out before the final release. An in-depth field guide to developer-focused changes is coming soon on the&nbsp;<a href=\"https://make.wordpress.org/core/\">core development blog</a>. In the meantime, you can review the&nbsp;<a href=\"https://make.wordpress.org/core/tag/5.0+dev-notes/\">developer notes for 5.0</a>.</p>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<p style=\"background-color:#f9f4e8\" class=\"has-background has-medium-font-size\"><em>Ruedan los bloques<br>Contando vivos cuentos<br>Que se despiertan</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6257\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:39:\"\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 5.0 Beta 5\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-5/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 01:09:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:3:\"5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6250\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:360:\"WordPress 5.0 Beta 5 is now available! This software is still in development,&#160;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version. There are two ways to test this WordPress 5.0 Beta: try the&#160;WordPress Beta Tester&#160;plugin (you’ll want “bleeding edge nightlies”), or [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Jonathan Desrosiers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4738:\"\n<p>WordPress 5.0 Beta 5 is now available!</p>\n\n\n\n<p><strong>This software is still in development,</strong>&nbsp;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version.</p>\n\n\n\n<p>There are two ways to test this WordPress 5.0 Beta: try the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin (you’ll want “bleeding edge nightlies”), or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-beta5.zip\">download the beta here</a>&nbsp;(zip).</p>\n\n\n\n<p><strong>Reminder: the WordPress 5.0 release date has changed</strong>. It is now scheduled for release on&nbsp;<a href=\"https://make.wordpress.org/core/5-0/\">November 27</a>, and we need your help to get there. Here are some of the big issues that we’ve fixed since Beta 4:</p>\n\n\n\n<h2>Block Editor</h2>\n\n\n\n<p>The block editor has been updated to match the <a href=\"https://make.wordpress.org/core/2018/11/15/whats-new-in-gutenberg-15th-november-2/\">Gutenberg 4.4 release</a>, the major changes  include:</p>\n\n\n\n<ul><li>&nbsp;A <a href=\"https://github.com/WordPress/gutenberg/pull/11874\">permalink panel has been added to the document sidebar</a> to make it easier to find.</li><li>Editor document panels can now be <a href=\"https://github.com/WordPress/gutenberg/pull/11802\">programmatically removed</a>.</li><li>The uploading indicator for images and galleries has been replaced with a&nbsp;<a href=\"https://github.com/WordPress/gutenberg/pull/11876\">spinner and faded out image</a>.</li><li>The text and code editing blocks will now <a href=\"https://github.com/WordPress/gutenberg/pull/11750\">use the full width of the editor</a>.</li><li>Image handling has been improved. Images now  take up the right amount of space for <a href=\"https://github.com/WordPress/gutenberg/pull/11846\">themes with wider editors</a> (like Twenty Nineteen).<br></li><li>Hover styles are now <a href=\"https://github.com/WordPress/gutenberg/pull/10333\">correctly disabled for mobile devices</a>.</li><li>The i18n module has been refactored to benefit from <a href=\"https://github.com/WordPress/gutenberg/pull/11493\">significant performance gains</a>.</li></ul>\n\n\n\n<p>Additionally, there have been some pesky bugs fixed:</p>\n\n\n\n<ul><li>Better handling for <a href=\"https://github.com/WordPress/gutenberg/pull/11590\">links without an href</a> attribute, which were showing as <code>undefined</code>.</li><li>Japanese text (double byte characters) are <a href=\"https://github.com/WordPress/gutenberg/pull/11908\">now usable in the list block</a>.</li><li>Better handling for different text encodings (e.g. emoji) within a block <a href=\"https://github.com/WordPress/gutenberg/pull/11771\">in block validation</a>.</li></ul>\n\n\n\n<p>A full list of changes can be found in the <a href=\"https://make.wordpress.org/core/2018/11/15/whats-new-in-gutenberg-15th-november-2/\">Gutenberg 4.4 release post</a>.<br></p>\n\n\n\n<h2>PHP 7.3 Support</h2>\n\n\n\n<p>The final known PHP 7.3 compatibility issue has been fixed. You can brush up on what you need to know about PHP 7.3 and WordPress by checking out the <a href=\"https://make.wordpress.org/core/2018/10/15/wordpress-and-php-7-3/\">developer note on the Make WordPress Core blog</a>.<br></p>\n\n\n\n<h2>Twenty Nineteen</h2>\n\n\n\n<p>Work on making Twenty Nineteen ready for prime time continues on its <a href=\"https://github.com/WordPress/twentynineteen\">GitHub repository</a>. This update includes <a href=\"https://core.trac.wordpress.org/changeset/43904\">a host of tweaks and bug fixes</a>, including:</p>\n\n\n\n<ul><li>Add <code>.button</code> class support.</li><li>Fix editor font-weights for headings.</li><li>Improve support for sticky toolbars in the editor.</li><li>Improve text-selection custom colors for better contrast and legibility.</li><li>Fix editor to prevent Gutenberg&#8217;s meta boxes area from overlapping the content.</li></ul>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6250\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:39:\"\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 5.0 Beta 4\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 13 Nov 2018 01:27:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:3:\"5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6241\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:359:\"WordPress 5.0 Beta 4 is now available! This software is still in development,&#160;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version. There are two ways to test the WordPress 5.0 Beta: try the&#160;WordPress Beta Tester&#160;plugin (you’ll want “bleeding edge nightlies”), or [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3700:\"\n<p>WordPress 5.0 Beta 4 is now available!</p>\n\n\n\n<p><strong>This software is still in development,</strong>&nbsp;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version.</p>\n\n\n\n<p>There are two ways to test the WordPress 5.0 Beta: try the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin (you’ll want “bleeding edge nightlies”), or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-beta4.zip\">download the beta here</a>&nbsp;(zip).</p>\n\n\n\n<p><strong>The WordPress 5.0 release date has changed</strong>, it is now scheduled for release on&nbsp;<a href=\"https://make.wordpress.org/core/5-0/\">November 27</a>, and we need your help to get there. Here are some of the big issues that we’ve fixed since Beta 3:</p>\n\n\n\n<h2>Block Editor</h2>\n\n\n\n<p>The block editor has been updated to match the <a href=\"https://make.wordpress.org/core/2018/11/12/whats-new-in-gutenberg-12th-november/\">Gutenberg 4.3 release</a>, the major changes  include:</p>\n\n\n\n<ul><li>An <a href=\"https://github.com/WordPress/gutenberg/pull/7718\">Annotations API</a>, allowing plugins to add  contextual data as you write.</li><li>More consistent keyboard navigation between blocks, as well as back-and-forth between different areas of the interface.</li><li>Improved accessibility, with additional  labelling and speech announcements.</li></ul>\n\n\n\n<p>Additionally, there have been some bugs fixed that popped up in beta 3:</p>\n\n\n\n<ul><li>Better support for plugins that have more advanced meta box usage.</li><li>Script concatenation is now supported.</li><li>Ajax calls could occasionally cause PHP errors.</li></ul>\n\n\n\n<h2>Internationalisation</h2>\n\n\n\n<p>We&#8217;ve added an API for translating your plugin and theme strings in JavaScript files! The block editor is now using this, and you can start using it, too. Check out the <a href=\"https://make.wordpress.org/core/2018/11/09/new-javascript-i18n-support-in-wordpress/\">developer note</a>&nbsp;to get started.</p>\n\n\n\n<h2>Twenty Nineteen</h2>\n\n\n\n<p>Twenty Nineteen is being polished over on its <a href=\"https://github.com/WordPress/twentynineteen\">GitHub repository</a>. This update includes <a href=\"https://core.trac.wordpress.org/changeset/43892\">a host of tweaks and bug fixes</a>, including:</p>\n\n\n\n<ul><li>Menus now  properly support keyboard and touch interactions.</li><li>A footer menu has been added for secondary page links.</li><li>Improved backwards compatibility with older versions of WordPress.</li></ul>\n\n\n\n<h2>Default Themes</h2>\n\n\n\n<p>All of the older default themes—from Twenty Ten through to Twenty Seventeen—have polished  styling in the block editor.</p>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p><em>International-<br>isation is a word with<br>many syllables.</em></p>\n\n\n\n<p><em>Meta boxes are<br>the original style block.<br>Old is new again.</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6241\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:36:\"\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 5.0 Beta 3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Nov 2018 00:20:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6236\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:359:\"WordPress 5.0 Beta 3 is now available! This software is still in development,&#160;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version. There are two ways to test the WordPress 5.0 Beta: try the&#160;WordPress Beta Tester&#160;plugin (you’ll want “bleeding edge nightlies”), or [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3198:\"\n<p>WordPress 5.0 Beta 3 is now available!</p>\n\n\n\n<p><strong>This software is still in development,</strong>&nbsp;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version.</p>\n\n\n\n<p>There are two ways to test the WordPress 5.0 Beta: try the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin (you’ll want “bleeding edge nightlies”), or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-beta3.zip\">download the beta here</a>&nbsp;(zip).</p>\n\n\n\n<p>WordPress 5.0 is slated for release on&nbsp;<a href=\"https://make.wordpress.org/core/5-0/\">November 19</a>, and we need your help to get there. Here are some of the big issues that we&#8217;ve fixed since Beta 2:</p>\n\n\n\n<h2>Block Editor</h2>\n\n\n\n<p>The block editor has been updated to include all of the features and bug fixes from the upcoming <a href=\"https://make.wordpress.org/core/2018/10/31/whats-new-in-gutenberg-31st-october-2/\">Gutenberg 4.2 release</a>. Additionally, there are some newer bug fixes and features, such as:</p>\n\n\n\n<ul><li>Adding support for the &#8220;Custom Fields&#8221; meta box.</li><li>Improving the reliability of REST API requests.</li><li>A myriad of minor tweaks and improvements.</li></ul>\n\n\n\n<h2>Twenty Nineteen</h2>\n\n\n\n<p>Twenty Nineteen has been updated from its <a href=\"https://github.com/WordPress/twentynineteen\">GitHub repository</a>, this version is full of new goodies to check out:</p>\n\n\n\n<ul><li>Adds support for Selective Refresh Widgets in the Customiser.</li><li>Adds support for Responsive Embeds.</li><li>Tweaks to improve readability and functionality on mobile devices.</li><li>Fixes nested blocks appearing wider than they should be.</li><li>Fixes some errors in older PHP versions, and in IE11.</li></ul>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English? <a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a> </p>\n\n\n\n<p>If you&#8217;re able to contribute with coding or testing changes, we have <a href=\"https://make.wordpress.org/core/2018/11/02/upcoming-5-0-bug-scrubs/\">a multitude of bug scrubs</a> scheduled this week, we&#8217;d love to have as many people as we can ensuring all bugs reported get the attention they deserve.</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p><em>WordPress Five Point Oh<br>is just two short weeks away.<br>Thank you for helping!</em> <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f496.png\" alt=\"💖\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /><em><br></em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6236\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:36:\"\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Quarterly Updates | Q3 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2018/11/quarterly-updates-q3-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Nov 2018 16:46:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:7:\"General\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"Updates\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6206\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:347:\"To keep everyone aware of big projects and efforts across WordPress contributor teams, I&#8217;ve reached out to each team&#8217;s listed representatives. I asked each of them to share their Top Priority (and when they hope for it to be completed), as well as their biggest Wins and Worries. Have questions? I&#8217;ve included a link to [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Josepha\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:14629:\"\n<p><em>To keep everyone aware of big projects and efforts across WordPress contributor teams, I&#8217;ve reached out to each team&#8217;s <a href=\"https://make.wordpress.org/updates/team-reps/\">listed representatives</a>. I asked each of them to share their Top Priority (and when they hope for it to be completed), as well as their biggest Wins and Worries. Have questions? I&#8217;ve included a link to each team&#8217;s site in the headings.</em></p>\n\n\n<h2><a href=\"https://make.wordpress.org/accessibility/\">Accessibility</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/joedolson/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>joedolson</a>, <a href=\'https://profiles.wordpress.org/audrasjb/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>audrasjb</a>, <a href=\'https://profiles.wordpress.org/arush/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>arush</a></li>\n<li><strong>Priority</strong>: Work on authoring a manual for assistive technology users on Gutenberg, led by Claire Brotherton (<a href=\'https://profiles.wordpress.org/abrightclearweb/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>abrightclearweb</a>). Continue to work on improving the overall user experience in Gutenberg. Update and organize the WP A11y handbook.</li>\n<li><strong>Struggle</strong>: Lack of developers and accessibility experts to help test and code the milestone issues. Still over 100 outstanding issues, and developing the Gutenberg AT manual helps expose additional issues. The announcement of an accessibility focus on 4.9.9 derailed our planning for Gutenberg in September with minimal productivity, as that goal was quickly withdrawn from the schedule.</li>\n<li><strong>Big Win</strong>: Getting focus constraint implemented in popovers and similar components in Gutenberg.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/cli/\">CLI</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: @danielbachhuber, <a href=\'https://profiles.wordpress.org/schlessera/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>schlessera</a></li>\n<li><strong>Priority</strong>: Current priority is v2.1.0 of WP-CLI, to polish the major refactoring v2.0.0 introduced. You can <a href=\"https://make.wordpress.org/cli/good-first-issues/\">join in or follow progress</a> on their site.</li>\n<li><strong>Struggle</strong>: Getting enough contributors to make peer-review possible/manageable.</li>\n<li><strong>Big Win</strong>: The major refactoring of v2 was mostly without any negative impacts on existing installs. It provided substantial improvements to maintainability including: faster and more reliable testing, more straight-forward changes to individual packages, and simpler contributor on-boarding.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/community/\">Community</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/francina/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>francina</a>, <a href=\'https://profiles.wordpress.org/hlashbrooke/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>hlashbrooke</a></li>\n<li><strong>Priority</strong>: Supporting contributors of all levels via: monthly <a href=\"https://make.wordpress.org/community/2018/10/08/announcement-monthly-chat-for-wordcamp-organisers/\">WordCamp Organizers chat</a>, better onboarding with a translated <a href=\"https://make.wordpress.org/community/2017/08/11/global-community-team-welcome-pack/\">welcome pack</a>, and Contribution Drive documentation.</li>\n<li><strong>Struggle</strong>: Fewer contributors than usual.</li>\n<li><strong>Big Win</strong>: <a href=\"https://make.wordpress.org/community/2018/09/21/meetup-application-vetting-sprint-26-27-september/\">Meetup Vetting Sprint</a>! </li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/core/\">Core</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/jeffpaul/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>jeffpaul</a></li>\n<li><strong>Priority</strong>: Continued preparation for the 5.0 release cycle and Gutenberg.</li>\n<li><strong>Struggle</strong>: Identifying tasks for first time contributors, as well as for new-to-JS contributors.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/design/\">Design</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/melchoyce/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>melchoyce</a>, <a href=\'https://profiles.wordpress.org/karmatosed/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>karmatosed</a>, <a href=\'https://profiles.wordpress.org/boemedia/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>boemedia</a>, <a href=\'https://profiles.wordpress.org/joshuawold/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>joshuawold</a>, <a href=\'https://profiles.wordpress.org/mizejewski/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>mizejewski</a></li>\n<li><strong>Priority</strong>: Preparing for WordPress 5.0 and continuing to work on better onboarding practices.</li>\n<li><strong>Struggle</strong>: Identifying tasks for contributor days, especially for small- to medium-sized tasks that can be fit into a single day.</li>\n<li><strong>Big Win</strong>: Regular contributions are starting to build up.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/docs/\">Documentation</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/kenshino/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>kenshino</a></li>\n<li><strong>Priority</strong>: Getting HelpHub out before WordPress 5.0&#8217;s launch to make sure Gutenberg User Docs have a permanent position to reside</li>\n<li><strong>Struggle</strong>: Getting the documentation from HelpHub into WordPress.org/support is more manual than initially anticipated.</li>\n<li><strong>Big Win</strong>: Had a good discussion with the Gutenberg team about their docs and how WordPress.org expects documentation to be distributed (via DevHub, Make and HelpHub). Getting past the code blocks to release HelpHub (soon)</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/hosting/\">Hosting</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/mikeschroder/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>mikeschroder</a>, <a href=\'https://profiles.wordpress.org/jadonn/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>jadonn</a></li>\n<li><strong>Priority</strong>: Helping Gutenberg land well at hosts for users in 5.0.</li>\n<li><strong>Struggle</strong>: Short time frame with few resources to accomplish priority items.</li>\n<li><strong>Big Win</strong>: Preparing Try Gutenberg support guide for hosts during the rollout and good reception from users following it.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/marketing/\">Marketing</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/bridgetwillard/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>bridgetwillard</a></li>\n<li><strong>Priority</strong>: Continuing to write and publish case studies from the community.</li>\n<li><strong>Big Win</strong>: Onboarding guide is going well and is currently being <a href=\"https://translate.wordpress.org/projects/meta/get-involved\">translated</a>.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/meta/\">Meta</a> (WordPress.org Site)</h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/tellyworth/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>tellyworth</a>, <a href=\'https://profiles.wordpress.org/coffee2code/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>coffee2code</a></li>\n<li><strong>Priority</strong>: Support for other teams in the lead up to, and the follow-up of, the release of WP 5.0. ETA is the WP 5.0 release date (Nov 19) and thereafter, unless it gets bumped to next quarter.</li>\n<li><strong>Struggle</strong>: Maintaining momentum on tickets (still).</li>\n<li><strong>Big Win</strong>: Launch of front-end demo of Gutenberg on https://wordpress.org/gutenberg/</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/mobile/\">Mobile</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/elibud/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>elibud</a></li>\n<li><strong>Priority</strong>: Have an alpha version of Gutenberg in the WordPress apps, ETA end of year 2018.</li>\n<li><strong>Struggle</strong>: Unfamiliar tech stack and the goal of reusing as much of Gutenberg-web&#8217;s code as possible.</li>\n<li><strong>Big Win</strong>: Running mobile tests on web&#8217;s PRs.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/plugins/\">Plugins</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/ipstenu/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>ipstenu</a></li>\n<li><strong>Priority</strong>: Cleaning up &#8216;inactive&#8217; users, which was supposed to be complete but some work preparing for 5.0 was necessary.</li>\n<li><strong>Struggles</strong>: Devnotes are lacking for the upcoming release which slows progress.</li>\n<li><strong>Big Win</strong>: No backlog even though a lot were out!</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/polyglots/\">Polyglots</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/petya/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>petya</a>, <a href=\'https://profiles.wordpress.org/ocean90/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>ocean90</a>, <a href=\'https://profiles.wordpress.org/nao/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>nao</a>, <a href=\'https://profiles.wordpress.org/chantalc/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>chantalc</a>, <a href=\'https://profiles.wordpress.org/deconf/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>deconf</a>, <a href=\'https://profiles.wordpress.org/casiepa/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>casiepa</a></li>\n<li><strong>Priority</strong>: Help re-activating inactive locale teams.</li>\n<li><strong>Struggle</strong>: Many GTEs are having a hard time keeping up with incoming translation <a href=\"https://make.wordpress.org/polyglots/?resolved=unresolved&amp;tags=editor-requests\">validation and PTE requests</a>.</li>\n<li><strong>Big Win</strong>: Made some progress in locale research and reassigning new GTEs.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/support/\">Support</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/clorith/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>clorith</a></li>\n<li><strong>Priority:</strong> Preparing for the upcoming 5.0 release</li>\n<li><strong>Struggle</strong>: Finding a good balance between how much we want to help people and how much we are able to help people. Also, contributor recruitment (always a crowd favorite!)</li>\n<li><strong>Big Win</strong>: How well the team, on a global level, has managed to maintain a good flow of user engagement through support.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/themes/\">Theme Review</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/acosmin/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>acosmin</a>, <a href=\'https://profiles.wordpress.org/rabmalin/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>rabmalin</a>, <a href=\'https://profiles.wordpress.org/thinkupthemes/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>thinkupthemes</a>, <a href=\'https://profiles.wordpress.org/williampatton/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>williampatton</a></li>\n<li><strong>Priority</strong>: Implementing the Theme Sniffer plugin on WordPress.org which is one step forward towards automation. ETA early 2019</li>\n<li><strong>Struggle</strong>: Not having so many contributors/reviewers.</li>\n<li><strong>Big Win</strong>: Implementing <a href=\"https://make.wordpress.org/themes/2018/10/25/new-requirements/\">multiple requirements</a> into our review flow, like screenshots and readme.txt requirements.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<p><!-- /wp:list --><!-- wp:heading --></p>\n<h2><a href=\"https://make.wordpress.org/training/\">Training</a></h2>\n<p><!-- /wp:heading --><!-- wp:list --></p>\n<ul>\n<li><strong>Contacted</strong>: <a href=\'https://profiles.wordpress.org/bethsoderberg/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>bethsoderberg</a>, <a href=\'https://profiles.wordpress.org/juliek/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>juliek</a></li>\n<li><strong>Priority:</strong> Getting the learn.wordpress.org site designed, developed, and being able to publish lesson plans to it.</li>\n<li><strong>Struggle:</strong> Getting contributors onboard and continually contributing. Part of that is related to the learn.wordpress.org site. People like to see their contributions.</li>\n<li><strong>Big Win</strong>: We have our new workflow and tools in place. We are also streamlining that process to help things go from idea to publication more quickly.</li>\n</ul>\n<p><!-- /wp:list --><!-- wp:paragraph --></p>\n<p><em>Interested in updates from the last quarter? You can find those here: <a href=\"https://wordpress.org/news/2018/07/quarterly-updates-q2-2018/\">https://wordpress.org/news/2018/07/quarterly-updates-q2-2018/</a></em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6206\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:4:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"The Month in WordPress: October 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wordpress.org/news/2018/11/the-month-in-wordpress-october-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Nov 2018 08:40:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Month in WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6230\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:331:\"Teams across the WordPress project are working hard to make sure everything is ready for the upcoming release of WordPress 5.0. Find out what’s going on and how you can get involved. The Plan for WordPress 5.0 Early this month, the planned release schedule was announced for WordPress 5.0, which was updated a few weeks [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Hugh Lashbrooke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:8116:\"\n<p>Teams across the WordPress project are working hard to make sure everything is ready for the upcoming release of WordPress 5.0. Find out what’s going on and how you can get involved.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>The Plan for WordPress 5.0</h2>\n\n\n\n<p>Early this month, <a href=\"https://make.wordpress.org/core/2018/10/03/proposed-wordpress-5-0-scope-and-schedule/\">the planned release schedule was announced</a> for WordPress 5.0, which was <a href=\"https://make.wordpress.org/core/2018/10/31/wordpress-5-0-schedule-updates/\">updated</a> a few weeks later. WordPress 5.0 is a highly anticipated release, as it’s the official &nbsp;launch of Gutenberg &#8212; the new block editor for WordPress Core. For more detail, check out this <a href=\"https://make.wordpress.org/core/2018/10/12/granular-timeline/\">&nbsp;granular timeline</a>.<br></p>\n\n\n\n<p>Along with the planned release schedule, <a href=\'https://profiles.wordpress.org/matt/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>matt</a>, who is heading up this release, <a href=\"https://make.wordpress.org/core/2018/10/03/a-plan-for-5-0/\">announced leads for critical focuses on the project</a>, including <a href=\'https://profiles.wordpress.org/matveb/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>matveb</a>, <a href=\'https://profiles.wordpress.org/karmatosed/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>karmatosed</a>, <a href=\'https://profiles.wordpress.org/laurelfulford/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>laurelfulford</a>, <a href=\'https://profiles.wordpress.org/allancole/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>allancole</a>, <a href=\'https://profiles.wordpress.org/lonelyvegan/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>lonelyvegan</a>, <a href=\'https://profiles.wordpress.org/omarreiss/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>omarreiss</a>, <a href=\'https://profiles.wordpress.org/antpb/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>antpb</a>, <a href=\'https://profiles.wordpress.org/pento/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>pento</a>, <a href=\'https://profiles.wordpress.org/chanthaboune/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>chanthaboune</a>, <a href=\'https://profiles.wordpress.org/danielbachhuber/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>danielbachhuber</a>, and <a href=\'https://profiles.wordpress.org/mcsf/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>mcsf</a>.<br></p>\n\n\n\n<p><a href=\"https://wordpress.org/news/2018/10/wordpress-5-0-beta-2/\">WordPress 5.0 is currently in its second beta phase</a> and will soon move to the release candidate status. Help test this release right now by installing the <a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester plugin</a> on your site.<br></p>\n\n\n\n<p>Want to get involved in building WordPress Core? Follow <a href=\"https://make.wordpress.org/core/\">the Core team blog</a> and join the #core channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>. You can also help out by <a href=\"https://make.wordpress.org/test/\">testing</a> or <a href=\"https://make.wordpress.org/polyglots/2018/10/24/wordpress-5-0-gutenberg-and-twenty-nineteen/\">translating</a> the release into a local language.</p>\n\n\n\n<h2>New Editor for WordPress Core</h2>\n\n\n\n<p>Active development continues on <a href=\"https://wordpress.org/gutenberg\">Gutenberg</a>, the new editing experience for WordPress Core. <a href=\"https://make.wordpress.org/core/2018/10/31/whats-new-in-gutenberg-31st-october-2/\">The latest release</a> is feature complete, meaning that all further development on it will be to improve existing features and fix outstanding bugs.<br></p>\n\n\n\n<p>Some have raised concerns about Gutenberg’s accessibility, prompting the development team <a href=\"https://make.wordpress.org/core/2018/10/18/regarding-accessibility-in-gutenberg/\">to detail some areas</a> in which the new editor is accessible. To help improve things further, the team has made <a href=\"https://make.wordpress.org/core/2018/10/19/call-for-testers-community-gutenberg-accessibility-tests/\">a public call for accessibility testers</a> to assist.<br></p>\n\n\n\n<p>Want to get involved in building Gutenberg? Follow <a href=\"https://make.wordpress.org/core/tag/gutenberg\">the Gutenberg tag</a> on the Core team blog and join the #core-editor channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>. Read <a href=\"https://make.wordpress.org/test/2018/10/19/gutenberg-needs-testing-areas/\">this guide</a> to find areas where you can have the most impact.</p>\n\n\n\n<h2>Migrating HelpHub to WordPress.org</h2>\n\n\n\n<p>HelpHub is an ongoing project to move all of WordPress’ user documentation from the <a href=\"https://codex.wordpress.org/\">Codex</a> to the <a href=\"https://wordpress.org/support/\">WordPress Support portal</a>.<br></p>\n\n\n\n<p>HelpHub has been developed on <a href=\"https://wp-helphub.com/\">a separate staging server</a> and it’s now time to migrate the new documentation to its home on WordPress.org. The plan is to have everything moved over &nbsp;before WordPress 5.0 is released, so that all the new documentation will be available on the new platform from the start.<br></p>\n\n\n\n<p>The HelpHub team has published <a href=\"https://make.wordpress.org/docs/2018/11/01/call-for-volunteers-helphub-migration/\">a call for volunteers</a> to help with the migration. If you would like to get involved, join the #docs channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>, and contact <a href=\'https://profiles.wordpress.org/atachibana/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>atachibana</a> to get started.</p>\n\n\n\n<h2>A New Default Theme for WordPress</h2>\n\n\n\n<p><a href=\"https://make.wordpress.org/core/2018/10/16/introducing-twenty-nineteen/\">A brand new default theme &#8212; Twenty Nineteen &#8212; has been announced</a>&nbsp;with development being led by <a href=\'https://profiles.wordpress.org/allancole/\' class=\'mention\'><span class=\'mentions-prefix\'>@</span>allancole</a>. The theme is packaged with WordPress 5.0, so it will be following the same release schedule as Core.<br></p>\n\n\n\n<p>The new theme is designed to integrate seamlessly with Gutenberg and showcase how you can build a theme alongside the new block editor and take advantage of the creative freedom that it offers.<br></p>\n\n\n\n<p>Want to help build Twenty Nineteen? Join in on <a href=\"https://github.com/WordPress/twentynineteen\">the theme’s GitHub repo</a> and join the #core-themes channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.<br></p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Further Reading:</h2>\n\n\n\n<ul><li>The Support team are putting together more formal <a href=\"https://github.com/Clorith/wporg-support-guidelines\">Support Guidelines</a> for the WordPress Support Forums.</li><li>The group focused on privacy tools in Core <a href=\"https://make.wordpress.org/core/2018/10/11/whats-new-in-core-privacy/\">has released some details</a> on the work they have been doing recently, with a roadmap for their plans over the next few months.</li><li>The Core team <a href=\"https://make.wordpress.org/core/2018/10/15/wordpress-and-php-7-3/\">released an update</a> about how WordPress will be compatible with PHP 7.3.</li><li>The Theme Review Team have published <a href=\"https://make.wordpress.org/themes/2018/10/25/new-requirements/\">some new requirements</a> regarding child themes, readme files and trusted authors in the Theme Directory.</li><li>The WordCamp Europe team <a href=\"https://make.wordpress.org/community/2018/10/23/progressive-web-app-for-wordcamps/\">are working on a PWA service</a> for all WordCamp websites.</li></ul>\n\n\n\n<p><em>If you have a story we should consider including in the next “Month in WordPress” post, please </em><a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\"><em>submit it here</em></a><em>.</em><br></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:7:\"post-id\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"6230\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:32:\"https://wordpress.org/news/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:30:\"com-wordpress:feed-additions:1\";a:1:{s:4:\"site\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"14607090\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:9:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 09 Dec 2018 14:04:42 GMT\";s:12:\"content-type\";s:34:\"application/rss+xml; charset=UTF-8\";s:25:\"strict-transport-security\";s:11:\"max-age=360\";s:6:\"x-olaf\";s:3:\"⛄\";s:13:\"last-modified\";s:29:\"Thu, 06 Dec 2018 19:42:28 GMT\";s:4:\"link\";s:63:\"<https://wordpress.org/news/wp-json/>; rel=\"https://api.w.org/\"\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:9:\"HIT ord 2\";}}s:5:\"build\";s:14:\"20181205034609\";}', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(336, '_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca', '1544407483', 'no'),
(337, '_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca', '1544364283', 'no'),
(338, '_transient_timeout_feed_d117b5738fbd35bd8c0391cda1f2b5d9', '1544407484', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(339, '_transient_feed_d117b5738fbd35bd8c0391cda1f2b5d9', 'a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:93:\"WPTavern: AMP Plugin for WordPress Version 1.0 Introduces Gutenberg-Integrated AMP Validation\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86248\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"https://wptavern.com/amp-plugin-for-wordpress-version-1-0-introduces-gutenberg-integrated-amp-validation\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2620:\"<p><a href=\"https://amp-wp.org/amp-plugin-1-0-stable-release/\" rel=\"noopener\" target=\"_blank\">Version 1.0</a> of the official AMP plugin for WordPress was released on the eve of WordCamp US, after two years in development by contributors from Automattic, XWP, and Google. This first stable version has a massive <a href=\"https://wordpress.org/plugins/amp/#developers\" rel=\"noopener\" target=\"_blank\">changelog</a> with 30 people credited for their contributions. The plugin is now considered ready for production and is active on more than 300,000 sites.</p>\n<p>Version 1.0 interfaces with the new editor that landed in WordPress 5.0. It will display warnings for AMP-invalid markup on a per-block basis, so users don&#8217;t have to guess what content is generating an issue.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/12/notices-in-blocks-1024x736.png?ssl=1\"><img /></a></p>\n<p>This release also introduces a compatibility tool that offers detailed information on AMP validation errors. It functions like a debugging page where users can see which URLs are generating errors, along with the site component (plugin, theme, or core) where the markup originates.</p>\n<p>Version 1.0 includes granular controls for selecting which templates will be served as AMP. This allows for a more gradual adoption across a site. Users can also opt for Native mode to have the entire site served as AMP.</p>\n<p>The plugin has been updated to support four of WordPress&#8217; default themes, including Twenty Fifteen, Twenty Sixteen, Twenty Seventeen, and Twenty Nineteen. The documentation for <a href=\"https://github.com/xwp/wordpress-develop/pull/307\" rel=\"noopener\" target=\"_blank\">how AMP was added to these bundled themes</a> serves as an example for how theme developers can make their own themes AMP-compatible. </p>\n<p>WordPress users who opt to use AMP on their sites will have a more successful experience with this version, thanks to the improved UI for handling AMP validation errors and the new interface for limiting AMP-support to certain templates.</p>\n<p>The AMP for WordPress project is also sporting a new <a href=\"https://amp-wp.org/\" rel=\"noopener\" target=\"_blank\">website</a> that features a collection of AMP-ready plugins and themes and a showcase of sites using AMP. It also has extensive <a href=\"https://amp-wp.org/documentation/getting-started/\" rel=\"noopener\" target=\"_blank\">documentation</a> for implementors, site owners, and developers. The site provides a central place for news and resources related to the project and its expanding ecosystem of compatible extensions.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 07 Dec 2018 06:51:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"WPTavern: WordPress 5.0 “Bebo” Released, Lays A Foundation for the Platform’s Future\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86229\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"https://wptavern.com/wordpress-5-0-bebo-released-lays-a-foundation-for-the-platforms-future\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:9407:\"<p>In 2016 at WordCamp US in Philadelphia, PA, <a href=\"https://wptavern.com/state-of-the-word-2016-mullenweg-pushes-calypso-as-future-of-wordpress-interface-proposes-major-changes-to-release-cycle\">Matt Mullenweg announced</a> to the world that a new post and page editor would be coming to WordPress. &#8220;The editor does not represent the core of WordPress publishing,&#8221; Mullenweg said.</p>\n\n\n\n<p>His <a href=\"https://ma.tt/2017/08/we-called-it-gutenberg-for-a-reason/\">vision of the editor</a> was geared towards a more block-based approach that unifies widgets, shortcodes, and other areas of WordPress. Today, that vision has become a reality with the <a href=\"https://wordpress.org/news/2018/12/bebo/\">release of WordPress 5.0</a> featuring <a href=\"https://matiasventura.com/post/gutenberg-or-the-ship-of-theseus/\">project Gutenberg</a>. <br /></p>\n\n\n\n<div class=\"wp-block-image\"><img />The New Editor in WordPress 5.0</div>\n\n\n\n<p>Instead of a large blank canvas, content is broken up into a series of individual blocks that are independent from the content as a whole. For example, you can edit the HTML of one block without it affecting other blocks. </p>\n\n\n\n<p>The editor comes with more than 16 blocks to add content. You can add more blocks by <a href=\"https://wptavern.com/gutenberg-block-library-provides-a-searchable-index-of-individual-blocks\">installing and activating plugins.</a><br /></p>\n\n\n\n<div class=\"wp-block-image\"><img />Some of the Blocks That Are Available in WordPress 5.0</div>\n\n\n\n<p>Each block typically has two areas where you can manipulate its content. The Toolbar, which displays when hovering over a block, and the Inspector located in the right-hand sidebar. The Inspector houses less-often used settings that require more screen space. <br /></p>\n\n\n\n<div class=\"wp-block-image\"><img /></div>\n\n\n\n<p>Between the top toolbar, block toolbar, inspector, block mover, and hidden elements that don&#8217;t appear unless hovered over, there are a lot of user interface buttons. I suggest spending time crafting a test post to get familiar with what each button does. </p>\n\n\n\n<p>To see the new editor in action, check out the following demo video. </p>\n\n\n\nA Short Demo of The New Editor in Action\n\n\n\n<p>If you&#8217;re not ready for the new editor or discover incompatibilities with themes or plugins, you can install the <a href=\"https://wordpress.org/plugins/classic-editor/\">Classic Editor</a> plugin. This plugin will disable the new editor and replace it with the one in WordPress 4.9.8 and below. The WordPress development team <a href=\"https://make.wordpress.org/core/2018/11/07/classic-editor-plugin-support-window/\">has committed</a> to supporting the plugin until December 31st, 2021. </p>\n\n\n\n<p>Those who use assistive technology and experience accessibility issues with the new editor are encouraged to install the Classic Editor plugin until the issues are fixed. <br /></p>\n\n\n\n<h2>Twenty Nineteen: A Fully Compatible Default Theme<br /></h2>\n\n\n\n<p>WordPress 5.0 comes with a new default theme called <a href=\"https://make.wordpress.org/core/2018/10/16/introducing-twenty-nineteen/\">Twenty Nineteen</a> that is fully compatible with the new editor. It includes front-end and back-end styles to provide a What You See Is What You Get experience. It also supports the Wide and Full image alignment options. <br /></p>\n\n\n\n<div class=\"wp-block-image\"><img />Twenty Nineteen Front-End on the Left, Back-End on the Right</div>\n\n\n\n<p>You can see the theme in action on <a href=\"https://ma.tt/\">Matt Mullenweg&#8217;s site</a>.</p>\n\n\n\n<h2>What Happens to Existing Content?<br /></h2>\n\n\n\n<p>Content not created in the new editor is placed into a Classic block. This block mimics the old editor and provides users a choice to migrate it into blocks. However, migrating content into blocks is not required. Most content shouldn&#8217;t be affected by updating to WordPress 5.0. </p>\n\n\n\n<h2>Where to Get Help Using the New Editor</h2>\n\n\n\n<p>For new users, the editor might be an intuitive experience but for many WordPress veterans, it introduces a steep learning curve. After all, the previous editor has existed for more than 10 years. </p>\n\n\n\n<p>At the moment, there is a Gutenberg handbook for <a href=\"https://wordpress.org/gutenberg/handbook/designers-developers/\">Developers</a> and <a href=\"https://wordpress.org/gutenberg/handbook/contributors/\">Contributors</a> but not for Users. Work <a href=\"https://github.com/WordPress/gutenberg/issues/11252\">is underway</a> by the Docs team and other volunteer contributors to put together an initial document to release in 2019. </p>\n\n\n\n<p>Until the official handbook is published, you&#8217;ll need to seek help and education elsewhere.</p>\n\n\n\n<h3>WordPress 5.0 Essential Training</h3>\n\n\n\n<p>Morten Rand-Hendriksen, an educator for LinkedIn Learning has published <a href=\"https://www.linkedin.com/learning/wordpress-5-essential-training/?trk=insiders_23476852_learning\">a course</a> that walks users through the new editor. It&#8217;s available to view for free for the next three weeks. </p>\n\n\n\n<h3>Gutenberg Times<br /></h3>\n\n\n\n<p>Birgit Pauli-Haack has been keeping tabs on Gutenberg&#8217;s development for more than a year. <a href=\"https://gutenbergtimes.com\">Gutenberg Times</a> contains relevant information about the editor for <a href=\"https://gutenbergtimes.com/category/for-users/\">users</a> and <a href=\"https://gutenbergtimes.com/category/for-developers/\">developers</a>. </p>\n\n\n\n<h3>WordPress Support Forums<br /></h3>\n\n\n\n<p>Volunteers are standing by ready to answer your questions. If you think you&#8217;ve discovered a bug, incompatibility, or are experiencing trouble with the new editor, please post it in the <a href=\"https://wordpress.org/support/forum/how-to-and-troubleshooting/\">support forums</a>. </p>\n\n\n\n<h3>WordPress 5.0 Field Guide</h3>\n\n\n\n<p>The <a href=\"https://make.wordpress.org/core/2018/12/06/wordpress-5-0-field-guide/\">WordPress 5.0 field guide</a> provides important links and information for developers and users related to this release. <br /></p>\n\n\n\n<h2>WordPress 5.0 Is the Beginning of A New Journey</h2>\n\n\n\n<p>While WordPress 5.0 introduces a new editor, it also lays the foundation for what&#8217;s to come. The first phase of project Gutenberg was the editor. The second phase is the Customizer with a focus on full-site layouts. The third and fourth phases will be shared and discussed by Mullenweg at this year&#8217;s WordCamp US.</p>\n\n\n\n<p>The new editor is part of a long process to reinvent WordPress. Matías Ventura, Co-lead of the Gutenberg project succinctly explains why the need for Gutenberg exists. <br /></p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>WordPress has always been about the user experience, and that needs to continue to evolve under newer demands. Gutenberg is an attempt at fundamentally addressing those needs, based on the idea of content blocks. It’s an attempt to improve how users interact with their content in a fundamentally visual way, while at the same time giving developers the tools to create more fulfilling experiences for the people they are helping.</p><p>How can such a vision happen without dismantling, rebuilding, fragmenting, or breaking the WordPress ship that for over a decade has been carrying the thoughts, joys, and livelihoods of millions of people and more than a quarter of the web?</p><p>The ship, like Theseus’, needs to continue sailing while we upgrade the materials that make it. It needs to adapt to welcome new people, those that find it too rough to climb on board, too slippery a surface, too unwelcoming a sight, while retaining its essence of liberty. This is not an easy challenge—not in the slightest. </p><p>Indeed, <a href=\"https://ma.tt/2017/08/we-called-it-gutenberg-for-a-reason/\">we called it Gutenberg for a reason</a>, for both its challenges and opportunities, for what it can represent in terms of continuity and change. It is an ambitious project and it needs the whole WordPress community to succeed.</p><cite><a href=\"https://matiasventura.com/post/gutenberg-or-the-ship-of-theseus/\">Matías Ventura, Co-lead of the Gutenberg project.<br /></a></cite></blockquote>\n\n\n\n<p>As the new editor <a href=\"https://wordpress.org/download/counter/\">makes its way</a> across the world, it will be interesting to see what the reactions are from users who experience it for the first time. It will also be interesting to see what the <a href=\"https://twitter.com/photomatt/status/1069327043618320385\">developer community builds</a> that takes the editor to new heights. </p>\n\n\n\n<p>WordPress 5.0 is the <a href=\"https://www.linkedin.com/pulse/gutenberg-morten-rand-hendriksen\">beginning of a new journey</a> for the project. One that will have bumpy roads, new discoveries, and plenty of opportunities to learn. So saddle up and keep your hands and arms inside the vehicle until it makes a complete stop. <br /></p>\n\n\n\n<p>WordPress 5.0 is named after <a href=\"https://en.wikipedia.org/wiki/Bebo_Vald%C3%A9s\">Bebo Valdés</a> who was a Cuban pianist, bandleader, composer and arranger. The release was led by Matt Mullenweg with Allan Cole, Anthony Burchell, Gary Pendergast, Josepha Haden Chomphosy, Laurel Fulford, Omar Reiss, Daniel Bachhuber, Matías Ventura, Miguel Fonseca, Tammie Lister, Matthew Riley MacPherson as co-leads. At least 423 people contributed to the release. <br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 Dec 2018 21:38:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"Dev Blog: WordPress 5.0 “Bebo”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6328\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"https://wordpress.org/news/2018/12/bebo/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:42239:\"<h2>Say Hello to the New Editor</h2>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n\n</div>\n\n\n\n<p>We’ve made some big upgrades to the editor. Our new block-based editor is the first step toward an exciting new future with a streamlined editing experience across your site. You’ll have more flexibility with how content is displayed, whether you are building your first site, revamping your blog, or write code for a living.</p>\n\n\n\n<div class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Gutenberg.jpg?fit=2400%2C1200&ssl=1\" alt=\"\" class=\"wp-image-6331\" /></div>\n\n\n\n<h2>Building with Blocks</h2>\n\n\n\n<p>The new block-based editor won’t change the way any of your content looks to your visitors. What it will do is let you insert any type of multimedia in a snap and rearrange to your heart’s content. Each piece of content will be in its own block; a distinct wrapper for easy maneuvering. If you’re more of an HTML and CSS sort of person, then the blocks won’t stand in your way. WordPress is here to simplify the process, not the outcome.</p>\n\n\n\n\n\n\n\n<p>We have tons of blocks available by default, and more get added by the community every day. Here are a few of the blocks to help you get started:</p>\n\n\n\n<ul class=\"wp-block-gallery columns-4 is-cropped\"><li class=\"blocks-gallery-item\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Paragraph.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6340\" />Paragraph</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Heading.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6341\" />Heading</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Preformatted.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6342\" />Preformatted</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Quote.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6343\" />Quote</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Image.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6344\" />Image</li><li class=\"blocks-gallery-item\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Gallery.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6345\" />Gallery</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Cover-Image.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6346\" />Cover</li><li class=\"blocks-gallery-item\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Video.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6347\" />Video</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Audio.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6348\" />Audio</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Column.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6349\" />Columns</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-File.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6350\" />File</li><li class=\"blocks-gallery-item\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Code.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6351\" />Code</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-List.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6352\" />List</li><li class=\"blocks-gallery-item\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Button.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6353\" />Button</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-Embeds.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6354\" />Embeds</li><li class=\"blocks-gallery-item\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Block-Icon-More.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6355\" />More</li></ul>\n\n\n\n<h2>Freedom to Build, Freedom to Write</h2>\n\n\n\n<p>This new editing experience provides a more consistent treatment of design as well as content. If you’re building client sites, you can create reusable blocks. This lets your clients add new content anytime, while still maintaining a consistent look and feel.</p>\n\n\n\n\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>A Stunning New Default Theme</h2>\n\n\n\n<div class=\"wp-block-image\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen.jpg?fit=2400%2C1600&ssl=1\" alt=\"\" class=\"wp-image-6358\" /></div>\n\n\n\n<p>Introducing Twenty Nineteen, a new default theme that shows off the power of the new editor.</p>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/block-editor-1024x683.jpg?resize=632%2C422&ssl=1\" alt=\"\" class=\"wp-image-6359\" /><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_9\">Designed for the block editor</h3>\n\n\n\n<p>Twenty Nineteen features custom styles for the blocks available by default in 5.0. It makes extensive use of editor styles throughout the theme. That way, what you create in your content editor is what you see on the front of your site.<br /></p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/typography-1.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6427\" /><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_18\">Simple, type-driven layout</h3>\n\n\n\n<p>Featuring ample whitespace, and modern sans-serif headlines paired with classic serif body text, Twenty Nineteen is built to be beautiful on the go. It uses system fonts to increase loading speed. No more long waits on slow networks!</p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/twenty-nineteen-versatile.gif?w=632&ssl=1\" alt=\"\" class=\"wp-image-6361\" /><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_24\">Versatile design for all sites</h3>\n\n\n\n<p>Twenty Nineteen is designed to work for a wide variety of use cases. Whether you’re running a photo blog, launching a new business, or supporting a non-profit, Twenty Nineteen is flexible enough to fit your needs.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-button aligncenter\"><a class=\"wp-block-button__link has-text-color\" href=\"https://wordpress.org/themes/twentynineteen/\">Give Twenty Nineteen a try</a></div>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Developer Happiness</h2>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Protect.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6362\" /><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_34\">Protect</h3>\n\n\n\n<p>Blocks provide a comfortable way for users to change content directly, while also ensuring the content structure cannot be easily disturbed by accidental code edits. This allows the developer to control the output, building polished and semantic markup that is preserved through edits and not easily broken.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/12/Compose.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6363\" /><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_39\">Compose</h3>\n\n\n\n<p>Take advantage of a wide collection of APIs and interface components to easily create blocks with intuitive controls for your clients. Utilizing these components not only speeds up development work but also provide a more consistent, usable, and accessible interface to all users.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-media-text alignwide is-stacked-on-mobile\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Create.jpg?w=632&ssl=1\" alt=\"\" class=\"wp-image-6364\" /><div class=\"wp-block-media-text__content\">\n<h3 id=\"mce_45\">Create</h3>\n\n\n\n<p>The new block paradigm opens up a path of exploration and imagination when it comes to solving user needs. With the unified block insertion flow, it’s easier for your clients and customers to find and use blocks for all types of content. Developers can focus on executing their vision and providing rich editing experiences, rather than fussing with difficult APIs.</p>\n</div></div>\n\n\n\n<div class=\"wp-block-button aligncenter\"><a class=\"wp-block-button__link has-text-color\" href=\"https://wordpress.org/gutenberg/handbook/\">Learn how to get started</a></div>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Keep it Classic</h2>\n\n\n\n<div class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/12/Classic.jpg?fit=2400%2C1130&ssl=1\" alt=\"\" class=\"wp-image-6365\" /></div>\n\n\n\n<p>Prefer to stick with the familiar Classic Editor? No problem! Support for the Classic Editor plugin will remain in WordPress through 2021.</p>\n\n\n\n<p>The Classic Editor plugin restores the previous WordPress editor and the Edit Post screen. It lets you keep using plugins that extend it, add old-style meta boxes, or otherwise depend on the previous editor. To install, visit your plugins page and click the “Install Now” button next to “Classic Editor”. After the plugin finishes installing, click “Activate”. That’s it!</p>\n\n\n\n<p>Note to users of assistive technology: if you experience usability issues with the block editor, we recommend you continue to use the Classic Editor.</p>\n\n\n\n<div class=\"wp-block-button aligncenter\"><a class=\"wp-block-button__link has-text-color\" href=\"https://wordpress.org/plugins/classic-editor/\">Check out the Classic Editor</a></div>\n\n\n\n<p>This release is named in homage to the pioneering Cuban jazz musician <a href=\"https://en.wikipedia.org/wiki/Bebo_Vald%C3%A9s\">Bebo Valdés</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>The Squad</h2>\n\n\n\n<p>This release was led by <a href=\"http://ma.tt/\">Matt Mullenweg</a>, along with co-leads <a href=\"https://www.allancole.com/\">Allan Cole</a>, <a href=\"http://antpb.com/\">Anthony Burchell</a>, <a href=\"https://pento.net/\">Gary Pendergast</a>, <a href=\"https://josepha.blog/\">Josepha Haden Chomphosy</a>, <a href=\"https://laurel.blog/\">Laurel Fulford</a>, <a href=\"https://yoast.com/about-us/team/omar-reiss/\">Omar Reiss</a>, <a href=\"https://danielbachhuber.com/\">Daniel Bachhuber</a>, <a href=\"https://matiasventura.com/\">Matías Ventura</a>, <a href=\"https://lamda.blog/\">Miguel Fonseca</a>, <a href=\"https://tam.blog/\">Tammie Lister</a>, <a href=\"https://tofumatt.com/\">Matthew Riley MacPherson</a>. They were ably assisted by the following fabulous folks. There were 423 contributors with props in this release. Pull up some Bebo Valdés on your music service of choice, and check out some of their profiles:</p>\n\n\n<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/abdulwahab610\">Abdul Wahab</a>, <a href=\"https://profiles.wordpress.org/abdullahramzan\">Abdullah Ramzan</a>, <a href=\"https://profiles.wordpress.org/abhijitrakas\">abhijitrakas</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/afraithe\">afraithe</a>, <a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>, <a href=\"https://profiles.wordpress.org/ahmadawais\">ahmadawais</a>, <a href=\"https://profiles.wordpress.org/airathalitov\">Airat Halitov</a>, <a href=\"https://profiles.wordpress.org/ajitbohra\">Ajit Bohra</a>, <a href=\"https://profiles.wordpress.org/schlessera\">Alain Schlesser</a>, <a href=\"https://profiles.wordpress.org/albertomedina\">albertomedina</a>, <a href=\"https://profiles.wordpress.org/aldavigdis\">aldavigdis</a>, <a href=\"https://profiles.wordpress.org/alexsanford1\">Alex Sanford</a>, <a href=\"https://profiles.wordpress.org/alexis\">alexis</a>, <a href=\"https://profiles.wordpress.org/alexislloyd\">Alexis Lloyd</a>, <a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>, <a href=\"https://profiles.wordpress.org/amedina\">amedina</a>, <a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andreamiddleton\">Andrea Middleton</a>, <a href=\"https://profiles.wordpress.org/euthelup\">Andrei Lupu</a>, <a href=\"https://profiles.wordpress.org/andreiglingeanu\">andreiglingeanu</a>, <a href=\"https://profiles.wordpress.org/aduth\">Andrew Duthie</a>, <a href=\"https://profiles.wordpress.org/sumobi\">Andrew Munro</a>, <a href=\"https://profiles.wordpress.org/anevins\">Andrew Nevins</a>, <a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/androb\">Andrew Roberts</a>, <a href=\"https://profiles.wordpress.org/andrewtaylor-1\">Andrew Taylor</a>, <a href=\"https://profiles.wordpress.org/andrewserong\">andrewserong</a>, <a href=\"https://profiles.wordpress.org/apeatling\">Andy Peatling</a>, <a href=\"https://profiles.wordpress.org/ameeker\">Angie Meeker</a>, <a href=\"https://profiles.wordpress.org/annaharrison\">Anna Harrison</a>, <a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"https://profiles.wordpress.org/arnaudban\">ArnaudBan</a>, <a href=\"https://profiles.wordpress.org/arshidkv12\">Arshid</a>, <a href=\"https://profiles.wordpress.org/aprakasa\">Arya Prakasa</a>, <a href=\"https://profiles.wordpress.org/artisticasad\">Asad</a>, <a href=\"https://profiles.wordpress.org/mrasharirfan\">Ashar Irfan</a>, <a href=\"https://profiles.wordpress.org/asvinballoo\">asvinballoo</a>, <a href=\"https://profiles.wordpress.org/atanasangelovdev\">Atanas Angelov</a>, <a href=\"https://profiles.wordpress.org/b-07\">Bappi</a>, <a href=\"https://profiles.wordpress.org/bcolumbia\">bcolumbia</a>, <a href=\"https://profiles.wordpress.org/belcherj\">belcherj</a>, <a href=\"https://profiles.wordpress.org/caxco93\">Benjamin Eyzaguirre</a>, <a href=\"https://profiles.wordpress.org/benjamin_zekavica\">Benjamin Zekavica</a>, <a href=\"https://profiles.wordpress.org/benlk\">benlk</a>, <a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>, <a href=\"https://profiles.wordpress.org/bernhard-reiter\">Bernhard Reiter</a>, <a href=\"https://profiles.wordpress.org/betsela\">betsela</a>, <a href=\"https://profiles.wordpress.org/bhargavmehta\">Bhargav Mehta</a>, <a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>, <a href=\"https://profiles.wordpress.org/bph\">Birgit Pauli-Haack</a>, <a href=\"https://profiles.wordpress.org/blowery\">blowery</a>, <a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>, <a href=\"https://profiles.wordpress.org/boblinthorst\">boblinthorst</a>, <a href=\"https://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>, <a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"https://profiles.wordpress.org/bpayton\">Brandon Payton</a>, <a href=\"https://profiles.wordpress.org/brentswisher\">Brent Swisher</a>, <a href=\"https://profiles.wordpress.org/technosiren\">Brianna Privett</a>, <a href=\"https://profiles.wordpress.org/briannaorg\">briannaorg</a>, <a href=\"https://profiles.wordpress.org/bronsonquick\">Bronson Quick</a>, <a href=\"https://profiles.wordpress.org/bandonrandon\">Brooke.</a>, <a href=\"https://profiles.wordpress.org/burhandodhy\">Burhan Nasir</a>, <a href=\"https://profiles.wordpress.org/cantothemes\">CantoThemes</a>, <a href=\"https://profiles.wordpress.org/cathibosco\">cathibosco</a>, <a href=\"https://profiles.wordpress.org/chetan200891\">Chetan Prajapati</a>, <a href=\"https://profiles.wordpress.org/chetansatasiya\">chetansatasiya</a>, <a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>, <a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"https://profiles.wordpress.org/crunnells\">Chris Runnells</a>, <a href=\"https://profiles.wordpress.org/chrisvanpatten\">Chris Van Patten</a>, <a href=\"https://profiles.wordpress.org/chriskmnds\">chriskmnds</a>, <a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>, <a href=\"https://profiles.wordpress.org/pixelverbieger\">Christian Sabo</a>, <a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>, <a href=\"https://profiles.wordpress.org/circlecube\">circlecube</a>, <a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>, <a href=\"https://profiles.wordpress.org/coderkevin\">coderkevin</a>, <a href=\"https://profiles.wordpress.org/copons\">Copons</a>, <a href=\"https://profiles.wordpress.org/courtney0burton\">courtney0burton</a>, <a href=\"https://profiles.wordpress.org/littlebigthing\">Csaba (LittleBigThings)</a>, <a href=\"https://profiles.wordpress.org/csabotta\">csabotta</a>, <a href=\"https://profiles.wordpress.org/danieltj\">Daniel James</a>, <a href=\"https://profiles.wordpress.org/talldanwp\">Daniel Richards</a>, <a href=\"https://profiles.wordpress.org/danielhw\">danielhw</a>, <a href=\"https://profiles.wordpress.org/daniloercoli\">daniloercoli</a>, <a href=\"https://profiles.wordpress.org/dannycooper\">DannyCooper</a>, <a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>, <a href=\"https://profiles.wordpress.org/davemoran118\">davemoran118</a>, <a href=\"https://profiles.wordpress.org/dcavins\">David Cavins</a>, <a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/davidakennedy\">David Kennedy</a>, <a href=\"https://profiles.wordpress.org/dryanpress\">David Ryan</a>, <a href=\"https://profiles.wordpress.org/davidsword\">David Sword</a>, <a href=\"https://profiles.wordpress.org/folletto\">Davide \'Folletto\' Casali</a>, <a href=\"https://profiles.wordpress.org/davidherrera\">davidherrera</a>, <a href=\"https://profiles.wordpress.org/davisshaver\">Davis</a>, <a href=\"https://profiles.wordpress.org/dciso\">dciso</a>, <a href=\"https://profiles.wordpress.org/dmsnell\">Dennis Snell</a>, <a href=\"https://profiles.wordpress.org/dsmart\">Derek Smart</a>, <a href=\"https://profiles.wordpress.org/designsimply\">designsimply</a>, <a href=\"https://profiles.wordpress.org/dlocc\">Devin Walker</a>, <a href=\"https://profiles.wordpress.org/deviodigital\">Devio Digital</a>, <a href=\"https://profiles.wordpress.org/dfangstrom\">dfangstrom</a>, <a href=\"https://profiles.wordpress.org/dhanendran\">Dhanendran</a>, <a href=\"https://profiles.wordpress.org/diegoliv\">Diego de Oliveira</a>, <a href=\"https://profiles.wordpress.org/diegoreymendez\">diegoreymendez</a>, <a href=\"https://profiles.wordpress.org/dingo_bastard\">dingo-d</a>, <a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/dency\">Dixita Dusara</a>, <a href=\"https://profiles.wordpress.org/dixitadusara\">Dixita Gohil</a>, <a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"https://profiles.wordpress.org/donnapep\">Donna Peplinskie</a>, <a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"https://profiles.wordpress.org/dsawardekar\">dsawardekar</a>, <a href=\"https://profiles.wordpress.org/dsifford\">dsifford</a>, <a href=\"https://profiles.wordpress.org/duanestorey\">Duane Storey</a>, <a href=\"https://profiles.wordpress.org/chopinbach\">Edwin Cromley</a>, <a href=\"https://profiles.wordpress.org/ehg\">ehg</a>, <a href=\"https://profiles.wordpress.org/electricfeet\">ElectricFeet</a>, <a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>, <a href=\"https://profiles.wordpress.org/epointal\">Elisabeth Pointal</a>, <a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/elrae\">elrae</a>, <a href=\"https://profiles.wordpress.org/enodekciw\">enodekciw</a>, <a href=\"https://profiles.wordpress.org/ephoxjames\">ephoxjames</a>, <a href=\"https://profiles.wordpress.org/ephoxmogran\">ephoxmogran</a>, <a href=\"https://profiles.wordpress.org/sewmyheadon\">Eric Amundson</a>, <a href=\"https://profiles.wordpress.org/ericnmurphy\">ericnmurphy</a>, <a href=\"https://profiles.wordpress.org/etoledom\">etoledom</a>, <a href=\"https://profiles.wordpress.org/fabiankaegy\">fabiankaegy</a>, <a href=\"https://profiles.wordpress.org/fabs_pim\">fabs_pim</a>, <a href=\"https://profiles.wordpress.org/faishal\">faishal</a>, <a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>, <a href=\"https://profiles.wordpress.org/floriansimeth\">Florian Simeth</a>, <a href=\"https://profiles.wordpress.org/foobar4u\">foobar4u</a>, <a href=\"https://profiles.wordpress.org/foreverpinetree\">foreverpinetree</a>, <a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"https://profiles.wordpress.org/fuyuko\">fuyuko</a>, <a href=\"https://profiles.wordpress.org/gma992\">Gabriel Maldonado</a>, <a href=\"https://profiles.wordpress.org/garrett-eclipse\">Garrett Hyder</a>, <a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"https://profiles.wordpress.org/doomwaxer\">Gary Thayer</a>, <a href=\"https://profiles.wordpress.org/garyjones\">garyjones</a>, <a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>, <a href=\"https://profiles.wordpress.org/babbardel\">George Olaru</a>, <a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"https://profiles.wordpress.org/georgeh\">georgeh</a>, <a href=\"https://profiles.wordpress.org/gnif\">gnif</a>, <a href=\"https://profiles.wordpress.org/goldsounds\">goldsounds</a>, <a href=\"https://profiles.wordpress.org/grappler\">Grappler</a>, <a href=\"https://profiles.wordpress.org/gziolo\">Grzegorz Ziółkowski</a>, <a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>, <a href=\"https://profiles.wordpress.org/gwwar\">gwwar</a>, <a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>, <a href=\"https://profiles.wordpress.org/hblackett\">hblackett</a>, <a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandi</a>, <a href=\"https://profiles.wordpress.org/luehrsen\">Hendrik Luehrsen</a>, <a href=\"https://profiles.wordpress.org/herbmiller\">herbmiller</a>, <a href=\"https://profiles.wordpress.org/herregroen\">Herre Groen</a>, <a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>, <a href=\"https://profiles.wordpress.org/hypest\">hypest</a>, <a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>, <a href=\"https://profiles.wordpress.org/ianstewart\">ianstewart</a>, <a href=\"https://profiles.wordpress.org/ianbelanger\">ibelanger</a>, <a href=\"https://profiles.wordpress.org/icaleb\">iCaleb</a>, <a href=\"https://profiles.wordpress.org/idpokute\">idpokute</a>, <a href=\"https://profiles.wordpress.org/igorsch\">Igor</a>, <a href=\"https://profiles.wordpress.org/imath\">imath</a>, <a href=\"https://profiles.wordpress.org/imonly_ik\">Imran Khalid</a>, <a href=\"https://profiles.wordpress.org/intronic\">intronic</a>, <a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"https://profiles.wordpress.org/ireneyoast\">Irene Strikkers</a>, <a href=\"https://profiles.wordpress.org/ismailelkorchi\">Ismail El Korchi</a>, <a href=\"https://profiles.wordpress.org/israelshmueli\">israelshmueli</a>, <a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jd55\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jakept\">Jacob Peattie</a>, <a href=\"https://profiles.wordpress.org/jagnew\">jagnew</a>, <a href=\"https://profiles.wordpress.org/jahvi\">jahvi</a>, <a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>, <a href=\"https://profiles.wordpress.org/jamestryon\">jamestryon</a>, <a href=\"https://profiles.wordpress.org/jamiehalvorson\">jamiehalvorson</a>, <a href=\"https://profiles.wordpress.org/jdembowski\">Jan Dembowski</a>, <a href=\"https://profiles.wordpress.org/janalwin\">janalwin</a>, <a href=\"https://profiles.wordpress.org/jaswrks\">Jason Caldwell</a>, <a href=\"https://profiles.wordpress.org/octalmage\">Jason Stallings</a>, <a href=\"https://profiles.wordpress.org/yingling017\">Jason Yingling</a>, <a href=\"https://profiles.wordpress.org/vengisss\">Javier Villanueva</a>, <a href=\"https://profiles.wordpress.org/jhoffm34\">Jay Hoffmann</a>, <a href=\"https://profiles.wordpress.org/audrasjb\">Jb Audras</a>, <a href=\"https://profiles.wordpress.org/jblz\">Jeff Bowen</a>, <a href=\"https://profiles.wordpress.org/jeffpaul\">Jeffrey Paul</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby\">JJJ</a>, <a href=\"https://profiles.wordpress.org/sephsekla\">Joe Bailey-Roberts</a>, <a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>, <a href=\"https://profiles.wordpress.org/joemaller\">joemaller</a>, <a href=\"https://profiles.wordpress.org/joen\">Joen Asmussen</a>, <a href=\"https://profiles.wordpress.org/j-falk\">Johan Falk</a>, <a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/johnny5\">John Godley</a>, <a href=\"https://profiles.wordpress.org/johndyer\">johndyer</a>, <a href=\"https://profiles.wordpress.org/johnpixle\">JohnPixle</a>, <a href=\"https://profiles.wordpress.org/johnwatkins0\">johnwatkins0</a>, <a href=\"https://profiles.wordpress.org/jomurgel\">jomurgel</a>, <a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>, <a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>, <a href=\"https://profiles.wordpress.org/jonsurrell\">jonsurrell</a>, <a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"https://profiles.wordpress.org/koke\">Jorge Bernal</a>, <a href=\"https://profiles.wordpress.org/jorgefilipecosta\">Jorge Costa</a>, <a href=\"https://profiles.wordpress.org/ieatwebsites\">Jose Fremaint</a>, <a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>, <a href=\"https://profiles.wordpress.org/jvisick77\">Josh Visick</a>, <a href=\"https://profiles.wordpress.org/joshuawold\">Joshua Wold</a>, <a href=\"https://profiles.wordpress.org/joyously\">Joy</a>, <a href=\"https://profiles.wordpress.org/jrf\">jrf</a>, <a href=\"https://profiles.wordpress.org/jryancard\">jryancard</a>, <a href=\"https://profiles.wordpress.org/jsnajdr\">jsnajdr</a>, <a href=\"https://profiles.wordpress.org/julienmelissas\">JulienMelissas</a>, <a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>, <a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"https://profiles.wordpress.org/kallehauge\">Kallehauge</a>, <a href=\"https://profiles.wordpress.org/kalpshit\">KalpShit Akabari</a>, <a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>, <a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"https://profiles.wordpress.org/kevinwhoffman\">Kevin Hoffman</a>, <a href=\"https://profiles.wordpress.org/khleomix\">khleomix</a>, <a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>, <a href=\"https://profiles.wordpress.org/kjellr\">Kjell Reigstad</a>, <a href=\"https://profiles.wordpress.org/kluny\">kluny</a>, <a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/xkon\">Konstantinos Xenos</a>, <a href=\"https://profiles.wordpress.org/krutidugade\">krutidugade</a>, <a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/notlaura\">Lara Schenck</a>, <a href=\"https://profiles.wordpress.org/leahkoerper\">leahkoerper</a>, <a href=\"https://profiles.wordpress.org/lloyd\">lloyd</a>, <a href=\"https://profiles.wordpress.org/loicblascos\">Loic</a>, <a href=\"https://profiles.wordpress.org/lucasstark\">Lucas Stark</a>, <a href=\"https://profiles.wordpress.org/lucasrolff\">LucasRolff</a>, <a href=\"https://profiles.wordpress.org/luigipulcini\">luigipulcini</a>, <a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>, <a href=\"https://profiles.wordpress.org/lucaskowalski\">Luke Kowalski</a>, <a href=\"https://profiles.wordpress.org/lukepettway\">Luke Pettway</a>, <a href=\"https://profiles.wordpress.org/luminus\">Luminus</a>, <a href=\"https://profiles.wordpress.org/lynneux\">lynneux</a>, <a href=\"https://profiles.wordpress.org/m-e-h\">m-e-h</a>, <a href=\"https://profiles.wordpress.org/macbookandrew\">macbookandrew</a>, <a href=\"https://profiles.wordpress.org/maedahbatool\">Maedah Batool</a>, <a href=\"https://profiles.wordpress.org/mahdiyazdani\">Mahdi Yazdani</a>, <a href=\"https://profiles.wordpress.org/mahmoudsaeed\">mahmoudsaeed</a>, <a href=\"https://profiles.wordpress.org/travel_girl\">Maja Benke</a>, <a href=\"https://profiles.wordpress.org/mkaz\">Marcus Kazmierczak</a>, <a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>, <a href=\"https://profiles.wordpress.org/marina_wp\">marina_wp</a>, <a href=\"https://profiles.wordpress.org/clorith\">Marius L. J.</a>, <a href=\"https://profiles.wordpress.org/mariusvw\">mariusvw</a>, <a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>, <a href=\"https://profiles.wordpress.org/martinlugton\">martinlugton</a>, <a href=\"https://profiles.wordpress.org/mathiu\">mathiu</a>, <a href=\"https://profiles.wordpress.org/webdevmattcrom\">Matt Cromwell</a>, <a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"https://profiles.wordpress.org/mattgeri\">MattGeri</a>, <a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"https://profiles.wordpress.org/maurobringolf\">maurobringolf</a>, <a href=\"https://profiles.wordpress.org/maximebj\">Maxime BERNARD-JACQUET</a>, <a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>, <a href=\"https://profiles.wordpress.org/meetjey\">meetjey</a>, <a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/mendezcode\">mendezcode</a>, <a href=\"https://profiles.wordpress.org/woodent\">Micah Wood</a>, <a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"https://profiles.wordpress.org/michaelhull\">Michael Hull</a>, <a href=\"https://profiles.wordpress.org/mnelson4\">Michael Nelson</a>, <a href=\"https://profiles.wordpress.org/mizejewski\">Michele Mizejewski</a>, <a href=\"https://profiles.wordpress.org/jbpaul17\">Migrated to @jeffpaul</a>, <a href=\"https://profiles.wordpress.org/stubgo\">Miina Sikk</a>, <a href=\"https://profiles.wordpress.org/simison\">Mikael Korpela</a>, <a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>, <a href=\"https://profiles.wordpress.org/mike-haydon-swo\">Mike Haydon</a>, <a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>, <a href=\"https://profiles.wordpress.org/mikehaydon\">mikehaydon</a>, <a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>, <a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>, <a href=\"https://profiles.wordpress.org/milana_cap\">Milana Cap</a>, <a href=\"https://profiles.wordpress.org/gonzomir\">Milen Petrinski - Gonzo</a>, <a href=\"https://profiles.wordpress.org/milesdelliott\">milesdelliott</a>, <a href=\"https://profiles.wordpress.org/mimo84\">mimo84</a>, <a href=\"https://profiles.wordpress.org/0mirka00\">mirka</a>, <a href=\"https://profiles.wordpress.org/mitogh\">mitogh</a>, <a href=\"https://profiles.wordpress.org/mmtr86\">mmtr86</a>, <a href=\"https://profiles.wordpress.org/boemedia\">Monique Dubbelman</a>, <a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>, <a href=\"https://profiles.wordpress.org/mostafas1990\">Mostafa Soufi</a>, <a href=\"https://profiles.wordpress.org/motleydev\">motleydev</a>, <a href=\"https://profiles.wordpress.org/mpheasant\">mpheasant</a>, <a href=\"https://profiles.wordpress.org/mrmadhat\">mrmadhat</a>, <a href=\"https://profiles.wordpress.org/mrwweb\">mrwweb</a>, <a href=\"https://profiles.wordpress.org/msdesign21\">msdesign21</a>, <a href=\"https://profiles.wordpress.org/mtias\">mtias</a>, <a href=\"https://profiles.wordpress.org/desideveloper\">Muhammad Irfan</a>, <a href=\"https://profiles.wordpress.org/mukesh27\">Mukesh Panchal</a>, <a href=\"https://profiles.wordpress.org/munirkamal\">munirkamal</a>, <a href=\"https://profiles.wordpress.org/mmaumio\">Muntasir Mahmud</a>, <a href=\"https://profiles.wordpress.org/mzorz\">mzorz</a>, <a href=\"https://profiles.wordpress.org/nagayama\">nagayama</a>, <a href=\"https://profiles.wordpress.org/nfmohit\">Nahid F. Mohit</a>, <a href=\"https://profiles.wordpress.org/nao\">Naoko Takano</a>, <a href=\"https://profiles.wordpress.org/napy84\">napy84</a>, <a href=\"https://profiles.wordpress.org/nateconley\">nateconley</a>, <a href=\"https://profiles.wordpress.org/nativeinside\">Native Inside</a>, <a href=\"https://profiles.wordpress.org/greatislander\">Ned Zimmerman</a>, <a href=\"https://profiles.wordpress.org/buzztone\">Neil Murray</a>, <a href=\"https://profiles.wordpress.org/nicbertino\">nic.bertino</a>, <a href=\"https://profiles.wordpress.org/notnownikki\">Nicola Heald</a>, <a href=\"https://profiles.wordpress.org/nielslange\">Niels Lange</a>, <a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>, <a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"https://profiles.wordpress.org/nitrajka\">nitrajka</a>, <a href=\"https://profiles.wordpress.org/njpanderson\">njpanderson</a>, <a href=\"https://profiles.wordpress.org/nosolosw\">nosolosw</a>, <a href=\"https://profiles.wordpress.org/nshki\">nshki</a>, <a href=\"https://profiles.wordpress.org/hideokamoto\">Okamoto Hidetaka</a>, <a href=\"https://profiles.wordpress.org/oskosk\">oskosk</a>, <a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>, <a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>, <a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"https://profiles.wordpress.org/pauldechov\">Paul Dechov</a>, <a href=\"https://profiles.wordpress.org/paulstonier\">Paul Stonier</a>, <a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"https://profiles.wordpress.org/pedromendonca\">Pedro Mendon&#231;a</a>, <a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>, <a href=\"https://profiles.wordpress.org/pglewis\">pglewis</a>, <a href=\"https://profiles.wordpress.org/tyrannous\">Philipp Bammes</a>, <a href=\"https://profiles.wordpress.org/piersb\">piersb</a>, <a href=\"https://profiles.wordpress.org/wizzard_\">Pieter Daalder</a>, <a href=\"https://profiles.wordpress.org/pilou69\">pilou69</a>, <a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>, <a href=\"https://profiles.wordpress.org/poena\">poena</a>, <a href=\"https://profiles.wordpress.org/postphotos\">postphotos</a>, <a href=\"https://profiles.wordpress.org/potbot\">potbot</a>, <a href=\"https://profiles.wordpress.org/prtksxna\">Prateek Saxena</a>, <a href=\"https://profiles.wordpress.org/pratikthink\">pratikthink</a>, <a href=\"https://profiles.wordpress.org/presskopp\">Presskopp</a>, <a href=\"https://profiles.wordpress.org/psealock\">psealock</a>, <a href=\"https://profiles.wordpress.org/ptasker\">ptasker</a>, <a href=\"https://profiles.wordpress.org/rachelmcr\">Rachel</a>, <a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/rahmohn\">Rahmohn</a>, <a href=\"https://profiles.wordpress.org/rahmon\">Rahmon</a>, <a href=\"https://profiles.wordpress.org/rahulsprajapati\">Rahul Prajapati</a>, <a href=\"https://profiles.wordpress.org/rakshans1\">rakshans1</a>, <a href=\"https://profiles.wordpress.org/ramonopoly\">ramonopoly</a>, <a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>, <a href=\"https://profiles.wordpress.org/revgeorge\">revgeorge</a>, <a href=\"https://profiles.wordpress.org/youknowriad\">Riad Benguella</a>, <a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>, <a href=\"https://profiles.wordpress.org/richsalvucci\">richsalvucci</a>, <a href=\"https://profiles.wordpress.org/riddhiehta02\">Riddhi Mehta</a>, <a href=\"https://profiles.wordpress.org/rileybrook\">Riley Brook</a>, <a href=\"https://profiles.wordpress.org/noisysocks\">Robert Anderson</a>, <a href=\"https://profiles.wordpress.org/sanchothefat\">Robert O\'Rourke</a>, <a href=\"https://profiles.wordpress.org/robertsky\">robertsky</a>, <a href=\"https://profiles.wordpress.org/_dorsvenabili\">Rocio Valdivia</a>, <a href=\"https://profiles.wordpress.org/rohittm\">Rohit Motwani</a>, <a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>, <a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>, <a href=\"https://profiles.wordpress.org/ryo511\">ryo511</a>, <a href=\"https://profiles.wordpress.org/sagarprajapati\">Sagar Prajapati</a>, <a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>, <a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"https://profiles.wordpress.org/smyoon315\">Sang-Min Yoon</a>, <a href=\"https://profiles.wordpress.org/tinkerbelly\">sarah semark</a>, <a href=\"https://profiles.wordpress.org/scottmweaver\">Scott Weaver</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/sergioestevao\">SergioEstevao</a>, <a href=\"https://profiles.wordpress.org/azchughtai\">Shahjehan Ali</a>, <a href=\"https://profiles.wordpress.org/shaileesheth\">Shailee Sheth</a>, <a href=\"https://profiles.wordpress.org/sharaz\">Sharaz Shahid</a>, <a href=\"https://profiles.wordpress.org/giventofly76\">Shaun sc</a>, <a href=\"https://profiles.wordpress.org/shaunandrews\">shaunandrews</a>, <a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>, <a href=\"https://profiles.wordpress.org/shenkj\">shenkj</a>, <a href=\"https://profiles.wordpress.org/sikander\">sikander</a>, <a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"https://profiles.wordpress.org/siriokun\">siriokun</a>, <a href=\"https://profiles.wordpress.org/sirjonathan\">sirjonathan</a>, <a href=\"https://profiles.wordpress.org/sirreal\">sirreal</a>, <a href=\"https://profiles.wordpress.org/sisanu\">Sisanu</a>, <a href=\"https://profiles.wordpress.org/skorasaurus\">skorasaurus</a>, <a href=\"https://profiles.wordpress.org/butimnoexpert\">Slushman</a>, <a href=\"https://profiles.wordpress.org/ssousa\">Sofia Sousa</a>, <a href=\"https://profiles.wordpress.org/somtijds\">SOMTIJDS</a>, <a href=\"https://profiles.wordpress.org/soean\">Soren Wrede</a>, <a href=\"https://profiles.wordpress.org/spocke\">spocke</a>, <a href=\"https://profiles.wordpress.org/stagger-lee\">Stagger Lee</a>, <a href=\"https://profiles.wordpress.org/sstoqnov\">Stanimir Stoyanov</a>, <a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/stevehenty\">Steve Henty</a>, <a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>, <a href=\"https://profiles.wordpress.org/strategio\">strategio</a>, <a href=\"https://profiles.wordpress.org/stuartfeldt\">stuartfeldt</a>, <a href=\"https://profiles.wordpress.org/tacrapo\">tacrapo</a>, <a href=\"https://profiles.wordpress.org/tammie_l\">Tammie Lister</a>, <a href=\"https://profiles.wordpress.org/themeroots\">ThemeRoots</a>, <a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>, <a href=\"https://profiles.wordpress.org/thrijith\">Thrijith Thankachan</a>, <a href=\"https://profiles.wordpress.org/hedgefield\">Tim Hengeveld</a>, <a href=\"https://profiles.wordpress.org/timgardner\">timgardner</a>, <a href=\"https://profiles.wordpress.org/timmydcrawford\">Timmy Crawford</a>, <a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>, <a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>, <a href=\"https://profiles.wordpress.org/tlxo\">Toni Laakso</a>, <a href=\"https://profiles.wordpress.org/tobifjellner\">Tor-Bjorn Fjellner</a>, <a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>, <a href=\"https://profiles.wordpress.org/mirucon\">Toshihiro Kanai</a>, <a href=\"https://profiles.wordpress.org/itowhid06\">Towhidul Islam</a>, <a href=\"https://profiles.wordpress.org/travislopes\">Travis Lopes</a>, <a href=\"https://profiles.wordpress.org/truongwp\">truongwp</a>, <a href=\"https://profiles.wordpress.org/tjfunke001\">Tunji Ayoola</a>, <a href=\"https://profiles.wordpress.org/twoelevenjay\">twoelevenjay</a>, <a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>, <a href=\"https://profiles.wordpress.org/vindl\">vindl</a>, <a href=\"https://profiles.wordpress.org/vishalkakadiya\">Vishal Kakadiya</a>, <a href=\"https://profiles.wordpress.org/vtrpldn\">Vitor Paladini</a>, <a href=\"https://profiles.wordpress.org/walterebert\">Walter Ebert</a>, <a href=\"https://profiles.wordpress.org/warmarks\">warmarks</a>, <a href=\"https://profiles.wordpress.org/webmandesign\">WebMan Design &#124; Oliver Juhas</a>, <a href=\"https://profiles.wordpress.org/websupporter\">websupporter</a>, <a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>, <a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>, <a href=\"https://profiles.wordpress.org/willybahuaud\">Willy Bahuaud</a>, <a href=\"https://profiles.wordpress.org/wpscholar\">wpscholar</a>, <a href=\"https://profiles.wordpress.org/xyfi\">xyfi</a>, <a href=\"https://profiles.wordpress.org/yahil\">Yahil Madakiya</a>, <a href=\"https://profiles.wordpress.org/yingles\">yingles</a>, <a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"https://profiles.wordpress.org/youthkee\">Yusuke Takahashi</a>, <a href=\"https://profiles.wordpress.org/zebulan\">zebulan</a>, and <a href=\"https://profiles.wordpress.org/ziyaddin\">Ziyaddin Sadigov</a>.\n\n\n\n<p>Finally, thanks to all the community translators who worked on WordPress 5.0. Their efforts bring WordPress 5.0 fully translated to 37 languages at release time, with more on the way.</p>\n\n\n\n<p>If you want to follow along or help out, check out <a href=\"https://make.wordpress.org/\">Make WordPress</a> and our <a href=\"https://make.wordpress.org/core/\">core development blog</a>.</p>\n\n\n\n<p>Thanks for choosing WordPress!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 Dec 2018 19:28:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"Post Status: WordPress 5.0 marks a new era for the world’s most popular CMS\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://poststatus.com/?p=49548\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"https://poststatus.com/wordpress-5-0/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5170:\"<p>WordPress 5.0, &#8220;<a href=\"https://wordpress.org/news/2018/12/bebo/\">Bebo</a>,&#8221; is a shift of the highest order for the platform. Block-based editing, under the name of &#8220;Gutenberg,&#8221; is an entirely new way to publish content. It adds a world of flexibility when writing, and it opens the gates for transforming much of the broader WordPress experience moving forward.</p>\n<p></p>\n<p>TinyMCE has been the core of the WordPress writing experience for, well, forever. Users will be able to continue using TinyMCE with the <a href=\"https://wordpress.org/plugins/classic-editor/\">Classic Editor</a> plugin, which will be especially useful for those web applications with significant amounts of structured content that will take time and reprogramming to fit the new editing experience.</p>\n<p>The need for a new editor has been a wide-held concern in the WordPress community for a long time. Gutenberg has been more than two years in the making, and it involved dozens of full-time or near full-time contributors at times. Automattic, the company behind WordPress.com and other popular WordPress products, has invested a great deal in Gutenberg&#8217;s development, as have many other companies and individuals — but the bulk of development and decision-making has been by Automattic employees.</p>\n<p>There have been critiques that the process for decision making has been too closed off and rushed toward the end of the development cycle for the purpose of delivery by WordCamp US despite ongoing concerns, particularly around accessibility.</p>\n<p>5.0 had to ship eventually, and the process has been a long one. It was a complete shift from the traditional development cycles, which <a href=\"https://poststatus.com/interview-matt-mullenweg-new-wordpress-release-cycle/\">I discussed with Matt Mullenweg</a> at WordCamp US two years ago.</p>\n<p>I have personally held the view that now is as good a time as any to release 5.0, though the exact timing is a burden on folks traveling to WCUS, particularly considering that it was just a few days notice; it is putting a kink in the plans of many.</p>\n<p>Timing aside, Gutenberg is, I believe, an important step and a big test for WordPress. It is imperative that the platform evolves to be both more powerful and easier to use — an enormously difficult dual challenge that I have advocated as an important feat to accomplish for several years now.</p>\n<p>WordPress is the easiest full-featured content management system to use. But it is more difficult than many alternative publishing platforms — particularly hosted ones. Drastic changes, like Gutenberg, are necessary to continue being a preferred platform for end users. Being easy to use and customize got WordPress to the dominant position it is in today, and I believe it is extremely important to continue in that trajectory to maintain that position.</p>\n<p>At the same time, as WordPress is being used in ever more advanced applications, developers need powerful, scalable solutions. WordPress has made great strides over the years to accommodate this use case, from various APIs to assist in new data structure creation, to the REST API. Gutenberg offers much promise to continue this trend, as it is quite extendable and also flexible for deployment on the web, in native apps, and on both front-ends and backends.</p>\n<p>I believe 5.0 is a huge step forward for the platform. The journey is not without its issues, and there is much work to do, but WordPress needed and continues to need big changes and advancements to maintain its position at the top of the content management food chain.</p>\n<p>People are using WordPress for all sorts of things, whether traditional publishing, eCommerce, application frameworks, and much more. I’m excited to see what Gutenberg brings to further these applications. Strictly as an editor, it’s far from perfect, but it’s an important step in the right direction.</p>\n<h2>Get familiar with WordPress 5.0</h2>\n<p>Here are some links to places to learn more about the new editing experience and WordPress 5.0.</p>\n<ul>\n<li><a href=\"https://wordpress.org/news/2018/12/bebo/\">WordPress 5.0 release post</a></li>\n<li><a href=\"https://wordpress.org/gutenberg/handbook/\">Gutenberg designer and developer handbook</a></li>\n<li><a href=\"https://wordpress.org/gutenberg/\">WordPress.org/Gutenberg</a> teaser, where you can use it live.</li>\n<li><a href=\"https://make.wordpress.org/core/2018/12/06/wordpress-5-0-field-guide/\">WordPress 5.0 Field Guide</a></li>\n<li>Gutenberg <a href=\"https://github.com/WordPress/gutenberg\">on GitHub</a> (This will be deprecated but offers a nice history.)</li>\n<li><a href=\"https://make.wordpress.org/core/2018/12/06/the-rest-api-in-wordpress-5-0/\">Changes to the REST API</a></li>\n<li><a href=\"https://make.wordpress.org/core/2018/12/06/media-5-0-guide/\">Media in 5.0</a></li>\n<li>The <a href=\"https://make.wordpress.org/core/2018/10/16/introducing-twenty-nineteen/\">Twenty Nineteen</a> default theme and Gutenberg support <a href=\"https://make.wordpress.org/core/2018/12/06/block-editor-support-in-existing-default-themes/\">in other default themes</a>.</li>\n</ul>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 Dec 2018 17:31:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Brian Krogsgard\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"WPTavern: WPWeekly Episode 340 – Twas the Night Before 5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=86219&preview=true&preview_id=86219\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://wptavern.com/wpweekly-episode-340-twas-the-night-before-5-0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1802:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I are joined by Matt Mullenweg, co-creator of the WordPress project. We discussed a number of topics that have been making the rounds across the community such as:</p>\n<ul>\n<li>The WordPress 5.0 release strategy and how it will evolve once it&#8217;s released.</li>\n<li>Whether or not Gutenberg is ready and what ready means.</li>\n<li>Having Automatticians in project leadership roles and what roles WordPress core contributors can or will have going forward.</li>\n<li>ClassicPress, Publicious, and other forks.</li>\n<li>Gutenberg and Accessibility.</li>\n<li>Communication, feedback mechanisms, and trying to make sure everybody can participate in the conversation.</li>\n</ul>\n<p>We also talked about the long-term vision of Gutenberg. Near the end of the interview, Matt described some of the innovative things he&#8217;s seen built with the new editor.</p>\n<p>To round out the show, we sent shoutouts to Alex Mills who <a href=\"https://alex.blog/2018/11/30/my-cancer-just-wont-give-up/\">recently discovered</a> that he will need to battle through leukemia again.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Thursday, December 13th 3:00 P.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #340:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 Dec 2018 03:32:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"BuddyPress: BuddyPress 4.1.0 maintenance release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://buddypress.org/?p=282488\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"https://buddypress.org/2018/12/buddypress-4-1-0-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:332:\"<p>Immediately available is BuddyPress 4.1.0. This maintenance release fixes 3 bugs related to last week&#8217;s 4.0.0 release, and is a recommended upgrade for all BuddyPress installations.</p>\n<p>For complete details on the release, visit the <a href=\"https://codex.buddypress.org/releases/version-4-1-0/\">4.1.0 changelog</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 05 Dec 2018 16:18:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Boone Gorges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"Matt: Interview on Gutenberg and Future of WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=48667\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://ma.tt/2018/12/interview-on-gutenberg-and-future-of-wordpress/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:863:\"<p>Yesterday I was able to have a great conversation with Adam from WP Crafter, a popular Youtube channel with over five million views. Adam said it was his first interview but you can&#8217;t tell, we had an excellent conversation that covered Gutenberg, the 5.0 release, why WordPress has done well so far, and what&#8217;s coming in the future. If you&#8217;d like more context than text or tweets can give for what&#8217;s happening in WordPress today, check it out.</p>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n\n</div>\n\n\n\n<p>Of course Friday and Saturday are <a href=\"https://2018.us.wordcamp.org\">WordCamp US</a>, which returns to Nashville this year. Everything will be live-streamed for free, including my State of the Word presentation on Saturday, you just need to <a href=\"https://2018.us.wordcamp.org/tickets/\">pick up a free streaming ticket</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 05 Dec 2018 14:16:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WPTavern: WordPress 5.0 Targeted for December 6, Prompting Widespread Outcry Ahead of WordCamp US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86065\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"https://wptavern.com/wordpress-5-0-targeted-for-december-6-prompting-widespread-outcry-ahead-of-wordcamp-us\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:7290:\"<p>During last week&#8217;s core dev chat, Matt Mullenweg urged developers to consider WordPress 5.0 as &#8220;coming as soon as possible.&#8221; Nevertheless, his decision to set Thursday, December 6, for the <a href=\"https://make.wordpress.org/core/2018/12/04/new-5-0-target-date/\" rel=\"noopener\" target=\"_blank\">new release date</a> has taken many by surprise. </p>\n<p>Official feedback channels and social media erupted with largely negative feedback on the decision, as the new release date has 5.0 landing the day before WordCamp US begins. This is a travel day for many attending the conference. It also means both of the planned follow-up releases will be expected during the upcoming weeks when many have scheduled time off for major world holidays.</p>\n<p>Yoast CEO Joost de Valk, one of the most vocal critics of the 5.0 timelime, <a href=\"https://twitter.com/yoast/status/1069880401055895553\" rel=\"noopener\" target=\"_blank\">posted a public message of dissent</a> that resonated with many on Twitter:</p>\n<blockquote><p>We vehemently disagree with the decision to release WordPress 5.0 on December 6th, and think it&#8217;s irresponsible and disrespectful towards the community. </p>\n<p>However, we&#8217;re now going to try and support the community as well as possible and we hope to show everyone that Gutenberg is indeed a huge step forward.</p></blockquote>\n<p>Although Gutenberg as a project has strong support from many large companies in the WordPress ecosystem, much of the current uproar is rooted in a communication published in early October that indicated <a href=\"https://make.wordpress.org/core/2018/10/03/proposed-wordpress-5-0-scope-and-schedule/\" rel=\"noopener\" target=\"_blank\">5.0 would be pushed to January</a> if it missed the first set of planned release dates:</p>\n<blockquote><p>We know there is a chance that 5.0 will need additional time, so these dates can slip by up to 8 days if needed. If additional time beyond that is required, we will instead aim for the following dates:</p>\n<p>Secondary RC 1: January 8, 2019</p>\n<p>Secondary Release: January 22, 2019</p>\n<p>Should we need to switch to the secondary dates, this will be communicated as soon as we’re aware.</p></blockquote>\n<p>Companies made plans based on this schedule, but after those dates passed Mullenweg was unwilling to commit to honoring the previous communication. The plan from the outset may have been to &#8220;play it by ear&#8221; and incorporate new information as it became available, but the developer community had been counting on the published deadlines to be definitive.</p>\n<p>&#8220;This decision was made in disregard to earlier specific timelines and promises, and does not take the realities on the ground into account,&#8221; Morten Rand-Hendricksen <a href=\"https://twitter.com/mor10/status/1070013237205204992?s=19\" rel=\"noopener\" target=\"_blank\">said</a>. &#8220;I agree with @yoast it is both irresponsible and disrespectful.&#8221;</p>\n<p>Although reactions on Twitter run the gamut from unbridled optimism to full on outrage, many of those commenting on the schedule have fallen into resignation, convinced that community feedback never really mattered when it came to scheduling the release.</p>\n<p>Mullenweg&#8217;s rationale behind announcing the release date with three days notice is that Gutenberg and/or the Classic Editor are already active on more than 1.3 million sites. Users do not have to upgrade to WordPress 5.0 until they are ready. If they opt for the Classic Editor, the editing experience &#8220;will be indistinguishable from 4.9.8.&#8221; </p>\n<p>Users who are informed enough to make this choice will be well-prepared when they see that 5.0 update in their dashboards. However, one of the chief concerns is that millions of WordPress users will update without testing. Plugin developers are scrambling to ship compatibility updates and support staff will need to be on hand to help users navigate any incompatibilities or bugs in the new editing experience. Hundreds of WordPress professionals will be traveling to WordCamp US when 5.0 is expected to ship, which poses challenges for supporting users who experience problems with the update.</p>\n<p>&#8220;I do not think the attendees of WCUS are more important than much larger portion of the WordPress community who does not (and cannot) attend, and there are numerous ways to deal with 5.0 before or after the 6th if that particular day is inconvenient for someone, regardless of the reason,&#8221; Mullenweg <a href=\"https://make.wordpress.org/core/2018/12/04/new-5-0-target-date/#comment-34686\" rel=\"noopener\" target=\"_blank\">said</a> in response to comments regarding the date conflicting with travel plans.</p>\n<p>The release date <a href=\"https://make.wordpress.org/core/2018/12/04/new-5-0-target-date/\" rel=\"noopener\" target=\"_blank\">announcement</a> has well over 100 comments from frustrated contributors and developers expressing concerns, and Mullenweg has been responsive in the comments. He has recently <a href=\"https://wptavern.com/mullenweg-ramps-up-communication-ahead-of-wordpress-5-0-release-rc2-now-available\" rel=\"noopener\" target=\"_blank\">ramped up communication</a> ahead of the release, regularly attending core dev chats, adding dedicated office hours to connect with the community one-on-one, and answering some of the most pressing Gutenberg questions on his blog in a lengthy but inspiring <a href=\"https://ma.tt/2018/11/a-gutenberg-faq/\" rel=\"noopener\" target=\"_blank\">FAQ post</a>. </p>\n<p>Despite these communication efforts, contributors who are not employed by Automattic have said they feel this release has been plagued by a lack of transparency regarding decision-making. Many WordPress core committers, core contributors, and former release leads have <a href=\"https://wptavern.com/wordpress-5-0-rc-expected-on-u-s-thanksgiving-holiday-despite-last-minute-pushback-from-contributors\" rel=\"noopener\" target=\"_blank\">pushed back</a> on releasing before January to no avail. Their concerns and disappointments during the process hang like a dark cloud over what should be an exciting time for the future of WordPress.</p>\n<p>&#8220;No matter how bad the process around WordPress 5.0 might have been, finally setting a release date was the only right step following the RCs,&#8221; WordPress core developer Dominik Schilling <a href=\"https://twitter.com/ocean90/status/1069874387870978048\" rel=\"noopener\" target=\"_blank\">said</a>. &#8220;Let&#8217;s see if it&#8217;s also the beginning for doing it better to get back on releases which everyone will love.&#8221;</p>\n<p><a href=\"https://gemservers.com/\" rel=\"noopener\" target=\"_blank\">John Teague</a>, who runs an 11-person operation, managing 210 enterprise hosting clients, summarized how many are feeling ahead of WordPress 5.0 shipping out this week.</p>\n<p>&#8220;I so want to be supportive of this release,&#8221; Teague said. &#8220;But between the top down, heavily Automattic managed process, poor release communication, super short RC2, RC3, punting on accessibility, and now this two-day notice to 5.0 release &#8211; it reminds me of an old Air Force saying when instructors sent barely trained pilots up for their first solo:  </p>\n<p>&#8216;Send em up and let God grade em.\'&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 05 Dec 2018 07:37:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"HeroPress: WordPress made me walk 700km to Berlin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://heropress.com/?post_type=heropress-essays&p=2658\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"https://heropress.com/essays/wordpress-made-me-walk-700km-to-berlin/#utm_source=rss&utm_medium=rss&utm_campaign=wordpress-made-me-walk-700km-to-berlin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:9479:\"<img width=\"960\" height=\"480\" src=\"https://s20094.pcdn.co/wp-content/uploads/2018/12/120518-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: Nothing happens in your comfort zone. Go beyond and find the magic.\" /><p>Since the year 2000 I was employed at a big IT hardware/software/services firm. After about 9 years I was not feeling quite happy about how things went. Let’s say that the plans the company had with me did not really line up with the monthly reward. So, I quit and started my own company, <a href=\"https://nostromo.nl/\">nostromo.nl</a> in June 2009 (<a href=\"https://twitter.com/mbootsman/status/2090725144\">Tweetproof</a>). The goal was to serve customers by designing/developing and maintaining websites.</p>\n<h3>A new beginning</h3>\n<p>Now the challenge begins. Where do I start, who do I call? “Hello, do you need a new website? I just started my company and I can help you”. Why would I be the right person to help this company with their new website? The first thing I learned was to be sure of myself. I know what I can do and the customer needs help, probably because they are not so skillful in building websites.</p>\n<p>After a month I was talking with a potential customer, my first one (!), and I got the quotation signed. I was going to build my own CMS, and I soon realized (the hard way) that was not the way to go. I had to do a CMS comparison and WordPress won.</p>\n<h3>Here comes WordPress</h3>\n<p>The ease of use and the extensive documentation for developers convinced me. After having built numerous websites, and offering maintenance services to customers, I wanted  to know who the people were that built WordPress. Why? Well, because I was using free software and I was making money with it. That didn’t feel right, I wanted to give something back.</p>\n<p>Browsing support forums and IRC (that&#8217;s something like Slack, but without the GIFs) I quickly became aware of the WordPress community and felt I wanted to get to know these great people.</p>\n<h3>WordCamp &#8211; how it changed me</h3>\n<p>It was 2010 when I learned about a thing called WordCamp in The Netherlands. The entrance ticket was cheap and I could attend talks by inspiring people. On November 6th 2010, I was waiting in line at the registration desk. It was my turn, and someone from behind the desk said; “Hey, nostromo!”. It was <a href=\"https://twitter.com/remkusdevries\">Remkus de Vries</a>, he recognized me from my avatar on Twitter and those two words made me feel welcome immediately. This moment I remember very vividly and it marks the point where my enthusiasm for the WordPress community was sparked to life.</p>\n<h3>I volunteer &#8211; a lot</h3>\n<p>Giving back to the community got defined. Translating, helping out in the Dutch official WordPress support forum, organizing meetups/WordCamps (The Netherlands, the first WordCamp Europe, and WordCamp Rotterdam) and helping others join and be active in the WordPress community. These were some of the things I did, and yes, I had to push the brake on voluntary jobs sometimes, because I also needed to be productive and profitable in my business. Since that first WordCamp I have met amazing, inspiring and skillful people (in random order). I haven’t met new people, I met new friends.</p>\n<h3>Volunteering &#8211; taking it to the next level</h3>\n<p>It was June 4th 2018 when I got a weird idea. Yeah, that sometimes happens. Impulsive as I am, I tweeted it:</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">I&#039;m thinking about walking to the next <a href=\"https://twitter.com/hashtag/WCEU?src=hash&ref_src=twsrc%5Etfw\">#WCEU</a>. Needs some planning of course, and funding / sponsoring. Will launch a separate website after this years edition.</p>\n<p>&mdash; <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f6b6-1f3fc-200d-2642-fe0f.png\" alt=\"🚶🏼‍♂️\" class=\"wp-smiley\" /> Marcel Bootsman (@mbootsman) <a href=\"https://twitter.com/mbootsman/status/1003666255994376192?ref_src=twsrc%5Etfw\">June 4, 2018</a></p></blockquote>\n<p></p>\n<p>Little did I know, there was a body part that had a big objection. While planning to go to Belgrade for WordCamp Europe 2018 this happened:</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Good morning. Going to see doctor later, I have a sore knee and walking is merely possible. Great timing, body&#8230; <a href=\"https://twitter.com/hashtag/WCEU?src=hash&ref_src=twsrc%5Etfw\">#WCEU</a></p>\n<p>&mdash; <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f6b6-1f3fc-200d-2642-fe0f.png\" alt=\"🚶🏼‍♂️\" class=\"wp-smiley\" /> Marcel Bootsman (@mbootsman) <a href=\"https://twitter.com/mbootsman/status/1006400794617352192?ref_src=twsrc%5Etfw\">June 12, 2018</a></p></blockquote>\n<p></p>\n<p>And yes, I had to cancel our trip (my wife was going to join) and ended up laying in bed for about a week with an inflamed knee. I received antibiotics from the doctor and gladly the pain and inflammation disappeared. That aside, at the end of WCEU 2018 it was announced that WCEU 2019 was going to be in Berlin. I was happy, since that’s really close (about 700 km) to where I live.</p>\n<p>Currently I am training, I’ve planned my route and I am looking for places to sleep in Germany. Please see this website <a href=\"http://walktowc.eu\">walktowc.eu</a> for more information. Since this hike is probably going to gain some attention in the community, I had another idea. Why not use this as a means to raise money, for a good cause. Walking 700 km in about 30 days is a challenge, and if I can get enough attention, raising money might work out. Now I just had to find a good cause to raise money for&#8230;</p>\n<h3>Raising funds for DonateWC</h3>\n<p>I have known <a href=\"https://twitter.com/motherofcode\">Ines van Essen</a> for a few years now and in September 2017 she started a thing called <a href=\"https://donatewc.org/\">DonateWC</a>. After a successful initial funding campaign they sent their first recipient to <a href=\"https://donatewc.org/sponsorship-recipients/were-sending-a-speaker-to-wordcamp-cape-town/\">WordCamp Capetown</a> in October 2017. Seeing this made me believe this is another sign of how friendly and supporting the WordPress community is, to make sure that people are able to attend WordCamps, while they do not have the financial means to do so. The community supports community members, and that’s the reason why I chose DonateWC as the cause I’m going to raise funds for. And as a side effect also raise awareness of the existence of DonateWC.</p>\n<h3>My message to you</h3>\n<p>Don’t feel obliged to do things you don’t like.</p>\n<p>Do things you like.</p>\n<p>Start volunteering.</p>\n<p>Build your network.</p>\n<p>Enjoy the community.</p>\n<p>Step (or walk) out of your comfort zone.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Nothing happens in your comfort zone. Go beyond and find the magic. <a href=\"https://t.co/Rm4zDtT5JL\">pic.twitter.com/Rm4zDtT5JL</a></p>\n<p>&mdash; <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f6b6-1f3fc-200d-2642-fe0f.png\" alt=\"🚶🏼‍♂️\" class=\"wp-smiley\" /> Marcel Bootsman (@mbootsman) <a href=\"https://twitter.com/mbootsman/status/971276691447386120?ref_src=twsrc%5Etfw\">March 7, 2018</a></p></blockquote>\n<p></p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: WordPress made me walk 700km to Berlin\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=WordPress%20made%20me%20walk%20700km%20to%20Berlin&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Fwordpress-made-me-walk-700km-to-berlin%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: WordPress made me walk 700km to Berlin\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Fwordpress-made-me-walk-700km-to-berlin%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Fwordpress-made-me-walk-700km-to-berlin%2F&title=WordPress+made+me+walk+700km+to+Berlin\" rel=\"nofollow\" target=\"_blank\" title=\"Share: WordPress made me walk 700km to Berlin\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/wordpress-made-me-walk-700km-to-berlin/&media=https://heropress.com/wp-content/uploads/2018/12/120518-150x150.jpg&description=WordPress made me walk 700km to Berlin\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: WordPress made me walk 700km to Berlin\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/essays/wordpress-made-me-walk-700km-to-berlin/\" title=\"WordPress made me walk 700km to Berlin\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/essays/wordpress-made-me-walk-700km-to-berlin/\">WordPress made me walk 700km to Berlin</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 05 Dec 2018 07:00:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Marcel Bootsman\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Dev Blog: WordPress 5.0 RC3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6322\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/news/2018/12/wordpress-5-0-rc3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2755:\"<p>The third release candidate for WordPress 5.0 is now available!</p>\n\n\n\n<p><strong>WordPress 5.0 will be released on </strong><a href=\"https://make.wordpress.org/core/2018/12/04/new-5-0-target-date/\"><strong>December 6, 2018</strong></a>. This is a big release and needs&nbsp;<em>your</em>&nbsp;help—if you haven’t tried 5.0 yet, now is the time!</p>\n\n\n\n<p>To test WordPress 5.0, you can use the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-RC3.zip\">download the release candidate here</a>&nbsp;(zip).</p>\n\n\n\n<p>For details about what to expect in WordPress 5.0, please see the&nbsp;<a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\">first release candidate post</a>.</p>\n\n\n\n<p>This release candidate includes a fix for some scripts not loading on subdirectory installs (<a href=\"https://core.trac.wordpress.org/ticket/45469\">#45469</a>), and user locale settings not being loaded in the block editor (<a href=\"https://core.trac.wordpress.org/ticket/45465\">#45465</a>). Twenty Nineteen has also had a couple of minor tweaks.</p>\n\n\n\n<h2>Plugin and Theme Developers</h2>\n\n\n\n<p>Please test your plugins and themes against WordPress 5.0 and update the&nbsp;<em>Tested up to</em>&nbsp;version in the readme to 5.0. If you find compatibility problems, please be sure to post to the&nbsp;<a href=\"https://wordpress.org/support/forum/alphabeta/\">support forums</a>&nbsp;so we can figure those out before the final release. An in-depth field guide to developer-focused changes is coming soon on the&nbsp;<a href=\"https://make.wordpress.org/core/\">core development blog</a>. In the meantime, you can review the&nbsp;<a href=\"https://make.wordpress.org/core/tag/5.0+dev-notes/\">developer notes for 5.0</a>.</p>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p>If you think you’ve found a bug, you can post to the&nbsp;<a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;<a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find&nbsp;<a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p><em>WordPress Five Point Oh<br />Is just a few days away!<br />Nearly party time!</em> <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f389.png\" alt=\"🎉\" class=\"wp-smiley\" /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 04 Dec 2018 07:07:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"WPTavern: New Block Gallery Plugin Offers a Suite of Photo Gallery Blocks for Gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85195\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"https://wptavern.com/new-block-gallery-plugin-offers-a-suite-of-photo-gallery-blocks-for-gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3116:\"<p>The new Gutenberg editor has basic support for galleries with a few nice features, such as the ability to set the number of columns and automatically crop thumbnails for a more uniform appearance. If you need more control over your galleries, Rich Tabor&#8217;s <a href=\"https://wordpress.org/plugins/block-gallery/\" rel=\"noopener\" target=\"_blank\">Block Gallery</a> plugin is currently the best option made specifically for use with Gutenberg and WordPress 5.0+. It offers a suite of photo gallery blocks with minimal, tasteful styling that fits unobtrusively into virtually any site design. </p>\n<p>Block Gallery currently offers three different blocks, including masonry, fullscreen stacked, and a carousel slider. Each block has its own settings that offer more customization for the specific gallery type.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/10/Screen-Shot-2018-12-03-at-3.19.46-PM.png?ssl=1\"><img /></a></p>\n<p>The plugin also makes use of Gutenberg&#8217;s block transform utility to allow users to seamlessly transform galleries from one style to another with one click, as demonstrated in the video below.</p>\n\n<div class=\"wp-block-embed__wrapper\">\n\n</div>A demo of the new <a href=\"https://wordpress.org/plugins/block-gallery/\">Block Gallery WordPress Plugin</a>\n<p>&#8220;I built the Block Gallery plugin originally as a proving ground for exploring how my portfolio WordPress themes at ThemeBeans will interface with Gutenberg,&#8221; <a href=\"https://themebeans.com/\" rel=\"noopener\" target=\"_blank\">ThemeBeans</a> founder Rich Tabor said. &#8220;I do not particularly like the idea of disabling the block editor on portfolio custom post types, so I wanted to find a clever way for folks to use different sorts of galleries to showcase their art, illustrations, photos, etc. Block Gallery was born out of that exploration.&#8221;  </p>\n<p>Tabor said that although the core gallery block is much more robust than the classic editor’s gallery system, he wanted to give users more flexibility in how they display media. His favorite feature of the project is the ability to morph gallery blocks into different types.</p>\n<p>&#8220;That means every image, settings, display option, and color selection are each migrated instantly — if a user swaps out a selected gallery for a different type,&#8221; Tabor said. &#8220;For instance, folks can morph from a masonry gallery to a carousel slider in a single click, without having to re-upload/assign images or select any options. It’s all done behind the scenes, automagically.&#8221;</p>\n<p>Tabor&#8217;s Block Gallery plugin is a major leap forward for galleries in terms of usability. It offers a beautiful implementation of features that would have been difficult to imagine before the block editor. <a href=\"https://wordpress.org/plugins/block-gallery/\" rel=\"noopener\" target=\"_blank\">Block Gallery</a> currently has more than 400 active installs after a little more than month in the official directory. Watch for that number to jump as more people begin using the new editor when WordPress 5.0 is released. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 03 Dec 2018 22:29:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"Dev Blog: The Month in WordPress: November 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6318\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wordpress.org/news/2018/12/the-month-in-wordpress-november-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6607:\"<p>WordPress 5.0 is almost ready for release, including an all-new content editing experience. Volunteers all across the project are gearing up for the launch and making sure everything is ready. Read on to find out what&#8217;s been happening and how you can get involved.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>WordPress 5.0 Close to Launch</h2>\n\n\n\n<p>The release date for WordPress 5.0 has not yet been set, but the second release candidate (RC) <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-rc2/\">is now available</a>. The final release date will be determined based on feedback and testing of this RC. The Core development team has been posting <a href=\"https://make.wordpress.org/core/2018/12/03/5-0-gutenberg-status-update-dec-3/\">daily updates</a> on the progress of their work on v5.0, with the number of open issues for this release decreasing every day.<br /></p>\n\n\n\n<p>The primary feature of this release is <a href=\"https://wordpress.org/gutenberg/\">the new editor</a> that will become the default WordPress experience going forward. A number of people have been seeking more direct feedback from the release leads about the progress of this release, which <a href=\"https://profiles.wordpress.org/matt/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>matt</a> has facilitated by hosting <a href=\"https://make.wordpress.org/core/2018/11/29/gutenberg-5-0-listening-office-hours/\">one-to-one discussions</a> with anyone in the community who wanted to talk with him about it. He has also published <a href=\"https://ma.tt/2018/11/a-gutenberg-faq/\">an extended FAQ</a> covering many of the questions people have been asking.<br /></p>\n\n\n\n<p>Alongside the development of the new editor, the Mobile team has been working hard to bring the WordPress mobile apps up to speed. They plan to make a beta version available <a href=\"https://make.wordpress.org/mobile/2018/11/15/gutenberg-in-the-apps-what-to-expect/\">in February 2019</a>.<br /></p>\n\n\n\n<p>Want to get involved in developing WordPress Core in 5.0 and beyond? Follow <a href=\"https://make.wordpress.org/core\">the Core team blog</a> and join the #core channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.</p>\n\n\n\n<h2>New WordPress Support Platform Goes Live</h2>\n\n\n\n<p>WordPress user documentation has long been hosted on the <a href=\"https://codex.wordpress.org/\">WordPress Codex</a>, but for the past couple of years an ambitious project has been underway to move that content to a freshly-built WordPress-based platform. This project, named “HelpHub,” is now live and <a href=\"https://wordpress.org/support/\">the official home of WordPress Support</a>.<br /></p>\n\n\n\n<p>There is still plenty of content that needs to be migrated from the Codex to HelpHub, but the initial move is done and the platform is ready to have all WordPress’ user documentation moved across. HelpHub will be the first place for support, encouraging users to find solutions for themselves before posting in the <a href=\"https://wordpress.org/support/forums/\">forums</a>.<br /></p>\n\n\n\n<p>Want to get involved in populating HelpHub with content, or with its future development? Follow <a href=\"https://make.wordpress.org/docs/\">the Documentation team blog</a> and join the #docs channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.</p>\n\n\n\n<h2>Spanish WordPress Community Pushes Translations Forward</h2>\n\n\n\n<p>The WordPress community in Spain has been hard at work making sure as much of the WordPress project as possible is available in Spanish. <a href=\"https://es.wordpress.org/2018/11/07/logros-equipo-traducciones-wordpress-espana/\">They have recently translated more of the project than ever</a> — including WordPress Core, WordPress.org, the mobile apps and the top 120 plugins in the Directory.<br /></p>\n\n\n\n<p>This achievement has largely been possible due to the fact that <a href=\"https://make.wordpress.org/polyglots/teams/?locale=es_ES\">the Spanish translation team</a> has over 2,500 individuals contributing to it, making it the largest translation team across the whole project. <br /></p>\n\n\n\n<p>Want to get involved in translating WordPress into your local language? You can <a href=\"https://translate.wordpress.org/\">jump straight into translations</a>, follow <a href=\"https://make.wordpress.org/polyglots/\">the Polyglots team blog</a> and join the #polyglots channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Further Reading:</h2>\n\n\n\n<ul><li>All volunteer teams have checked in with their <a href=\"https://wordpress.org/news/2018/11/quarterly-updates-q3-2018/\">latest quarterly updates</a>.</li><li>The WordPress Support Team <a href=\"https://make.wordpress.org/support/2018/11/new-volunteer-orientation-for-wp-support-contributors-dec-9/\">is hosting an orientation</a> for new Support volunteers on December 9.</li><li><a href=\"https://2018.us.wordcamp.org/tickets/\">Tickets are now available</a> to watch the WordCamp US livestream for free.</li><li>WordPress Core <a href=\"https://core.trac.wordpress.org/ticket/45287\">has switched to a WP-CLI command</a> for generating localization files.</li><li>WordPress Coding Standards v1.2.0 <a href=\"https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/releases/tag/1.2.0\">has been released</a> with some really useful improvements.</li><li>The first ever <a href=\"https://2019.nordic.wordcamp.org/\">WordCamp Nordic</a> is taking place on March 7-8, 2019 with ticket sales now open.</li><li>The WordCamp Incubator program is going very well this year — <a href=\"https://make.wordpress.org/community/2018/11/27/wordcamp-incubator-2018-update-thread-november-edition/\">you can see the latest updates here</a>.</li><li>The Mobile Team is looking for testers for the upcoming v11.3 release of the WordPress mobile apps on <a href=\"https://make.wordpress.org/mobile/2018/11/21/call-for-testing-wordpress-for-android-11-3/\">Android</a> and <a href=\"https://make.wordpress.org/mobile/2018/11/21/call-for-testing-wordpress-for-ios-11-3/\">iOS</a>.</li><li>The WordCamp Europe team is looking for local communities to <a href=\"https://2019.europe.wordcamp.org/2018/11/29/call-for-host-city/\">apply to be the host city</a> for the 2020 event.</li></ul>\n\n\n\n<p><em>If you have a story we should consider including in the next “Month in WordPress” post, please </em><a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\"><em>submit it here</em></a><em>.</em><br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 03 Dec 2018 17:43:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Hugh Lashbrooke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"WPTavern: WordCamp Europe Opens the Call for Host City 2020\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86110\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"https://wptavern.com/wordcamp-europe-opens-the-call-for-host-city-2020\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2379:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/11/wordcamp-eurpoe-2019.png?ssl=1\"><img /></a></p>\n<p>WordCamp Europe has opened the <a href=\"https://2019.europe.wordcamp.org/2018/11/29/call-for-host-city/\" rel=\"noopener\" target=\"_blank\">call for a host city for 2020</a>. Previous editions of the event have been held in Leiden, Sofia, Seville, Vienna, Paris, and Belgrade, and the next on deck is Berlin in 2019. Organizers are always working ahead for an event this size. In fact, the team plans together for the better part of a year before attendees arrive for the three-day event. The upcoming WCEU is currently being planned by a team of 66 organizers from 15 countries. </p>\n<p>Teams applying to host WordCamp Europe are required to have organized at least one or more successful WordCamps in a European city, with at least one recent one held in 2017 or 2018. The core organizing team will work with all applicants in the open to help them prepare the best applications possible, as detailed in the announcement:  </p>\n<blockquote><p>To guarantee total transparency during the process, all applicants receive the same help in the appropriate public channel of the WCEU Slack workspace. No question is considered or answered in a private message.</p></blockquote>\n<p>Three weekends in June 2020 are available to applicants as potential dates. Teams interested to apply are encouraged to begin filling out the <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfPd5InsSfaGXA1zRu_PJ435AGXXPlUYMuCqCBkEOKRNSrd7w/viewform\" rel=\"noopener\" target=\"_blank\">7-page survey</a> (which can be started and completed as information becomes available). It includes questions about the local community, previous WordCamps, possible venue(s), cost of living in the city, and other data that will be important to the selection committee. </p>\n<p>A preliminary online AMA session will be held December 13, 2018, to assist teams in answering questions about the application process. The deadline to apply to host the event is February 28, 2019. Applicants will receive a decision by March 15, 2019, and the final selection will be announced during the closing remarks in Berlin next June. Check out the call for host cities <a href=\"https://2019.europe.wordcamp.org/2018/11/29/call-for-host-city/\" rel=\"noopener\" target=\"_blank\">announcement</a> for more information.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 03 Dec 2018 16:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"WPTavern: Mullenweg Ramps Up Communication Ahead of WordPress 5.0 Release, RC2 Now Available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86090\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"https://wptavern.com/mullenweg-ramps-up-communication-ahead-of-wordpress-5-0-release-rc2-now-available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5209:\"<p><a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-rc2/\" rel=\"noopener\" target=\"_blank\">WordPress 5.0 RC2</a> was released today with 15 notable updates, including improvements to block preview styling, browser-specific bug fixes, and other changes. RC2 was released simultaneously with <a href=\"https://make.wordpress.org/core/2018/11/30/whats-new-in-gutenberg-30th-november/\" rel=\"noopener\" target=\"_blank\">Gutenberg version 4.6</a>. </p>\n<p>The official release date for WordPress 5.0 has not yet been announced, because it depends on feedback from RC2 testing. Contributors&#8217; uneasiness with not having an official release date seemed to reach a critical tipping point during this week&#8217;s WordPress dev chat, as many participants pressured Matt Mullenweg, who is leading the release, to give more information on when they can expect 5.0. </p>\n<p>&#8220;It is very important that we have a release date to aim for,&#8221; ACF founder Elliot Condon said. &#8220;I’m finding the current &#8216;waiting game&#8217; quite stressful, and I suspect a few other developers will share the same feeling.&#8221;</p>\n<p>Tensions were high as contributors cited various reasons for wanting a date, including companies needing support staff on hand, upcoming holidays, documentation planning, and the importance of user trust.</p>\n<p>&#8220;We&#8217;re determining the release date based on the open issues,&#8221; Mullenweg said. &#8220;Please consider it as coming as soon as possible, when everything is resolved.&#8221;</p>\n<p>&#8220;I hope it&#8217;s clear we&#8217;re trying to get this out as soon as possible, but don&#8217;t yet have enough data to announce an official date. As mentioned last week we have done a number of December releases in the past, and may this time, but don&#8217;t have enough data to announce a new date yet.&#8221;</p>\n<p>Mullenweg also urged dev chat attendees to keep in mind that any site administrators can install the Classic Editor plugin to keep the current editing experience, regardless of the 5.0 release date. He said the date will be announced via a P2 post, not during a dev chat.</p>\n<p>&#8220;If you want to know what to plan on, please don&#8217;t hold anything back based on expected dates, please test or deploy the RCs, that&#8217;s what they&#8217;re for,&#8221; Mullenweg said. </p>\n<p>In the meantime, Mullenweg is spending the weekend taking questions from the community during <a href=\"https://make.wordpress.org/core/2018/11/29/gutenberg-5-0-listening-office-hours/\" rel=\"noopener\" target=\"_blank\">24 office hours slots</a>. He also published a lengthy post titled &#8220;<a href=\"https://ma.tt/2018/11/a-gutenberg-faq/\" rel=\"noopener\" target=\"_blank\">WordPress 5.0: A Gutenberg FAQ</a>,&#8221; which reaffirms WordPress&#8217; mission in the context of Gutenberg. It answers questions like &#8220;Why do we need Gutenberg at all?&#8221; and &#8220;Why blocks?&#8221;</p>\n<p>&#8220;I knew we would be taking a big leap,&#8221; Mullenweg said. &#8220;But it’s a leap we need to take, and I think the end result is going to open up many new opportunities for everyone in the ecosystem, and for those being introduced to WordPress for the first time. It brings us closer to our mission of democratizing publishing for everyone.&#8221;</p>\n<p>The stats Mullenweg cited about previously having 9 major WordPress releases in December (34% of all releases in the last decade) indicate that a December release may still be on the table. His post addresses the perceived urgency behind getting Gutenberg out the door and into the hands of users. In evaluating WordPress 5.0&#8217;s readiness, he said it&#8217;s important to differentiate between the code being ready and the community being ready.</p>\n<p>&#8220;In the recent debate over Gutenberg readiness, I think it’s important to understand the difference between Gutenberg being ready code-wise (it is now), and whether the entire community is ready for Gutenberg,&#8221; Mullenweg said.</p>\n<p>&#8220;It will take some time — we’ve had 15 years to polish and perfect core, after all — but the global WordPress community has some of the world’s most talented contributors and we can make it as good as we want to make it.&#8221;</p>\n<p>The post also offers a preview of where Gutenberg is going in the next site customization phase and how it will change the way users build their sites.</p>\n<p>&#8220;The Editor is just the start,&#8221; he said. &#8220;In upcoming phases blocks will become a fundamental part of entire site templates and designs. It’s currently a struggle to use the Customizer and figure out how to edit sections like menus, headers, and footers. With blocks, people will be able to edit and manipulate everything on their site without having to understand where WordPress hides everything behind the scenes.&#8221;</p>\n<p>Mullenweg said he plans to talk more about the next phases following site customization during the State of the Word address at WordCamp US. If you have questions about Gutenberg and where it&#8217;s headed, the comments are open on his <a href=\"https://ma.tt/2018/11/a-gutenberg-faq/\" rel=\"noopener\" target=\"_blank\">post</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 01 Dec 2018 03:15:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WPTavern: Let Us Know If You’re Hosting a WordCamp US Watch Party\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86150\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"https://wptavern.com/let-us-know-if-youre-hosting-a-wordcamp-us-watch-party\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:505:\"<p>WordCamp US is next weekend and if you&#8217;re unable to attend, you can watch from home via the <a href=\"https://wptavern.com/wordcamp-us-2018-livestream-tickets-now-available\">free livestream</a>. However, some WordPress meetup groups host watch parties. These parties generally include food, beverages, and a large projection screen. </p>\n\n\n\n<p>If you&#8217;re hosting one of these parties, please let us know about it in the comments. Tell us the location and what attendees can expect. <br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 01 Dec 2018 01:11:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Dev Blog: WordPress 5.0 RC2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6287\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/news/2018/11/wordpress-5-0-rc2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3298:\"<p>The second release candidate for WordPress 5.0 is now available!</p>\n\n\n\n<p>This is an important milestone, as we near the release of WordPress 5.0. A final release date will be announced soon, based on feedback from this release candidate. Things are appearing very stable and we hope to announce a date soon. This is a big release and needs <em>your</em> help—if you haven’t tried 5.0 yet, now is the time! </p>\n\n\n\n<p>To test WordPress 5.0, you can use the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-RC2.zip\">download the release candidate here</a>&nbsp;(zip).</p>\n\n\n\n<p>For details about what to expect in WordPress 5.0, please see the <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\">previous release candidate post</a>.</p>\n\n\n\n<h2>Significant changes</h2>\n\n\n\n<ul><li>We stopped rendering&nbsp;<em>AdminNotices</em>&nbsp;compatibility component, as this previous attempt at backward compatibility was bringing in numerous incompatible banners and notices from plugins.</li><li>An update to the parser to better deal with malformed HTML that could cause a loop. We&#8217;re only aware of this in the wild being triggered once in the <a href=\"https://gutenstats.blog/\">over a million posts</a> made with Gutenberg, but it caused a loop so we wanted to fix for RC2.</li></ul>\n\n\n\n<h2>Cosmetic and minor changes in RC2</h2>\n\n\n\n<ul><li>Accessibility: Simplify sidebar tabs&nbsp;aria-labels.</li><li>Make the&nbsp;Image&nbsp;Link URL field readonly.</li><li>Internationalization: Merge&nbsp;similar text strings that differed only in capitalization.</li><li>CSS: Improve block preview&nbsp;styling.</li><li>CSS: Fix&nbsp;visual issues&nbsp;with&nbsp;Button&nbsp;block text wrap.</li><li>Fix&nbsp;getSelectedBlockClientId selector.</li><li>Fix&nbsp;Classic&nbsp;block&nbsp;not showing galleries on a grid.</li><li>Fix an issue where the block toolbar&nbsp;would cause an image to jump&nbsp;downwards when the&nbsp;<em>wide</em>&nbsp;or&nbsp;<em>full</em>&nbsp;alignments were activated.</li><li>Move editor specific styles&nbsp;from style.scss to editor.scss in&nbsp;Cover&nbsp;block.</li><li>Fix modals&nbsp;in Microsoft Edge browser.</li><li>Fix Microsoft IE11 focus loss&nbsp;after TinyMCE init.&nbsp;Add&nbsp;IE check.</li><li>Fix Microsoft IE11 input when mounting TinyMCE.</li><li>Change @package names&nbsp;to WordPress.</li></ul>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p>If you think you’ve found a bug, you can post to the <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on WordPress Trac</a>, where you can also find <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<pre class=\"wp-block-verse\"><em>RC bittersweet.<br />We welcome in Gutenberg,<br />Vale Gutenbeard.</em></pre>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Nov 2018 23:16:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"WPTavern: Gutenberg Times to Host Live Q&amp;A with Gutenberg Leads on Friday, November 30\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85908\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"https://wptavern.com/gutenberg-times-to-host-live-qa-with-gutenberg-leads-on-friday-november-30\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1224:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/11/creating-gutenberg-q-and-a.jpg?ssl=1\"><img /></a></p>\n<p>Birgit Pauli-Haack, curator of the <a href=\"https://gutenbergtimes.com/\" rel=\"noopener\" target=\"_blank\">Gutenberg Times</a> website, is hosting a Q&#038;A session with Gutenberg&#8217;s phase 1 design and development leads on Friday, November 30, at 2pm ET (19:00 UTC). Matias Ventura, Tammie Lister, and Joen Asmussen will join Pauli-Haack to discuss their journey &#8220;Creating Gutenberg&#8221; over the past two years.</p>\n<p>If you have any pressing questions about Gutenberg&#8217;s architecture, design, or the future of the project, this event is a good opportunity to speak to members of the team who have been building it full-time. The Q&#038;A is free to watch but attendees who want to participate with questions will need to <a href=\"https://zoom.us/webinar/register/6915430666443/WN_d_ejr1e0T0Se1YpyoU0Ojg\" rel=\"noopener\" target=\"_blank\">register</a>. There are 100 seats available. Pauli-Haack will also be live-streaming the session to the <a href=\"https://www.youtube.com/channel/UCSD3LG2kSHdr7llRSHaylxw\" rel=\"noopener\" target=\"_blank\">Gutenberg Times YouTube channel</a>. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Nov 2018 00:48:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"Matt: WordPress 5.0: A Gutenberg FAQ\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=48628\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:38:\"https://ma.tt/2018/11/a-gutenberg-faq/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:18327:\"<p><em>Update: </em><a href=\"https://wordpress.org/news/2018/12/bebo/\"><em>On December 6th we released WordPress 5.0</em></a><em>. It was definitely the most controversial release in a while, but the usage and adoption metrics are looking similar to previous releases. I&#8217;m looking forward to continuing to iterate on the new block editor!</em></p>\n\n\n\n<p>We are nearing the release date for WordPress 5.0 and Gutenberg, one of the most important and exciting projects I’ve worked on in my <a href=\"https://ma.tt/2018/05/wordpress-at-15/\">15 years</a> with this community. <br /></p>\n\n\n\n<p>I knew we would be taking a big leap. But it’s a leap we need to take, and I think the end result is going to open up many new opportunities for everyone in the ecosystem, and for those being introduced to WordPress for the first time. It brings us closer to our mission of democratizing publishing for everyone.<br /></p>\n\n\n\n<p>I recently visited WordCamp Portland to talk about Gutenberg and WordPress 5.0, which will also include the new default theme <a href=\"https://make.wordpress.org/core/2018/10/16/introducing-twenty-nineteen/\">Twenty Nineteen</a>, which you’re seeing me test out on this very site. There were some great questions and testimonials about Gutenberg, so I’d urge you to watch the <a href=\"https://wordpress.tv/2018/11/08/matt-mullenweg-qa-at-wordcamp-portland-2018/\">full video</a> and <a href=\"https://wptavern.com/matt-mullenweg-addresses-controversies-surrounding-gutenberg-at-wordcamp-portland-qa\">read the WP Tavern recap</a>. I&#8217;ve also visited meetups, responded to review threads, kept an eye on support, and I&#8217;m in the middle of <a href=\"https://make.wordpress.org/core/2018/11/29/gutenberg-5-0-listening-office-hours/\">office hours with the core community</a>.<br /></p>\n\n\n\n<p>As we head toward the release date and <a href=\"https://2018.us.wordcamp.org/\">WordCamp US</a>, I&#8217;ve put many questions and answers into a Gutenberg FAQ below. For those who have other questions, I will be checking the comments here. <br /></p>\n\n\n\n<p>It’s an exciting time, and I’m thrilled to be working with y’all on this project. </p>\n\n\n\n<img />Not the ship of Theseus\n\n\n\n<h2>What is Gutenberg? </h2>\n\n\n\n<p>Gutenberg, for those who aren&#8217;t actively following along, is a brand new Editor for WordPress &#8212; contributors have been working on it since January 2017 and it&#8217;s one of the most significant changes to WordPress in years. It&#8217;s built on the idea of using &#8220;blocks&#8221; to write and design posts and pages. <br /></p>\n\n\n\n<p>This will serve as the foundation for future improvements to WordPress, including blocks as a way not just to design posts and pages, but also entire sites. <br /></p>\n\n\n\n<p>The overall goal is to simplify the first-time user experience of WordPress &#8212; for those who are writing, editing, publishing, and designing web pages. The editing experience is intended to give users a better visual representation of what their post or page will look like when they hit publish. As I wrote in <a href=\"https://ma.tt/2017/08/we-called-it-gutenberg-for-a-reason/\">my post last year</a>, &#8220;Users will finally be able to build the sites they see in their imaginations.&#8221; <br /></p>\n\n\n\n<p>Matías Ventura, team lead for Gutenberg, <a href=\"https://matiasventura.com/post/gutenberg-or-the-ship-of-theseus/\">wrote an excellent post</a> about the vision for Gutenberg, saying, “It’s an attempt to improve how users interact with their content in a fundamentally visual way, while at the same time giving developers the tools to create more fulfilling experiences for the people they are helping.”</p>\n\n\n\n<h2>Why do we need Gutenberg at all? </h2>\n\n\n\n<p>For many of us already in the WordPress community, it can be easy to forget the learning curve that exists for people being introduced to WordPress for the first time. Customizing themes, adding shortcodes, editing widgets and menus &#8212; there’s an entire language that one must learn behind the scenes in order to make a site or a post look like you want it to look. <br /></p>\n\n\n\n<p>Over the past several years, JavaScript-based applications have created opportunities to simplify the user experience in consumer apps and software. Users’ expectations have changed, and the bar has been raised for simplicity. It is my deep belief that WordPress must evolve to improve and simplify its own user experience for first-time users. <br /></p>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">What can you do in 137 lines in <a href=\"https://twitter.com/hashtag/Gutenberg?src=hash&ref_src=twsrc%5Etfw\">#Gutenberg</a>? <a href=\"https://t.co/zLINZGMXMe\">pic.twitter.com/zLINZGMXMe</a></p>&mdash; Dennis Snell (@dmsnell23) <a href=\"https://twitter.com/dmsnell23/status/1063126946350096389?ref_src=twsrc%5Etfw\">November 15, 2018</a></blockquote>\n</div>\n\n\n\n<h2>Why blocks? </h2>\n\n\n\n<p>The idea with blocks was to create a new common language across WordPress, a new way to connect users to plugins, and replace a number of older content types &#8212; things like shortcodes and widgets &#8212; that one had to be well-versed in the idiosyncrasies of WordPress to understand. <br /></p>\n\n\n\n<p>The block paradigm is not a new one &#8212; in fact many great plugins have already shown the promise of blocks with page design in WordPress. Elementor, one of the pioneers in this space, has now introduced <a href=\"https://elementor.com/blog/blocks-for-gutenberg/\">a new collection of Gutenberg blocks</a> to showcase what’s possible: <br /></p>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n\n</div>\n\n\n\n<h2>Why change the Editor? </h2>\n\n\n\n<p>The Editor is where most of the action happens in WordPress’s daily use, and it was a place where we could polish and perfect the block experience in a contained environment. <br /></p>\n\n\n\n<p>Additionally, the classic Editor was built primarily for text &#8212; articles have become increasingly multimedia, with social media embeds, maps, contact forms, photo collages, videos, and GIFs. It was time for a design paradigm that allowed us to move past the messy patchwork of shortcodes and text. <br /></p>\n\n\n\n<p>The Editor is just the start. In upcoming phases blocks will become a fundamental part of entire site templates and designs. It’s currently a struggle to use the Customizer and figure out how to edit sections like menus, headers, and footers. With blocks, people will be able to edit and manipulate everything on their site without having to understand where WordPress hides everything behind the scenes. <br /></p>\n\n\n\n<h2>What does Automattic get out of this? </h2>\n\n\n\n<p>There have been posts recently asking questions about Automattic’s involvement in Gutenberg compared to other contributors and companies. There is no secret conspiracy here &#8212; as project lead I was able to enlist the help of dozens of my colleagues to contribute to this project, and I knew that a project of this size would require it. Automattic aims to have 5% of its people dedicated to WordPress community projects, which at its current size would be about 42 people full-time. The company is a bit behind that now (~35 full-time), and the company is growing a lot next year, so look for 10-15 additional people working on core and community projects.&nbsp;<br /></p>\n\n\n\n<p>In the end, Gutenberg is similar to many other open source projects &#8212; Automattic will benefit from it, but so will everyone else in the WordPress community (and even <a href=\"https://drupalgutenberg.org/\">the Drupal community</a>). It’s available for everyone under the GPL. If the goal was purely to benefit Automattic it would have been faster, easier, and created an advantage for Automattic to have Gutenberg just on WP.com. That wasn&#8217;t, and isn&#8217;t, the point.</p>\n\n\n\n<h2>Is Gutenberg ready? </h2>\n\n\n\n<p>Absolutely. Our original goal with Gutenberg was to get it on 100,000 sites to begin testing &#8212; it’s now already on <a href=\"https://gutenstats.blog/\">more than 1 million sites</a>, and it’s the fastest-growing plugin in WordPress history. There is a lot of user demand.<br /></p>\n\n\n\n<p>The goal was to both test Gutenberg on as many sites as possible before the 5.0 release, and also to encourage plugin developers to make sure their plugins and services will be ready. With everyone pitching in, we can make this the most <em>anti-climactic</em> release in WordPress history. &nbsp;<br /></p>\n\n\n\n<p>In the recent debate over Gutenberg readiness, I think it&#8217;s important to understand the difference between Gutenberg being ready code-wise (it is now), and whether the entire community is ready for Gutenberg.<br /></p>\n\n\n\n<p>It will take some time &#8212; we&#8217;ve had 15 years to polish and perfect core, after all &#8212; but the global WordPress community has some of the world&#8217;s most talented contributors and we can make it as good as we want to make it. <br /></p>\n\n\n\n<p>There is also a new opportunity to dramatically expand the WordPress contributor community to include more designers and JavaScript engineers. With JavaScript apps there are also new opportunities for designing documentation and support right on the page, so that help arrives right where you need it. <br /></p>\n\n\n\n<p>Someone described Gutenberg to me as “WordPress in 3D.” I like the sound of that. Blocks are like layers you can zoom in and out of. The question now is: What are we going to build with this new dimension? </p>\n\n\n\n<h2>Do I have to switch to Gutenberg when WordPress 5.0 is released? </h2>\n\n\n\n<p>Not at all. When it’s released, you get to choose what happens. You can install the <a href=\"https://wordpress.org/plugins/classic-editor/\">Classic Editor plugin</a> today and when 5.0 is released, nothing will change. We&#8217;ve commited to supporting and updating Classic Editor until 2022. If you’d like to <a href=\"https://wordpress.org/plugins/gutenberg/\">install Gutenberg early</a>, you can do that now too. The Classic Editor plugin has been available for 13 months now, and Gutenberg has been available for 18 months. Both have been heavily promoted since August 2018, and more than 1.3 million .org sites have opted-in already to either experience, so nothing will change for them when they update to 5.0.</p>\n\n\n\n<h2>How can I make sure I’m ready? </h2>\n\n\n\n<p>Before updating to 5.0, try out the <a href=\"https://wordpress.org/plugins/gutenberg/\">Gutenberg plugin</a> with your site to ensure it works with your existing plugins, and also to get comfortable with the new experience. Developers across the entire ecosystem are working hard to update their plugins, but your mileage and plugins may vary. And you can always use the Classic Editor to address any gaps.<br /></p>\n\n\n\n<p>As with every new thing, things might feel strange and new for a bit, but I’m confident once you start using it you’ll get comfy quickly and you won’t want to go back.</p>\n\n\n\n<p>The release candidate of 5.0 is stable and fine to develop against and test.</p>\n\n\n\n<h2>When will 5.0 be released?</h2>\n\n\n\n<p>We have had a stable RC1, which stands for first release candidate, and about to do our second one. There is only currently one known blocker and it&#8217;s cosmetic. The stability and open issues in the release candidates thus far makes me optimistic we can release soon, but as before the primary driver will be the stability and quality of the underlying software. We made the mistake prior of announcing dates when lots of code was still changing, and had to delay because of regressions and bugs. Now that things aren&#8217;t changing, we&#8217;re approaching a time we can commit to a date soon.</p>\n\n\n\n<h2>Is it terrible to do a release in December?</h2>\n\n\n\n<p>Some people think so, some don&#8217;t. There have been <a href=\"https://wordpress.org/about/roadmap/\">9 major WordPress releases</a> in previous Decembers. December releases actually comprise 34% of our major releases in the past decade.</p>\n\n\n\n<h2>Can I set it up so only certain users get to use Gutenberg? </h2>\n\n\n\n<p>Yes, and soon. We’re going to be doing another update to the Classic Editor before the 5.0 release to give it a bit more fine-grained user control &#8212; we’ve heard requests for options that allow certain users or certain roles and post types to have Gutenberg while others have Classic Editor. </p>\n\n\n\n<h2>What happens after 5.0? </h2>\n\n\n\n<p>We’ve been doing a release of Gutenberg every two weeks, and 5.0 isn’t going to stop that. We’ll do minor release to 5.0 (5.0.1, 5.0.2) fortnightly, with occasional breaks, so if there’s feedback that comes in, we can address it quickly. Many of the previous bugs in updates were from juggling between updates in the plugin and core, now that Gutenberg is in core it&#8217;s much easier and safer to incrementally update.</p>\n\n\n\n<h2>What about Gutenberg and accessibility? </h2>\n\n\n\n<p>We’ve had some important discussions about accessibility over the past few weeks and I am grateful for those who have helped raise these questions in the community. <br /></p>\n\n\n\n<p>Accessibility has been core to WordPress from the very beginning. It’s part of why we started – the adoption of web standards and accessibility.<br /></p>\n\n\n\n<p>But where I think we fell down was with project management &#8212; specifically, we had a team of volunteers that felt like they were disconnected from the rapid development that was happening with Gutenberg. We need to improve that. In the future I don’t know if it makes sense to have accessibility as a separate kind of process from the core development. It needs to be integrated at every single stage. <br /></p>\n\n\n\n<p>Still, we’ve accomplished a lot, as Matías <a href=\"https://make.wordpress.org/core/2018/10/18/regarding-accessibility-in-gutenberg/\">has written about</a>. There have been more than 200 closed issues related to accessibility since the very beginning. <br /></p>\n\n\n\n<p>We’re also taking the opportunity to fix some things that have had poor accessibility in WordPress from the beginning. <a href=\"https://codemirror.net/6/\">CodeMirror</a>, which is a code editor for templates, is not accessible, so we have some parts of WordPress that we really need to work on to make better. <br /></p>\n\n\n\n<p>Speaking of which, CodeMirror was seeking funding for their next version &#8212; Automattic has now <a href=\"https://codemirror.net/6/\">sponsored that funding</a> and in return it will be made available under the GPL, and that the next version of CodeMirror will be fully accessible. <br /></p>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Great news ? Due to a substantial donation from <a href=\"https://twitter.com/automattic?ref_src=twsrc%5Etfw\">@automattic</a> our crowdfunding goal has been reached, and CodeMirror 6 is definitely happening!</p>&mdash; CodeMirror (@codemirror) <a href=\"https://twitter.com/codemirror/status/1054759532990218242?ref_src=twsrc%5Etfw\">October 23, 2018</a></blockquote>\n</div>\n\n\n\n<p>Finally, Automattic will be funding an accessibility study of WordPress, Gutenberg, and an evaluation of best practices across the web, to ensure WordPress is fully accessible and setting new standards for the web overall. </p>\n\n\n\n<h2>After WordPress 5.0, is the Gutenberg name going to stick around?</h2>\n\n\n\n<p>Sometimes code names can take on a life of their own. I think Gutenberg is still what we’ll call this project &#8212; it’s <a href=\"https://github.com/WordPress/gutenberg\">called that on GitHub</a>, and you’re also seeing it <a href=\"https://drupalgutenberg.org/\">adopted by other CMSes beyond WordPress</a> &#8212; but for those outside the community I can see it simply being known as “the new WordPress editor.” </p>\n\n\n\n<h2>With the adoption of React for Gutenberg, what do you see as the future for React and WordPress? </h2>\n\n\n\n<p>In 2015 I said <a href=\"https://wordpress.tv/2015/12/07/matt-mullenweg-state-of-the-word-2015/\">“Learn JavaScript deeply”</a> &#8212; then in 2016 we brought the <a href=\"https://developer.wordpress.org/rest-api/\">REST API</a> into Core. Gutenberg is the first major feature built entirely on the REST API, so if you are learning things today, learn JavaScript, and I can imagine a future wp-admin that’s 100% JavaScript talking to APIs. I’m excited to see that happen. <br /></p>\n\n\n\n<p>Now, switching to a pure JavaScript interface could break some backward compatibility, but a nice thing about Gutenberg is that it provides an avenue for all plugins to work through &#8212; it gives them a way to plug in to that. It can eliminate the need for what’s currently done in custom admin screens. &nbsp;<br /></p>\n\n\n\n<p>The other beautiful thing is that because Gutenberg essentially allows for translation into many different formats &#8212; it can publish to your web page, it can publish your RSS feed, AMP, it can publish blocks that can be translated into email for newsletters &#8212; there’s so much in the structured nature of Gutenberg and the semantic HTML that it creates and the grammar that’s used to parse it, can enable for other applications. <br /></p>\n\n\n\n<p>It becomes a little bit like a <em>lingua franca</em> that even crosses CMSes. There’s now these new cross-CMS Gutenberg blocks that will be possible. It’s not just WordPress anymore &#8212; it might be a JavaScript block that was written for Drupal that you install on your WordPress site. How would that have ever happened before? That’s why we took two years off &#8212; it’s why we’ve had everyone in the world working on this thing. It’s because we want it to be #WorthIt. <br /></p>\n\n\n\n<p>And WordPress 5.0 is just the starting line. We want to get it to that place where it’s not just better than what we have today, but a world-class, web-defining experience. It’s what we want to create and what everyone deserves. </p>\n\n\n\n<h2>Was this post published with Gutenberg?</h2>\n\n\n\n<p>Of course. <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f604.png\" alt=\"😄\" class=\"wp-smiley\" /> No bugs, but I do see lots of areas we can continue to improve and I&#8217;m excited to get to work on future iterations.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 29 Nov 2018 23:56:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"WPTavern: WPCampus Seeks to Raise $30K for Gutenberg Accessibility Audit\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=86032\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"https://wptavern.com/wpcampus-seeks-to-raise-30k-for-gutenberg-accessibility-audit\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4364:\"<p>WPCampus is <a href=\"https://wpcampus.org/2018/11/fundraising-for-wpcampus-gutenberg-accessibility-audit/\" rel=\"noopener\" target=\"_blank\">seeking funding</a> to conduct an accessibility audit of WordPress&#8217; Gutenberg editor. The non-profit organization is dedicated to helping web professionals, educators, and others who work with WordPress in higher education. Educational institutions often have stricter legal obligations that require software to be WCAG 2.0 level AA compliant and many European institutions set the bar even higher at WCAG 2.1.</p>\n<p><a href=\"https://wptavern.com/wpcampus-is-pursuing-an-independent-accessibility-audit-of-gutenberg\" rel=\"noopener\" target=\"_blank\">WPCampus moved to spearhead an audit</a> after Automattic decided to forego Matt MacPherson&#8217;s <a href=\"https://wptavern.com/gutenberg-accessibility-audit-postponed-indefinitely\" rel=\"noopener\" target=\"_blank\">proposal</a> for Gutenberg to undergo an accessibility audit. Results of the audit will help WPCampus determine any potential legal risk for institutions upgrading to WordPress 5.0 and will also identify specific challenges that Gutenberg introduces for assistive technology users and others with accessibility needs.</p>\n<p>&#8220;A professional accessibility audit is a large expense for a small nonprofit like WPCampus,&#8221; WPCampus director Rachel Cherry said. &#8220;Accessibility is important to all of us in the WordPress community. We’re asking for your help to fund the audit and ensure this important research is completed.&#8221;</p>\n<p>WPCampus is still evaluating proposals from vendors and will announce its selection soon, along with an updated timeline for completing the audit. The organization has set its funding goal at $30,000, an amount that falls in the mid-range of the proposals the selection committee has received. If the campaign raises more than the amount required, WPCampus plans to designate the funds for other accessibility-related efforts, such as future audits and live captioning at conferences.</p>\n<p>Two days after launching the campaign, WPCampus has received $3,692 (12%) towards its funding goal. The organization plans to share the results of the audit and any supporting documents on its website.</p>\n<p>The comments published on the donations page demonstrate how strongly supporters feel about getting an audit and using that information to make Gutenberg a tool that anyone can use. The topic of accessibility is close to the heart for many donating to the campaign.</p>\n<p>&#8220;When I was navigating stores with three small children, stores which helped me with automatic doors, wide aisles, and shopping carts for a crowd often made the decision for me as to whether I could shop at all,&#8221; WordPress developer <a href=\"https://robincornett.com/\" rel=\"noopener\" target=\"_blank\">Robin Cornett</a> said. &#8220;As we create content and build tools for the internet, we should be doing all we can to ensure the best online experience we can for everyone.&#8221;</p>\n<p>WordPress co-founder <a href=\"https://mikelittle.org/\" rel=\"noopener\" target=\"_blank\">Mike Little</a> also donated to the campaign, with comments on how important accessibility is to fulfilling the project&#8217;s mission.</p>\n<p>&#8220;As the platform that democratizes publishing, we can&#8217;t allow new features in WordPress to take that away from users with accessibility needs,&#8221; Little said.</p>\n<p>&#8220;Accessibility matters to everyone — injured, encumbered, distracted, disabled, everyone,&#8221; WordPress consultant <a href=\"http://adrianroselli.com\" rel=\"noopener\" target=\"_blank\">Adrian Roselli</a> said. Accessibility in WordPress matters to my clients because some of their people require it in order to use the tool and therefore stay gainfully employed.&#8221;</p>\n<p>The audit proposed months ago has evolved to become a community effort funded by passionate supporters working in various capacities throughout the WordPress ecosystem. If WPCampus is successful in funding its campaign, this particular approach has the benefit of making it a more cooperative effort with more people invested in the process than if it were funded by a single company. WPCampus aims to release the audit report to the community by January 17, 2019 but the dates will depend on the arrangement with the vendor. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 29 Nov 2018 22:03:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"WPTavern: Drupal 8.7 to Introduce Layout Builder, Contributors Face Accessibility Challenges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85572\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"https://wptavern.com/drupal-8-7-to-introduce-layout-builder-contributors-face-accessibility-challenges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6649:\"<p>WordPress 5.0 will soon replace the editor with the new Gutenberg editor as part of a multi-phase project to improve the experience of authoring rich content. Phase 2 will shift focus to tackle site customization, bringing more complex layout and page builder capabilities to Gutenberg.</p>\n<p>As this phase kicks off soon, it&#8217;s valuable to see what other platforms are doing on this front. Drupal has traditionally appealed to a more technical audience, and probably wouldn&#8217;t count Squarespace, Wix, and Tumblr among their competitors, but the project is getting more friendly towards site builders and content editors. Drupal has brought improvements to its usability, media, and layout experiences over the past few years in support of users who have demanded a more modern, simplified admin UI. The project is currently testing a visual design tool for building layouts.</p>\n<p>Two weeks ago, Drupal founder and project lead Dries Buytaert <a href=\"https://dri.es/why-drupal-layout-builder-is-so-unique-and-powerful\" rel=\"noopener noreferrer\" target=\"_blank\">previewed the new Layout Builder</a>, an experimental feature that is stabilizing and expected to land in Drupal 8.7 in May 2019. Layout Builder offers layouts for templated content, customizations to templated layouts, and custom pages. These uses are especially important when building sites with large amounts of content that occasionally require template overrides and one-off landing pages.</p>\n<p>Buytaert described how Layout Builder approaches the creation of one-off dynamic pages, which he said is similar to the capabilities found in services such as Squarespace and projects like Gutenberg for WordPress and Drupal: </p>\n<blockquote><p>A content author can start with a blank page, design a layout, and start adding blocks. These blocks can contain videos, maps, text, a hero image, or custom-built widgets (e.g. a Drupal View showing a list of the ten most popular gift baskets). Blocks can expose configuration options to the content author. For instance, a hero block with an image and text may offer a setting to align the text left, right, or center. These settings can be configured directly from a sidebar.</p></blockquote>\n<p>Buytaert&#8217;s demo video shows the Layout Builder in action. Its capabilities are similar to many of WordPress&#8217; third-party page builders, such as <a href=\"https://elementor.com/theme-builder/\" rel=\"noopener noreferrer\" target=\"_blank\">Elementor</a> and <a href=\"https://www.wpbeaverbuilder.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Beaver Builder</a>.</p>\n<p></p>\n<h3>Layout Builder Poses Accessibility Challenges</h3>\n<p>Layout Builder is anchored on one of Drupal&#8217;s stronger features &#8211; the ability to create structured content, but it faces some of the same accessibility challenges that WordPress&#8217; Gutenberg editor has encountered. </p>\n<p>In his post introducing Layout Builder, Buytaert made some pointed remarks about Drupal&#8217;s commitment to accessibility:</p>\n<blockquote><p>Accessibility is one of Drupal&#8217;s core tenets, and building software that everyone can use is part of our core values and principles. A key part of bringing Layout Builder functionality to a &#8220;stable&#8221; state for production use will be ensuring that it passes our accessibility gate (Level AA conformance with WCAG and ATAG). This holds for both the authoring tool itself, as well as the markup that it generates. We take our commitment to accessibility seriously.</p></blockquote>\n<p>Some contributors are not as optimistic about Drupal being able to fulfill these bold claims in time to ship the feature in 8.7.0. Andrew Macpherson, one of the accessibility topic maintainers for Drupal 8 core, has <a href=\"https://www.drupal.org/project/drupal/issues/3007978#comment-12853731\" rel=\"noopener\" target=\"_blank\">proposed Layout Builder offer an alternative UI</a> that users can access without the visual preview UI.</p>\n<p>&#8220;Dries&#8217; blog post about layout builder yesterday says we&#8217;re on track to mark this as stable for D8.7.0,&#8221; Macpherson said. &#8220;I&#8217;m not at all optimistic about that, because as yet there is no feasible plan for how it can be made accessible.</p>\n<p>&#8220;A minimum viable product for Layout Builder accessibility would be at least one method which works, for each user task, for each input/output method. I don&#8217;t think we can say we have found a feasible approach. We&#8217;re in deeply experimental territory here &#8211; there isn&#8217;t a well-established, reliable pattern we can just copy to make the current layout builder accessible. Essentially, we&#8217;re making stuff up in a hurry, for a novel UI, with limited opportunity for design validation. There&#8217;s no guarantee that users are going to understand it, or find it easy to use. That&#8217;s why I&#8217;m not optimistic about it getting past the accessibility gate in time for D8.7.0.&#8221;</p>\n<p>Macpherson said that WCAG strongly advises against providing alternate versions but allows for them in instances where the main version cannot be made accessible.</p>\n<p>&#8220;I think we are effectively in this situation now, although we are still exploring ideas,&#8221; he said. </p>\n<p>Macpherson also recommended they continue striving to make the drag-and-drop, visual-preview layout builder UI accessible at the same time. He referenced emerging <a href=\"https://inclusivedesignprinciples.org/#offer-choice\" rel=\"noopener\" target=\"_blank\">principles of Inclusive Design</a> for application developers, which recommend &#8220;offering choice,&#8221; giving users different ways of completing tasks, especially those that may be complex or non-standard.</p>\n<p>&#8220;Eventually, I&#8217;d like to see BOTH layout builder UIs being accessible, and offer genuinely useful choices for everyone,&#8221; Macpherson said. &#8220;But let&#8217;s take the time to do it well, instead of hastily bolting on fixes for one type of interaction method at a time, in a rush to ship a single layout builder UI. &#8221;</p>\n<p>Macpherson&#8217;s proposal is still under consideration, but it provides an interesting perspective on similar challenges WordPress contributors are facing with Gutenberg. Modernizing UIs to make the site building experience more accessible for those who don&#8217;t know how to code has to be balanced with considerations for those who may not be able see very well or use a mouse. Drupal contributors are exploring providing an alternative accessible UI as a solution to empower more users to take advantage of the new Layout Builder.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 29 Nov 2018 04:31:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:106:\"WPTavern: WPWeekly Episode 339 – Interview With Pippin Williamson, Founder of Sandhills Development, LLC\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=86062&preview=true&preview_id=86062\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"https://wptavern.com/wpweekly-episode-339-interview-with-pippin-williamson-founder-of-sandhills-development-llc\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1455:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I are joined by <a href=\"http://pippin.com/\">Pippin Williamson</a>, founder of <a href=\"http://sandhillsdev.com/\">Sandhills Development</a>, LLC. Pippin describes what he&#8217;s learned going through the process of opening a brick and mortar business.</p>\n<p>He also describes the emotional process of firing employees, making business decisions as a team, and how he wants to create a life-long company where employees stick around for decades.</p>\n<p>Near the end of the episode, Pippin expresses his opinions on Gutenberg the product and Gutenberg the process. You might be surprised by what he has to say.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://pippinsplugins.com/2017-in-review/\">2017 in review</a></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, December 5th 3:00 P.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #339:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 28 Nov 2018 19:54:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"WPTavern: SyntaxHighlighter Evolved Plugin Adds Gutenberg Support\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85968\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://wptavern.com/syntaxhighlighter-evolved-plugin-adds-gutenberg-support\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4743:\"<p>WordPress 5.0 will ship with a code block in the new editor but it doesn&#8217;t include syntax highlighting. The code is currently wrapped in pre tags. During the earlier days of Gutenberg&#8217;s development, the HTML block had syntax highlighting but the team was not satisfied with its implementation and decided to pull it until they could <a href=\"https://github.com/WordPress/gutenberg/issues/10423\" rel=\"noopener\" target=\"_blank\">provide more consistent behavior across blocks</a>. </p>\n<p>For now, users will have to depend on a plugin to get syntax highlighting. <a href=\"https://wordpress.org/plugins/syntaxhighlighter/\" rel=\"noopener\" target=\"_blank\">SyntaxHighlighter Evolved</a> is one of the first plugins of its kind to add Gutenberg support via its own block. </p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-28-at-10.08.36-AM.png?ssl=1\"><img /></a></p>\n<p>The plugin currently adds syntax highlighting to source code on the frontend only. Nevertheless, it&#8217;s a great use case for Gutenberg, as the plugin previously required you to remember how to structure the shortcode in a particular way in order to use it. </p>\n<p>Ian Dunn <a href=\"https://github.com/Viper007Bond/syntaxhighlighter/pull/78\" rel=\"noopener\" target=\"_blank\">contributed the Gutenberg support</a> for SyntaxHighlighter Evolved. In the PR for this feature, Dunn said he wanted to give existing users a way to continue using the plugin after WordPress 5.0 is released:</p>\n<blockquote><p>\nThe syntax highlighting only works on the front end, due to the nature of SyntaxHighlighter. Details are documented in the edit() function&#8217;s docblock.</p>\n<p>Because of that, this isn&#8217;t the ideal syntax highlighting block[1], but this provides a way for existing users to continue using the plugin without having to migrate old posts to a different plugin.</p>\n<p>Another limitation is that this PR only supports the language attribute of the shortcode, because I ran out of time/energy. This lays the groundwork, though, so the rest of them can easily be added in a future iteration.</p></blockquote>\n<p>SyntaxHighlighter Evolved is active on more than 40,000 installations and is also used on WordPress.com, so this update to the plugin should help those who rely on it to be able to use the new Gutenberg editor without having to switch back to the old editor when they need to add code to their content.</p>\n<p>There is still some debate about the best way to provide syntax highlighting in Gutenberg. Another implementation called <a href=\"https://github.com/mkaz/code-syntax-block\" rel=\"noopener\" target=\"_blank\">Code Syntax Block</a> by Marcus Kazmierczak, extends Gutenberg&#8217;s existing code block to offer syntax highlighting, instead of creating a new block for it. It also uses <a href=\"http://prismjs.com/\" rel=\"noopener\" target=\"_blank\">PrismJS syntax highlighter</a>.</p>\n<p><a href=\"https://github.com/cedaro/shiny-code\" rel=\"noopener\" target=\"_blank\">Shiny Code</a> is another approach that adds a new block for code and provides a preview inside the Gutenberg editor. </p>\n<p><a href=\"https://cloudup.com/cAjq1AKskL8\"><img src=\"https://i1.wp.com/cldup.com/2MLWW0oXx3.gif?resize=627%2C308&ssl=1\" alt=\"Shiny code\" width=\"627\" height=\"308\" /></a></p>\n<p>In the official plugin directory, the <a href=\"https://wordpress.org/plugins/enlighter/\" rel=\"noopener\" target=\"_blank\">Enlighter</a> plugin, which has 10,000 active installs, offers experimental support for Gutenberg that is being <a href=\"https://github.com/EnlighterJS/Plugin.Gutenberg\" rel=\"noopener\" target=\"_blank\">actively developed on GitHub</a>. <a href=\"https://wordpress.org/plugins/kebo-code/\" rel=\"noopener\" target=\"_blank\">Kebo Code</a>, a relatively new plugin with fewer than 10 installs, was created to offer syntax highlighting for Gutenberg and currently supports 121 languages and two themes. Users will have to switch to the frontend to see the code rendered with the theme selected. </p>\n<p>SyntaxHighlighter Evolved does not yet provide a way for highlighting existing code blocks or transforming a core code block to use the plugin&#8217;s syntax highlighting. Converting all existing code blocks might take some time for those who have been using it extensively. Alex Mills, the plugin&#8217;s author, said he is considering all of these issues and welcomes patches on the <a href=\"https://github.com/Viper007Bond/syntaxhighlighter\" rel=\"noopener\" target=\"_blank\">GitHub repository for the plugin</a>. Plugin authors may change their approaches over time, depending on where Gutenberg goes in the future, so users will want to evaluate available plugins periodically to see which ones suit their needs.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 28 Nov 2018 17:10:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"WPTavern: WordCamp US 2018 Livestream Tickets Now Available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85848\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"https://wptavern.com/wordcamp-us-2018-livestream-tickets-now-available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1360:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2016/11/nashville.jpg?ssl=1\"><img /></a>photo credit: Viv Lynch <a href=\"http://www.flickr.com/photos/68894626@N00/30070498810\">Westward</a> &#8211; <a href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\">(license)</a></p>\n<p>The countdown has started for <a href=\"https://2018.us.wordcamp.org\" rel=\"noopener\" target=\"_blank\">WordCamp US 2018</a> in Nashville. The event is just 10 days away. If you cannot attend, watching via the livestream is the next best option. Anyone can join the livestream for free, but viewers will need to <a href=\"https://2018.us.wordcamp.org/tickets/\" rel=\"noopener\" target=\"_blank\">sign up for a ticket</a> on the event website. </p>\n<p>This year&#8217;s <a href=\"https://2018.us.wordcamp.org/schedule/\" rel=\"noopener\" target=\"_blank\">schedule</a> includes sessions in two tracks: Banjo and Guitar. Matt Mullenweg&#8217;s annual <a href=\"https://2018.us.wordcamp.org/2018/11/27/state-of-the-word-2018/\" rel=\"noopener\" target=\"_blank\">State of the Word</a> address is scheduled for Saturday, December 8, at 4:00 p.m. CST. Livestream ticket holders can tune in to any of the sessions and may also want to participate in the conversations on Twitter using the <a href=\"https://twitter.com/hashtag/WCUS?src=hash\" rel=\"noopener\" target=\"_blank\">#WCUS hashtag</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 27 Nov 2018 22:09:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"BuddyPress: BuddyPress 4.0.0 “Pequod”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://buddypress.org/?p=282222\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://buddypress.org/2018/11/buddypress-4-0-0-pequod/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5882:\"<p>BuddyPress 4.0.0 &#8220;Pequod&#8221; is now available!</p>\n<h3>A focus on data privacy and control</h3>\n<p>BuddyPress boasts a proud history of letting community members and managers control their data, independent of third-party, commercial entities. In this spirit, as well as the spirit of recent regulations like the EU&#8217;s General Data Protection Regulation (GDPR), Expanding on some of the tools introduced by WordPress in version 4.9.8, BuddyPress 4.0 introduces a suite of tools allowing users and site admins to manage member data and privacy.</p>\n<div id=\"attachment_282223\" class=\"wp-caption alignnone\"><a href=\"https://buddypress.org/wp-content/uploads/1/2018/11/data-export.png\"><img class=\"size-full wp-image-282223\" src=\"https://buddypress.org/wp-content/uploads/1/2018/11/data-export.png\" alt=\"Screenshot of \" /></a><p class=\"wp-caption-text\">Giving your users greater control over their data</p></div>\n<p>The new &#8220;Export Data&#8221; Settings panel lets users request an export of all BuddyPress data they&#8217;ve created. BuddyPress integrates seamlessly with the data export functionality introduced in WordPress 4.9.8, and BP data is included in exports that are initiated either from the Export Data panel or via WP&#8217;s Tools &gt; Export Personal Data interface.</p>\n<p>BuddyPress 4.0 also integrates with WordPress 4.9.8&#8217;s Privacy Policy tools. When you create or update your Privacy Policy, BP will suggest text that&#8217;s specifically tailored to the kinds of social data generated on a BuddyPress site. And will prompt registering users to agree to the Privacy Policy, if your theme supports it.</p>\n<p>We&#8217;ve also done a complete review of BuddyPress&#8217;s cookie behavior, and dramatically reduced the number of cookies needed to browse a BP-powered site &#8211; especially for logged-out users. We&#8217;re confident that this change will help site owners comply with local privacy regulations.</p>\n<h3>Nouveau and other improvements</h3>\n<p>The BuddyPress team has been hard at work improving the Nouveau template pack introduced in BuddyPress 4.0. We&#8217;ve improved accessibility, extensibility, and responsiveness on mobile devices.</p>\n<p>BuddyPress 4.0 also contains a number of internal improvements that improve compatibility with various version of PHP, fix formatting and content issues when sending emails, and address some backward-compatibility concerns.</p>\n<h3>Mille grazie</h3>\n<p>As usual, this BuddyPress release is only possible thanks to the contributions of the community. Special thanks to the following folks who contributed code and testing to the release: <a href=\"https://profiles.wordpress.org/xknown/\">Alex Concha (xknown)</a>, <a href=\"https://profiles.wordpress.org/ankit-k-gupta/\">Ankit K Gupta (ankit-k-gupta)</a>, <a href=\"https://profiles.wordpress.org/boonebgorges/\">Boone B Gorges (boonebgorges)</a>, <a href=\"https://profiles.wordpress.org/sbrajesh/\">Brajesh Singh (sbrajesh)</a>, <a href=\"https://profiles.wordpress.org/brianbws/\">Brian Cruikshank (brianbws)</a>, <a href=\"https://profiles.wordpress.org/needle/\">Christian Wach (needle)</a>, <a href=\"https://profiles.wordpress.org/cyberwani/\">Dinesh Kesarwani (cyberwani)</a>, <a href=\"https://profiles.wordpress.org/dipesh.kakadipa/\">dipeshkakadiya</a>, <a href=\"https://profiles.wordpress.org/drywallbmb/\">drywallbmb</a>, <a href=\"https://profiles.wordpress.org/dullowl/\">dullowl</a>, <a href=\"https://profiles.wordpress.org/eric01/\">Eric (eric01)</a>, <a href=\"https://profiles.wordpress.org/garrett-eclipse/\">Garrett Hyder (garrett-eclipse)</a>, <a href=\"https://profiles.wordpress.org/harshall/\">Harshal Limaye (harshall)</a>, <a href=\"https://profiles.wordpress.org/hnla/\">Hugo (hnla)</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby/\">John James Jacoby (johnjamesjacoby)</a>, <a href=\"https://profiles.wordpress.org/marcella1981/\">Marcella (marcella1981)</a>, <a href=\"https://profiles.wordpress.org/imath/\">Mathieu Viet (imath)</a>, <a href=\"https://profiles.wordpress.org/mercime/\">mercime</a>, <a href=\"https://profiles.wordpress.org/MorgunovVit/\">MorgunovVit</a>, <a href=\"https://profiles.wordpress.org/n0barcode/\">n0barcode</a>, <a href=\"https://profiles.wordpress.org/pareshradadiya/\">paresh.radadiya (pareshradadiya)</a>, <a href=\"https://profiles.wordpress.org/DJPaul/\">Paul Gibbs (DJPaul)</a>, <a href=\"https://profiles.wordpress.org/pooja1210/\">Pooja N Muchandikar (pooja1210)</a>, <a href=\"https://profiles.wordpress.org/r-a-y/\">r-a-y</a>, <a href=\"https://profiles.wordpress.org/espellcaste/\">Renato Alves (espellcaste)</a>, <a href=\"https://profiles.wordpress.org/RT77/\">RT77</a>, <a href=\"https://profiles.wordpress.org/cyclic/\">Ryan Williams (cyclic)</a>, <a href=\"https://profiles.wordpress.org/elhardoum/\">Samuel Elh (elhardoum)</a>, <a href=\"https://profiles.wordpress.org/shubh14/\">shubh14</a>, <a href=\"https://profiles.wordpress.org/spdustin/\">spdustin</a>, <a href=\"https://profiles.wordpress.org/suvikki/\">suvikki</a>, <a href=\"https://profiles.wordpress.org/netweb/\">Stephen Edgar (netweb)</a>, <a href=\"https://profiles.wordpress.org/thejimmy/\">thejimmy</a>, <a href=\"https://profiles.wordpress.org/vapvarun/\">vapvarun</a>, <a href=\"https://profiles.wordpress.org/wbcomdesigns/\">Wbcom Designs (wbcomdesigns)</a>, <a href=\"https://profiles.wordpress.org/yahil/\">Yahil Madakiya (yahil)</a></p>\n<p>This version of BuddyPress is code-named &#8220;Pequod&#8221; after the famous <a href=\"https://pequodspizza.com/\">Pequod&#8217;s Pizza</a> in Chicago, where the crust really is caramelized, and the dish really is deep. Buon gusto!</p>\n<h3>Keep on truckin&#8217;</h3>\n<p>Questions or comments about the release? Visit the <a href=\"https://buddypress.org/support/\">buddypress.org support forums</a>, or open a ticket on <a href=\"https://buddypress.trac.wordpress.org\">our bugtracker</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 27 Nov 2018 19:57:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Boone Gorges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"WPTavern: Jetpack 6.8 Adds Gutenberg Blocks for Payment Buttons, Forms, Maps, and Markdown\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85576\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"https://wptavern.com/jetpack-6-8-adds-gutenberg-blocks-for-payment-buttons-forms-maps-and-markdown\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3613:\"<p><a href=\"https://jetpack.com/2018/11/27/jetpack-6-8-building-jetpack-for-the-new-wordpress-editor/\" rel=\"noopener\" target=\"_blank\">Jetpack 6.8</a> was released today, introducing the plugin&#8217;s first set of blocks for Gutenberg. The necessary infrastructure was added in version 6.6 and all existing features that touch the editor are in the process of being ported over to blocks. This release includes blocks for payment buttons, forms, maps, and markdown.</p>\n<p>The Contact Form module is one of the plugin&#8217;s most popular features and one that users often enable on new websites. This block removes a major barrier to implementing a form on WordPress sites &#8211; new users will have no need to try to understand the concept of shortcodes in order to collect feedback on their sites. Creating a new form essentially works like adding blocks inside of blocks:</p>\n<p><a href=\"https://cloudup.com/cNVMNF2ZGd8\"><img src=\"https://i2.wp.com/cldup.com/LZmv0Xj_Iq.gif?resize=627%2C568&ssl=1\" alt=\"Form\" width=\"627\" height=\"568\" /></a></p>\n<p>The <a href=\"https://jetpack.com/support/jetpack-blocks/simple-payments-block/\" rel=\"noopener\" target=\"_blank\">Simple Payments button block</a> is slightly different in that it already has the form fields set up so the user can fill them out for whatever they are selling. This block is available for users on the Jetpack Premium or Professional plan.</p>\n<p>The <a href=\"https://jetpack.com/support/jetpack-blocks/map-block/\" rel=\"noopener\" target=\"_blank\">map block</a> makes it easy for users to embed an interactive map within the content of posts or pages. After <a href=\"https://www.mapbox.com/signup/\" rel=\"noopener\" target=\"_blank\">signing up for a free Mapbox Access Token</a>, users can select a location directly inside the new editor and preview it live with different map theme options and a color-picker for the marker.</p>\n<p><a href=\"https://cloudup.com/cUFrJDi-tqy\"><img src=\"https://i2.wp.com/cldup.com/NL4okuVN0s.gif?resize=627%2C338&ssl=1\" alt=\"Map\" width=\"627\" height=\"338\" /></a></p>\n<p>Some of those who have tested Gutenberg may not be a fan of its current writing interface, but after you see some of these blocks in action for things like maps and payment buttons, it&#8217;s clear that this is a superior interface for these content types. Modernizing the interface for content that previously relied on shortcodes is where Gutenberg truly excels right now.</p>\n<p>Development on the Gutenberg plugin has been so active that it makes sense that the Jetpack team waited until WordPress 5.0 RC to release any blocks. Jetpack users can take advantage of them now if they have Gutenberg installed, or wait until 5.0 is officially released. The Jetpack team is also working on a number of other blocks for existing features. You can <a href=\"https://github.com/Automattic/jetpack/labels/Gutenberg\" rel=\"noopener\" target=\"_blank\">follow the progress</a> on upcoming blocks at Jetpack&#8217;s GitHub repository and log issues with blocks that have already been released.</p>\n<p>Jetpack 6.8 also restores the Publicize module to the pre-publish sidebar, so users can continue automatically sharing posts after WordPress 5.0 is released. This version ensures compatibility with Jetpack&#8217;s widgets for those using the Twenty Nineteen theme. Check out the <a href=\"https://wp.me/p1moTy-cee\" rel=\"noopener\" target=\"_blank\">release post</a> to see more blocks in action and the <a href=\"https://wordpress.org/plugins/jetpack/#developers\" rel=\"noopener\" target=\"_blank\">changelog</a> for a full list of all the enhancements and bug fixes.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 27 Nov 2018 17:52:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"WPTavern: WordPress 5.0 RC 1 Released, Gutenberg Passes 1 Million Installations\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85923\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"https://wptavern.com/wordpress-5-0-rc-1-released-gutenberg-passes-1-million-installations\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5988:\"<p><a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\" rel=\"noopener\" target=\"_blank\">WordPress 5.0 RC 1</a> was released over the weekend after a string of five betas that began in late October. According to the <a href=\"https://gutenstats.blog/\" rel=\"noopener\" target=\"_blank\">Gutenberg stats page</a>, more than 1.1 million sites have the Gutenberg plugin installed and users have written more than 980,000 posts using the new editor. These numbers are conservative estimates, as the numbers only include WordPress.com sites and sites running Jetpack.</p>\n<p>Most of the changes included in the RC were outlined in the <a href=\"https://make.wordpress.org/core/2018/11/20/whats-new-in-gutenberg-20th-november/\" rel=\"noopener\" target=\"_blank\">Gutenberg 4.5</a> release post last week. An update published today shows 12 PRs waiting for review in the 4.6 milestone, 14 open issues in the 5.0.0 milestone, and more than 150 issues open in 5.0.1 and subsequent releases. <a href=\"https://make.wordpress.org/core/tag/5.0+dev-notes/\" rel=\"noopener\" target=\"_blank\">Dev notes for 5.0</a> have been published and tagged on the make.wordpress.org/core blog.</p>\n<p>WordPress 5.0&#8217;s official release date was set for November 27 but after further evaluation the date has been <a href=\"https://make.wordpress.org/core/2018/11/21/5-0-gutenberg-status-update-nov-21/\" rel=\"noopener\" target=\"_blank\">pushed back</a>. Last week WordPress core core committers, contributors, and former release leads made strong, last-minute <a href=\"https://wptavern.com/wordpress-5-0-rc-expected-on-u-s-thanksgiving-holiday-despite-last-minute-pushback-from-contributors\" rel=\"noopener\" target=\"_blank\">appeals</a> to hold off RC and defer the release to January. Development is moving forward desipite the pushback. A new release date has not yet been announced. The current plan is to monitor feedback on the RC and the team will make a decision from there.</p>\n<h3>Mullenweg Responds to Critics on Twitter, Reiterates Vision for Gutenberg</h3>\n<p>Over the weekend, Matt Mullenweg responded to critics on Twitter who voiced concerns about his leadership and communication throughout WordPress 5.0&#8217;s development. One particular post titled &#8220;<a href=\"https://cameronjonesweb.com.au/blog/lets-take-a-very-serious-look-at-gutenberg/\" rel=\"noopener\" target=\"_blank\">Let’s Take A Very Serious Look At Gutenberg</a>,&#8221; written by WordPress developer Cameron Jones, sparked conversation. In response to Cliff Seal, who urged Mullenweg to &#8220;re-cast the vision of WordPress in a way that accounts for the apparent urgency of this effort,&#8221; Mullenweg <a href=\"https://twitter.com/photomatt/status/1066397086206304256\" rel=\"noopener\" target=\"_blank\">responded</a>:</p>\n<blockquote><p>\nMany people who try to start publishing with WordPress fail; those who don&#8217;t struggle with shortcodes, embeds, widgets; those who can toggle to code view to do basic tasks in the editor, and for clients set up elaborate meta-field and CPT based schemes to avoid catastrophe.</p>\n<p>Gutenberg aims to solve these problems, improve the WP experience for all its users, and open up independent, open source, beautiful publishing on the web to a class of users that couldn&#8217;t publish with WordPress before.</p>\n<p>It may seem rushed to people unused to this pace of development and improvement in the WordPress world. However this has been a pace sustained for almost two years now, and we still look slow compared to some modern software. Speed of iteration is enabled by the new tech stack.</p>\n<p>It bothers me at a deep, moral level to hold back a user experience that will significantly upgrade the publishing ability and success of tens or hundreds of millions of users. It hasn&#8217;t been ready (for core) yet, so it&#8217;s not released. I hope it will be soon! </p>\n<p>This may all look very quaint in retrospect, when we look back three or five years from now. It&#8217;s a tough transition but the foundation Gutenberg enables will be worth it.</p></blockquote>\n<p>Matt Medeiros, another vocal critic of Mullenweg&#8217;s leadership on WordPress 5.0, <a href=\"https://www.youtube.com/watch?v=W1Rhr9Y54ck\" rel=\"noopener\" target=\"_blank\">recorded a video</a>, expounding on his concerns about transparency and the rushed pace. He summarized the frustrations that inspired him to make the video.</p>\n<p>&#8220;While I agree WordPress needs innovation to reach new users that desperately require freedom over their content, especially within the context of today&#8217;s social networks, I don&#8217;t agree and am also discouraged by Matt not sharing the product vision with the community,&#8221; Medeiros said. &#8220;It&#8217;s polarizing to build software under the guise of openness with a mission to democratize publishing, but not give the same people volunteering to &#8216;Five for the Future&#8217; a voice for the future. </p>\n<p>&#8220;Lack of communication, not Gutenberg or the team developing it, has lead to the current divide and we&#8217;re left asking &#8212; why? WordPress has always had a branding problem and this continues to muddy the lines between open source project and WordPress the &#8216;product.\'&#8221;</p>\n<p>The 5.0 release is heading into the home stretch but Gutenberg has several phases ahead with many more years of development. Mullenweg&#8217;s responses on Twitter over the weekend indicate he is interested in keeping the lines of communication open throughout the process. He said he plans to dedicate more time to responding directly to feedback.</p>\n<p>&#8220;One thing will try: I’m going to open up some listening office hours in the next week so people can talk directly,&#8221; Mullenweg <a href=\"https://twitter.com/photomatt/status/1065981341496471555\" rel=\"noopener\" target=\"_blank\">said</a>. &#8220;I want everyone to be and feel heard, as they have been since the beginning of this process in 2016.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 27 Nov 2018 01:54:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"Dev Blog: WordPress 5.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6257\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://wordpress.org/news/2018/11/wordpress-5-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5355:\"<p>The first release candidate for WordPress 5.0 is now available!</p>\n\n\n\n<p>This is an important milestone, as we near the release of WordPress 5.0.&nbsp;<strong>The WordPress 5.0 release date has shifted from the 27th to give more time for the RC to be fully tested</strong>. A final release date will be announced soon, based on feedback on the RC. This is a big release and needs <em>your</em> help—if you haven’t tried 5.0 yet, now is the time!&nbsp;</p>\n\n\n\n<p>To test WordPress 5.0, you can use the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-RC1.zip\">download the release candidate here</a>&nbsp;(zip).</p>\n\n\n\n<h2>What&#8217;s in WordPress 5.0?</h2>\n\n\n\n<img src=\"https://i1.wp.com/wordpress.org/news/files/2018/11/Gutenberg-3.png?resize=632%2C316&ssl=1\" alt=\"Screenshot of the new block editor interface.\" class=\"wp-image-6271\" />The new block-based post editor.\n\n\n\n<p>WordPress 5.0 introduces the <a href=\"https://wordpress.org/gutenberg/\">new block-based post editor</a>. This is the first step toward an exciting new future with a streamlined editing experience across your site. You’ll have more flexibility with how content is displayed, whether you are building your first site, revamping your blog, or write code for a living.</p>\n\n\n\n<p>The block editor is&nbsp;<a href=\"https://gutenstats.blog/\">used on over a million sites</a>, we think it&#8217;s ready to be used on all WordPress sites. We do understand that some sites might need some extra time, though. If that&#8217;s you, please install the <a href=\"https://wordpress.org/plugins/classic-editor/\">Classic Editor plugin</a>, you&#8217;ll continue to use the classic post editor when you upgrade to WordPress 5.0.</p>\n\n\n\n<p>Twenty Nineteen is WordPress&#8217; new default theme, it&nbsp;features custom styles for the blocks available by default in 5.0.&nbsp;Twenty Nineteen is designed to work for a wide variety of use cases. Whether you’re running a photo blog, launching a new business, or supporting a non-profit, Twenty Nineteen is flexible enough to fit your needs.</p>\n\n\n\n<p>The block editor is a big change, but that&#8217;s not all. We&#8217;ve made some smaller changes as well,&nbsp; including:</p>\n\n\n\n<ul><li>All of the previous default themes, from Twenty Ten through to Twenty Seventeen, have been updated to support the block editor.</li><li>You can improve the accessibility of the content you write, now that <a href=\"https://core.trac.wordpress.org/ticket/30421\">simple ARIA labels</a>&nbsp;can be saved in posts and pages.</li><li>WordPress 5.0 officially supports the upcoming PHP 7.3 release: if you&#8217;re using an older version, we encourage you to <a href=\"https://wordpress.org/support/upgrade-php/\">upgrade PHP</a>&nbsp;on your site.</li><li>Developers can now add translatable strings directly to your JavaScript code, using the new <a href=\"https://make.wordpress.org/core/2018/11/09/new-javascript-i18n-support-in-wordpress/\">JavaScript language packs</a>.</li></ul>\n\n\n\n<p>You can read more about the fixes and changes since  Beta 5 <a href=\"https://make.wordpress.org/core/2018/11/20/whats-new-in-gutenberg-20th-november/\">in the last update post</a>.</p>\n\n\n\n<p>For more details about what’s new in version 5.0, check out the&nbsp;<a href=\"https://wordpress.org/news/2018/10/wordpress-5-0-beta-1/\">Beta 1</a>,&nbsp;<a href=\"https://wordpress.org/news/2018/10/wordpress-5-0-beta-2/\">Beta 2</a>,&nbsp;<a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-3/\">Beta 3</a>, <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-4/\">Beta 4</a> and&nbsp;<a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-5/\">Beta 5</a>&nbsp;blog posts.</p>\n\n\n\n<h2>Plugin and Theme Developers</h2>\n\n\n\n<p>Please test your plugins and themes against WordPress 5.0 and update the&nbsp;<em>Tested up to</em>&nbsp;version in the readme to 5.0. If you find compatibility problems, please be sure to post to the <a href=\"https://wordpress.org/support/forum/alphabeta/\">support forums</a> so we can figure those out before the final release. An in-depth field guide to developer-focused changes is coming soon on the&nbsp;<a href=\"https://make.wordpress.org/core/\">core development blog</a>. In the meantime, you can review the&nbsp;<a href=\"https://make.wordpress.org/core/tag/5.0+dev-notes/\">developer notes for 5.0</a>.</p>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<p class=\"has-background has-medium-font-size\"><em>Ruedan los bloques<br />Contando vivos cuentos<br />Que se despiertan</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 23 Nov 2018 09:46:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matias Ventura\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:112:\"WPTavern: WordPress 5.0 RC Expected on U.S. Thanksgiving Holiday, despite Last-Minute Pushback from Contributors\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85784\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"https://wptavern.com/wordpress-5-0-rc-expected-on-u-s-thanksgiving-holiday-despite-last-minute-pushback-from-contributors\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:9944:\"<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2017/10/ship-bottle.jpg?ssl=1\"><img /></a>photo credit: KaylaKandzorra <a href=\"http://www.flickr.com/photos/48077358@N02/4952091078\">i miss you grampa.</a> &#8211; <a href=\"https://creativecommons.org/licenses/by/2.0/\">(license)</a></p>\n<p>WordPress core committers, core contributors, and former release leads made strong, last-minute <a href=\"https://make.wordpress.org/core/2018/11/19/5-0-gutenberg-status-update-nov-19/\" rel=\"noopener noreferrer\" target=\"_blank\">appeals</a> on Monday for the 5.0 release to be deferred to January. RC was expected Monday but those urging its delay cited the large number of open issues on the milestone and the fact that many confirmed bugs are being aggressively punted to followup releases.  </p>\n<p>&#8220;I do not see how we can seriously ship a release candidate today,&#8221; Joe McGill said. &#8220;In doing so, we are either saying we’re ok with shipping a major version of WordPress with this many known issues, or that the term &#8216;release candidate&#8217; does not actually have meaning. I would suggest that we revise the schedule to push back RC for at least 4 weeks so we have a reasonable deadline and, in the mean time, continue releasing betas.&#8221;</p>\n<p>Nearly every contributor involved in the discussion was enthusiastic about Gutenberg but urged release lead Matt Mullenweg to allow for four weeks of RC and code freeze to give the community to prepare. </p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">&#8211; Building site with Gutenberg<br />&#8211; Find bug, go to GH to file an issue <br />&#8211; Find the ticket already exists.<br />&#8211; Bug has already been punted to \"5.0.x Follow Ups\"<br />&#8211; Find all the other *known* bugs planned for 5.0 launch</p>\n<p>:(<a href=\"https://t.co/EiXR8tgHnz\">https://t.co/EiXR8tgHnz</a></p>\n<p>&mdash; Bill Erickson (@BillErickson) <a href=\"https://twitter.com/BillErickson/status/1064619368045252608?ref_src=twsrc%5Etfw\">November 19, 2018</a></p></blockquote>\n<p></p>\n<p>Contributors said they don&#8217;t understand the rush to get 5.0. Several noted that Gutenberg seems to be measured by a different rod of success than previous releases where headline features were held to a different standard in regards to shipping known bugs. </p>\n<p>&#8220;We’re fast approaching a million (Jetpack tracked) posts made through the editor, with the non-tracked number probably a multiple of that,&#8221; Mullenweg said in response to contributors&#8217; concerns. &#8220;There’s been an explosion of plugins building on top of Gutenberg and some things like the work ACF and Block Lab have done that seem really transformational for WordPress. For those whom the editor is not a good fit they can opt in at any point, including post-5.0, to Classic and continue using WP exactly as they had before until at least 2022 and likely beyond.&#8221; </p>\n<p>Mullenweg identified a few questions he sees as &#8220;good measures of success for Gutenberg:&#8221;</p>\n<ul>\n<li>Are people, when given the choice, choosing to use it over the old editor?</li>\n<li>Can they create things they weren’t able to create before?</li>\n<li>Are new-to-WP users more successful (active, happy with what they create) than pre-Gutenberg?</li>\n<li>Are interesting things being built on top of it?</li>\n</ul>\n<p>Interesting plugins are being built on top of Gutenberg but they are breaking with every release of the plugin. Gutenberg 4.5 was released yesterday, matching the first 5.0 RC feature set. It includes a large number of changes and bug fixes that have gone relatively untested by the community at large. Most notably, 4.5 introduced a regression that caused a <a href=\"https://github.com/WordPress/gutenberg/issues/12148\" rel=\"noopener noreferrer\" target=\"_blank\">white screen of death when trying to load custom post types</a> in the classic editor, forcing a 4.5.1 release earlier in the day. Every release introduces changes that cause plugins to break, requiring immediate updates from plugin developers.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Our new <a href=\"https://twitter.com/hashtag/gutenberg?src=hash&ref_src=twsrc%5Etfw\">#gutenberg</a> development cycle<br />1) New version of GB is released<br />2) We cross our fingers<br />3) Find out GB breaks stuff<br />4) Fix GB issues<br />5) Issue release<br />6) New version of GB released<br />repeat process <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f613.png\" alt=\"😓\" class=\"wp-smiley\" /></p>\n<p>&mdash; pootlepress (@pootlepress) <a href=\"https://twitter.com/pootlepress/status/1065146009964212225?ref_src=twsrc%5Etfw\">November 21, 2018</a></p></blockquote>\n<p></p>\n<p>Gutenberg technical lead Matias Ventura posted an <a href=\"https://make.wordpress.org/core/2018/11/21/5-0-gutenberg-status-update-nov-21/\" rel=\"noopener noreferrer\" target=\"_blank\">update</a> today, confirming that WordPress 5.0 will miss the planned November 27 release date but did not offer a secondary date.</p>\n<p>&#8220;The date for 5.0 release is under consideration, given it’s not plausible for it to be the on 27th,&#8221; Ventura said. </p>\n<h3>WordPress 5.0 Will Ship &#8220;When It&#8217;s Ready,&#8221; Contributors are Focusing on Getting Release Candidate out ASAP</h3>\n<p>When the second set of November dates for release were missed, many assumed WordPress 5.0 would fall back to the secondary dates in January, but that has not yet been confirmed. The previous <a href=\"https://make.wordpress.org/core/2018/10/03/proposed-wordpress-5-0-scope-and-schedule/\" rel=\"noopener noreferrer\" target=\"_blank\">scope and schedule Gary Pendergast outlined</a> said the November dates could slip by up to eight days if necessary and that if additional time was required, they would aim for the January dates:</p>\n<p>Secondary RC 1: January 8, 2019</p>\n<p>Secondary Release: January 22, 2019 </p>\n<p>During the regularly scheduled core developers&#8217; chat today, the discussion regarding WordPress 5.0&#8217;s release date became heated, as contributors continued to push for a January release. Pendergast suggested that December might have a viable date, to which Yoast CEO Joost de Valk responded, &#8220;I’m going to raise hell if we do December.&#8221;</p>\n<p>WordPress plugin developers and agencies are trying to plan for upcoming holidays and want to have staff available when the release lands. Many of those who attended the meeting were hoping to receive confirmation on the release being pushed back to January.</p>\n<p>&#8220;Please also consider the plugin shops that are rearranging their priorities to have blocks ready for 5.0, only to have had to fix them several times in the last few weeks,&#8221; Kevin Hoffman said. &#8220;The success of 5.0 depends just as much on third-party support as it does core.&#8221; </p>\n<p>&#8220;There&#8217;s agreement on that from all sides, that the amount of code churn and missed earlier deadlines means that the 27th is untenable,&#8221; Mullenweg said. &#8220;RC is still possible soon, but please don&#8217;t assume that implies a final release date until we see how that goes and pick one. I hope that it shows that we are willing to change decisions based on new information, it&#8217;s not about being &#8216;right&#8217; or sticking to previous plans blindly.&#8221;</p>\n<p>This statement indicates Mullenweg may be considering dates that were not included in the original schedule, as he later said,&#8221;If y&#8217;all can take the data without freaking out about what it means for the release date, there have been 8 major releases in December, it&#8217;s actually been 34% of our last 23 major releases.&#8221;</p>\n<p>Several contributors agreed that getting an RC out ASAP would finally force a longer code freeze for Gutenberg&#8217;s UI, API, documentation, and features. This would give the community more time to prepare. </p>\n<p>&#8220;As part of the development team for almost two years now, I’d love for us to draw the RC line soon for the sake of everyone’s fatigue,&#8221; Matias Ventura said. &#8220;And think it’s ready to be drawn. I am concerned with letting us do &#8216;one more little thing&#8217; and pushing the stability line further down, in an almost endless process.&#8221; </p>\n<p>Contributors are now wrapping up the last few tickets and the plan is to get the release candidate out tomorrow during the U.S. Thanksgiving holiday. Given WordPress&#8217; global contributor base, releasing on the holiday shouldn&#8217;t be an issue. The team is also still investigating the possibility of bundling the Classic Editor plugin with updates for existing WordPress sites.</p>\n<p>&#8220;Our focus right now is on a great RC,&#8221; Mullenweg said. Throughout Gutenberg&#8217;s development Mullenweg has said WordPress 5.0 would ship &#8220;when it&#8217;s ready.&#8221; No release date will be announced until the team has had time to evaluate the release candidate.</p>\n<p>&#8220;It is true that the primary thing is whether it&#8217;s ready, and it&#8217;s not currently ready,&#8221; Mullenweg said.</p>\n<p>In 1928, John A. Shedd published a little book called “Salt from My Attic.&#8221; It included a saying that U.S. Navy Rear Admiral Grace Hopper said was influential in her life: &#8220;A ship in harbor is safe, but that is not what ships are built for.&#8221; </p>\n<p>Shipping a major overhaul of WordPress&#8217; editor has brought a fair share of uncertainty and frustration to contributors and the community that depends on the software. After mission-critical issues have been resolved, it seems to become a cycle of fixing and breaking things that could continue indefinitely. Although the holiday timing isn&#8217;t ideal, if Gutenberg stalls much longer it&#8217;s going to be burning daylight. At some point the ship just needs to push away from the port and see how it sails.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 22 Nov 2018 03:17:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"WPTavern: ExpressionEngine Goes Open Source after 16 Years\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85816\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wptavern.com/expressionengine-goes-open-source-after-16-years\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6180:\"<p>In a post titled &#8220;<a href=\"https://expressionengine.com/blog/open-source-has-won\" rel=\"noopener noreferrer\" target=\"_blank\">Open Source Has Won</a>,&#8221; EllisLab founder Rick Ellis explained why ExpressionEngine is <a href=\"https://expressionengine.com/blog/expressionengine-is-now-free\" rel=\"noopener noreferrer\" target=\"_blank\">going open source</a> after 16 years. The content management system is an evolution of the pMachine blogging software first released in early 2002. EllisLab previously required a license fee to use the full version of ExpressionEngine, which is built on object-oriented PHP and uses MySQL for storage.</p>\n<p>&#8220;Although open source was a viable licensing model when we launched our first CMS back in 2002, it was not apparent then just how dominant open source would become on the web,&#8221; Ellis said. &#8220;It wasn’t until Eric Raymond wrote The Cathedral &#038; The Bazaar that open source would even begin to enter the general public’s consciousness. Since then we’ve watched the open source market grow rapidly and continuously.</p>\n<p>&#8220;Today, over 90% of the CMS market is open source. In fact, it’s nearly the de-facto license model for all-things web. Stunningly, the market is expected to triple in revenue within the next five to ten years, and it’s estimated that over 70% of businesses worldwide rely on open-source software. To say that the internet is open source would not be an exaggeration. It’s that dominant.&#8221;</p>\n<p>Ellis said he had wanted to migrate to an open source license for a long time but had not yet found &#8220;the right strategic and financial partner to enable the full vision of what we hope to achieve.&#8221; The first part of EllisLab&#8217;s business plan is to build a successful services model and then branch out from there.</p>\n<p>Prior to licensing ExpressionEngine under the <a href=\"https://expressionengine.com/license\" rel=\"noopener noreferrer\" target=\"_blank\">Apache License, Version 2.0</a>, EllisLab&#8217;s <a href=\"https://web.archive.org/web/20180627183126/https://expressionengine.com/license\" rel=\"noopener noreferrer\" target=\"_blank\">commercial license</a> imposed severe restrictions on what users could do with the software. Users were not permitted to do any of the following:</p>\n<ul>\n<li>Use the Core License (free) for any client or contract work.</li>\n<li>Use the Software as the basis of a hosted blogging service, or to provide hosting services to others.</li>\n<li>Reproduce, distribute, or transfer the Software, or portions thereof, to any third party.</li>\n<li>Modify, tamper with, bypass, or in any way impede license registration routines in the Software.</li>\n<li>Sell, rent, lease, assign, or sublet the Software or portions thereof, including sites in your multi-site license.</li>\n<li>Grant rights to any other person.</li>\n<li>Use the Software in violation of any U.S. or international law or regulation.</li>\n</ul>\n<p>Additional stipulations encouraged users not to share code by keeping their repositories private, and to make sure they were paying for commercial licenses if they were being paid for their work. </p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-20-at-1.35.18-PM.png?ssl=1\"><img /></a></p>\n<p>There was simply no way ExpressionEngine could capture any significant amount of market share with this kind of restrictive licensing and its usage has steadily declined over the years. It is currently used by <a href=\"https://w3techs.com/technologies/details/cm-expressionengine/all/all\" rel=\"noopener noreferrer\" target=\"_blank\">0.3% of all the websites</a> whose content management system w3techs can detect. By this or any other measure of market share, ExpressionEngine stands as a sobering monument to the importance of giving a project a license that empowers its community to continue adding wood to the fire.</p>\n<p>&#8220;The community is mostly gone at this point and I don&#8217;t even think its related to them charging for the software but they just stopped responding people and helping them in their forums,&#8221; reddit user @netzvolk <a href=\"https://www.reddit.com/r/PHP/comments/9ylq4i/expressionengine_is_now_open_source/ea2g130/\" rel=\"noopener noreferrer\" target=\"_blank\">commented</a> on the news.</p>\n<p>&#8220;I have paid EE multiple times in the past but considered NOT paying anymore because third party developers are gone, the community members are gone, the tutorials and books are gone&#8230;.EE 2 was the best version so far. Moving to yearly releases also caused more harm than good in terms of building a stable ecosystem around the product.&#8221;</p>\n<p>ExpressionEngine&#8217;s new open source licensing is a major win for its remaining users. How much further down the road would the software be if the decision was made years ago? There&#8217;s no way to know, but moving forward users will have more input and influence over the future of the software. </p>\n<p>&#8220;I suspect open sourcing EE is an approach to get that community and developers back,&#8221; @netzvolk <a href=\"https://www.reddit.com/r/PHP/comments/9ylq4i/expressionengine_is_now_open_source/ea2n7ce/\" rel=\"noopener noreferrer\" target=\"_blank\">said</a>. &#8220;EllisLab can still make money with consulting, support and add-ons.</p>\n<p>&#8220;But all those suffer if nobody is using the product anymore. This is more about expanding reach to stay afloat than anything else because some of their past bad decisions are what created alternatives like <a href=\"https://craftcms.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Craft</a>. EllisLab turned an amazing product into a forgotten one in just a few years. I hope this means some change, and maybe, maybe one day the old developers and hard core EE community members come back.&#8221;</p>\n<p>Users can only speculate on why EllisLab is making this move after 16 years of keeping its software locked down under restrictive licensing, but Ellis makes it clear in his post that the market decided long ago.</p>\n<p>&#8220;Open source has won,&#8221; Ellis said. &#8220;It’s not even a contest anymore.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 20 Nov 2018 21:21:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"WPTavern: Figma Partners with WordPress to Improve Design Collaboration\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85769\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"https://wptavern.com/figma-partners-with-wordpress-to-improve-design-collaboration\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3679:\"<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-19-at-8.43.27-PM.png?ssl=1\"><img /></a></p>\n<p><a href=\"https://www.figma.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Figma</a>, an online collaborative interface design tool, has donated an organizational membership to the WordPress project. The browser-based application helps designers and developers collaborate more efficiently and is used by organizations like Microsoft, Slack, and Uber. It provides design tools, prototyping, previews, and real-time feedback, all in the same place, and is often described as the &#8220;Google Docs for designing apps.&#8221;</p>\n<p>Figma aims to match the way designers work today in collaborative roles, with features like shared component libraries, versioning, live device preview, and Sketch import. It was created to offer &#8220;one single source of truth for design files.&#8221;</p>\n<p>&#8220;Where we may have used multiple tools in order to support all the parts of the design process, Figma incorporates many of the core features of other tools all in one product for a more efficient and powerful workflow,&#8221; Alexis Lloyd, Head of Design Innovation at Automattic, said in the <a href=\"https://make.wordpress.org/design/2018/11/19/figma-for-wordpress/\" rel=\"noopener noreferrer\" target=\"_blank\">announcement</a> on the make.wordpress design blog. &#8220;I’m excited about the possibilities for how Figma can make the WordPress design process more collaborative, robust, and efficient.&#8221;</p>\n<p>Figma launched in 2016 but has quickly gained popularity due to its seamless developer handoff exports and cross-platform compatibility. Many teams inside the WordPress community are already big fans of using Figma. 10up has been using the tool as part of the company&#8217;s design process. The <a href=\"https://10up.com/blog/2018/wordpress-wireframes-sketch/\" rel=\"noopener noreferrer\" target=\"_blank\">SketchPress</a> library that 10up created, a collection of WordPress admin interfaces, symbols, and icons, is in the process of being converted into a shared team library for Figma so that WordPress contributors can take advantage of it.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">We\'ve been using Figma at <a href=\"https://twitter.com/10up?ref_src=twsrc%5Etfw\">@10up</a> to improve collaboration across our team &amp; clients. Excited to see <a href=\"https://twitter.com/figmadesign?ref_src=twsrc%5Etfw\">@figmadesign</a> partnering w/ <a href=\"https://twitter.com/WordPress?ref_src=twsrc%5Etfw\">@WordPress</a> to make design more collaborative. Big thanks to <a href=\"https://twitter.com/apollo_ux?ref_src=twsrc%5Etfw\">@apollo_ux</a> for adapting <a href=\"https://twitter.com/hashtag/SketchPress?src=hash&ref_src=twsrc%5Etfw\">#SketchPress</a> to Figma as well! <a href=\"https://t.co/Lq2Poqexjj\">https://t.co/Lq2Poqexjj</a></p>\n<p>&mdash; Chris Wallace (@chriswallace) <a href=\"https://twitter.com/chriswallace/status/1064618129370873858?ref_src=twsrc%5Etfw\">November 19, 2018</a></p></blockquote>\n<p></p>\n<p>If you have held back on getting involved in designing for the WordPress project because of archaic collaboration tools, working with Figma may improve your contribution experience. Designers can get access to the WordPress.org Figma team by signing in with a WordPress.org Slack account using the <a href=\"https://www.figma.com/slack/642003996626140596/invite\" rel=\"noopener noreferrer\" target=\"_blank\">invitation link</a>. New users can upgrade their default &#8220;view&#8221; capabilities and get access to edit files by requesting permission in WordPress&#8217; #design Slack channel. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 20 Nov 2018 02:53:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"WPTavern: New Block Lab Plugin Makes it Easy to Create Custom Gutenberg Blocks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85659\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"https://wptavern.com/new-block-lab-plugin-makes-it-easy-to-create-custom-gutenberg-blocks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5435:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-19-at-10.25.08-AM.png?ssl=1\"><img /></a></p>\n<p><a href=\"https://getblocklab.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Block Lab</a> is a new tool that provides an admin interface and a templating system for creating custom Gutenberg blocks. Rob Stinson, Luke Carbis, and Rheinard Korf, all employees at <a href=\"https://xwp.co/\" rel=\"noopener noreferrer\" target=\"_blank\">XWP</a>, kicked off the project in their own time with the goal of removing the relatively steep barrier to block creation. The plugin is <a href=\"https://wordpress.org/plugins/block-lab/\" rel=\"noopener noreferrer\" target=\"_blank\">now available on WordPress.org</a> and Stinson said their target audience is WordPress developers ranging from junior to experienced.</p>\n<p>The Block Lab admin screen lets users select an icon for the custom block, enter keywords, and choose from a variety of input fields. </p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/11/block-lab-admin.png?ssl=1\"><img /></a></p>\n<p>Rendering the custom blocks in the editor and on the frontend requires simple PHP functions that most WordPress developers are probably already familiar with. Here&#8217;s an example for a testimonial block from the <a href=\"https://github.com/getblocklab/block-lab/wiki/Displaying-custom-blocks\" rel=\"noopener noreferrer\" target=\"_blank\">plugin&#8217;s documentation</a>:</p>\n<pre class=\"brush: php; light: true; title: ; notranslate\">\n&lt;img src=\"&lt;?php block_field( \'profile-picture\' ); ?&gt;\" alt=\"&lt;?php block_field( \'author-name\' ); ?&gt;\" /&gt;\n&lt;h3&gt;&lt;?php block_field( \'author-name\' ); ?&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;?php block_field( \'testimonial\' ); ?&gt;&lt;/p&gt;\n</pre>\n<p>The plugin makes it possible to build custom blocks in a matter of minutes, as demonstrated in the video below.</p>\n<p></p>\n<h3>Block Lab Puts Block Creation Inside the WordPress Admin</h3>\n<p>Block Lab differs from existing block creation tools in that it aims to provide a Gutenberg-first solution directly inside the WordPress admin. With the exception of the template creation, developers are not required to write any code when using it to create blocks.</p>\n<p>&#8220;Ahmad’s <a href=\"https://github.com/ahmadawais/create-guten-block\" rel=\"noopener noreferrer\" target=\"_blank\">create-gluten-block</a> is an excellent solution, but is more focused on streamlining block creation from the ground floor,&#8221; Stinson said. &#8220;As I understand, it’s a development framework. Block Lab is about letting the developer kick off from the 10th floor and does this by offering a super simple WP Admin and traditional templating  experience.&#8221;</p>\n<p>Stinson said <a href=\"https://wptavern.com/acf-5-8-beta-1-introduces-blocks-feature-release-slated-for-november\" rel=\"noopener noreferrer\" target=\"_blank\">ACF&#8217;s solution</a> was one of the inspirations for his team but that Block Lab tackles block creation from a different angle. </p>\n<p>&#8220;ACF is amazing as well &#8211; easily one of our all time favorite plugins and one that has inspired us,&#8221; Stinson said. &#8220;Block Lab is a Gutenberg-first solution. Where ACF is a meta data first solution. They both arrive at similar destinations but get there by very different means, both technically and as far as UX goes.&#8221;</p>\n<p>Developers and users who adopt Block Labs should be aware that if the plugin is deactivated, the custom blocks they created will also be deactivated. They are stored in the database and the templates are stored in the theme or child theme. Switching themes means users will lose the blocks as well.</p>\n<p>&#8220;Adding templates to a stand-alone plugin is the most effective way around this,&#8221; Stinson said. &#8220;Either way though, the templating is simple enough that copying template folders/files from one theme to another is pretty easy. I did this exact thing yesterday in about 5 minutes.&#8221;</p>\n<p>Data portability isn&#8217;t a guarantee for users right now, but Stinson said his team has some ideas about how they can reduce barriers even further to include an in-admin templating experience. </p>\n<p>Block Lab&#8217;s creators have plans to offer commercial extensions eventually, but at this stage they are focusing on solving the problem for users in the free plugin.</p>\n<p>&#8220;Once we better understand what folks are needing, we’ll find a way of gracefully offering premium stuff,&#8221; Stinson said.  </p>\n<p>There are still many unknowns about how the larger community of WordPress users will react to the upcoming 5.0 release, but Stinson is convinced that Gutenberg will have a positive impact on the plugin ecosystem and users&#8217; experiences with extensions.</p>\n<p>&#8220;Gutenberg is going to, ultimately, change things for the better in the plugin ecosystem,&#8221; he said. &#8220;There is no doubt it’s going to be bumpy for the first little while, but the net effect is that WordPress will have a better editing experience in general and one that gives plugin developers a stronger baseline for extending the editing experience. Even as we explore what we can do with Block Lab we’re discovering really cool things that we would never have thought of unless we just started using it. I think this will be the larger experience by most people in the WordPress community.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 19 Nov 2018 21:41:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"WPTavern: Gutenberg is Coming to WordPress’ Mobile Apps, Beta Version Expected February 2019\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85696\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"https://wptavern.com/gutenberg-is-coming-to-wordpress-mobile-apps-beta-version-expected-february-2019\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3582:\"<p>The team working on integrating Gutenberg into WordPress&#8217; mobile apps is making progress, but users will not have access to the new editor in the apps until early 2019. Jorge Bernal, a mobile engineer at Automattic, <a href=\"https://make.wordpress.org/mobile/2018/11/15/gutenberg-in-the-apps-what-to-expect/\" rel=\"noopener noreferrer\" target=\"_blank\">posted an update</a> yesterday, highlighting current capabilities:</p>\n<blockquote><p>Gutenberg Mobile [is] working inside the apps and the first post published with it, the writing flow has improved so it’s starting to feel more like an editor and less like a collection of isolated blocks, we have a working toolbar in place, you can now select images from your media library.</p></blockquote>\n<p>If you are using one of the mobile apps and you attempt to edit a post that was created with Gutenberg, you will see a warning like the one below:</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/11/Screenshot_20181116-170549.png?ssl=1\"><img /></a></p>\n<p>This doesn&#8217;t mean users cannot edit content in the mobile apps, but there will be inconsistencies while Gutenberg support is still in progress. </p>\n<p>I created some posts with Gutenberg and then went to edit them in the Android app. During my tests of switching back to the Gutenberg editor after saving some changes in the mobile app, I found that Gutenberg included the content but not the formatting options I had selected in the app. I received a warning about unexpected or invalid content. </p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-16-at-5.08.13-PM.png?ssl=1\"><img /></a></p>\n<p>The mobile apps team expects to ship an <a href=\"https://github.com/wordpress-mobile/gutenberg-mobile/milestone/4\" rel=\"noopener noreferrer\" target=\"_blank\">alpha release</a> to testers at the end of 2018, with basic capabilities like adding a heading, paragraph, and images from the media library:</p>\n<blockquote><p>We will have an alpha release at the end of the year that will showcase the editing flow with some selected basic blocks. We will have a basic integration with the apps, enough to be able to experience Gutenberg (via secret opt-in or special builds), but won’t be showing this to users. Being able to use early versions of Gutenberg directly in the apps will make it easier to gather feedback and do user testing.</p></blockquote>\n<p>A beta with support for the most common types of content is tentatively planned for February 2019. The team is aiming to make writing a post using Gutenberg Mobile as pleasant as it currently is with Aztec.</p>\n<p>&#8220;As Gutenberg rolls out to users on the web, we might see a good amount of users hitting problems trying to edit Gutenberg posts on Aztec,&#8221; Bernal said. &#8220;We have done (and keep doing) a lot of work to try to make that as good as possible, but there are limits to how compatible we can make the existing editor. We want to reduce the gap between Gutenberg launching and having a version in the apps, so we’re adjusting scope a bit to ship in February.&#8221;</p>\n<p>It will be interesting to see how Gutenberg support is presented in the apps. I imagine it will be challenging to improve upon the mobile apps&#8217; current editing experience, which is already fairly intuitive and streamlined. </p>\n<p>Users can follow along with the process and give feedback on the <a href=\"https://github.com/wordpress-mobile/gutenberg-mobile\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenberg Mobile</a> GitHub repo.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 23:52:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WPTavern: How WordPress Has Changed People’s Lives\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85710\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wptavern.com/how-wordpress-has-changed-peoples-lives\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4877:\"<p>It&#8217;s Friday and we could probably all use a little more positivity in our lives, especially on social media. Morten Rand-Hendriksen recently <a href=\"https://twitter.com/mor10/status/1062839649498845186\">asked his followers</a> on Twitter how WordPress has changed their lives. Here are a couple of the responses that stood out to me.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>As a beginner web designer, who was struggling to find a job/work, WordPress opened the door to web development and enabled me  to offer clients control over their websites. That was nearly 10 years ago and I’ve been building with WP ever since. </p><cite><a href=\"https://twitter.com/keithdevon/status/1062978809090228225\">Keith Devon</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I graduated in 2008 right into the thick of the recession. No jobs, nothing &#8211; the only way I could put food on the table and pay rent was to build WordPress sites for people. This led to my entire career in UX design, and my life would be very very different without WordPress.</p><cite><a href=\"https://twitter.com/scotsullivan/status/1063158394809393152\">Scott Sullivan</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Here&#8217;s one you won&#8217;t expect. I was in an agency job I hated. I had an interview with Automattic and failed. Devastated, it forced me to look at what I really wanted. I now have my own consultancy.</p><cite><a href=\"https://twitter.com/mrwiblog/status/1062976260182368257\">Chris Taylor</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I&#8217;d been working in the social field for more than 30 years. In 2015 I had to change and decided to work in the digital world. I casually met the Turin Meetup community and joined them. Then I started to contribute to the Polyglots team. Now, I&#8217;m one of the Italian GTE</p><cite><a href=\"https://twitter.com/lausacco/status/1063076968051232768\">Laurasacco</a></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I&#8217;d been working for a hosting company and noticed how many of our users were enjoying it. Decided to go to WordCamp in 2008. The software was great, but the community was what really drew me in. I&#8217;ve been using WordPress in my career ever since then.</p><cite><a href=\"https://twitter.com/supernovia/status/1062926352511160320\">Ms. Velda</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Made a WP website for a friend, then another, then someone who paid me&#8230; Today is 6 years and 120 clients later.<br /></p><cite><a href=\"https://twitter.com/Sara11D/status/1063032808669614080\">Sara Dunn</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>#<strong>WCSEA</strong> and specifically <a href=\"https://twitter.com/adspedia\">@<strong>adspedia</strong></a> reminded me that WordPress is about the inspiring people I meet at so many occasions. Beautiful minds &amp; souls who inspired me to build a new and better life 2 years ago. It’s way more than software and individual ego.</p><cite><a href=\"https://twitter.com/CaroleOlinger/status/1062991590199832576\">Carole Olinger</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I started by own consultancy doing WordPress for nonprofits straight out of college. Somehow, I&#8217;m still here and still loving it almost a decade later. Meetups and WordCamps (<a href=\"https://twitter.com/hashtag/wcsea?src=hash\">#<strong>wcsea</strong></a>!) were so crucial to my learning, developing as a speaker, and networking.</p><cite><a href=\"https://twitter.com/MRWweb/status/1062858131988828160\">Mark Root-Wiley</a><br /></cite></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I started working with <a href=\"https://twitter.com/hashtag/WordPress?src=hash\">#<strong>WordPress</strong></a> in 2012 after my business was sold out from under me by a ‘partner&#8217;. I ended up losing everything. Developing WordPress sites contributed to getting my Family out of debt, back on our feet. <a href=\"https://twitter.com/mor10\">@<strong>Mor10</strong></a> you&#8217;ve been an inspiration along the way&#8230;</p><cite><a href=\"https://twitter.com/d8m18n/status/1063203958485803009\">Damian Saunders</a><br /></cite></blockquote>\n\n\n\n<p>There&#8217;s always a lot happening in the WordPress ecosystem and every once in awhile, it&#8217;s nice to step back to see how this software, which is used by millions of people across the world, is impacting  lives.<br /></p>\n\n\n\n<p>I highly encourage you to read <a href=\"https://twitter.com/mor10/status/1062839649498845186\">the thread</a> in its entirety.  If you&#8217;d like to read similar, more in-depth content, check out <a href=\"https://heropress.com/\">HeroPress</a>. HeroPress publishes inspirational essays from members of the community once a month. <br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 22:25:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"WPTavern: WordPress 5.0 Beta 5 Adds Permalink Editing to the Document Sidebar\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85671\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"https://wptavern.com/wordpress-5-0-beta-5-released-adds-permalink-editing-to-the-document-sidebar\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2257:\"<div class=\"wp-block-image\"><img />Permalink Panel</div>\n\n\n\n\nWordPress 5.0 Beta 5 <a href=\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-5/\">is available</a> for testing and includes all of the block editor changes that are in <a href=\"https://make.wordpress.org/core/2018/11/15/whats-new-in-gutenberg-15th-november-2/\">Gutenberg 4.4</a>. One of the major changes in this release is the addition of a Permalink panel that is in the Document sidebar. \n\n\n\nThe <a href=\"https://github.com/WordPress/gutenberg/pull/11874\">panel was added</a> based on user feedback  that the UI for editing the permalink is difficult to discover and buggy. This method of editing the permalink does not replace the existing method of clicking the title block. \n\n\n\nIn beta 5, developers can now <a href=\"https://github.com/WordPress/gutenberg/pull/11802\">remove panels</a> from the document sidebar. However, if you want to add panels to the sidebar, there is <a href=\"https://github.com/WordPress/gutenberg/pull/11802#issuecomment-439370494\">currently no way</a> to do it.\n\n\n\nHandling images has <a href=\"https://github.com/WordPress/gutenberg/pull/11846\">been improved</a> in beta 5 as images now take up the right amount of space in themes with wider editors. <a href=\"https://github.com/WordPress/gutenberg/pull/10333\">Hover styles</a> for mobile devices are disabled and the i18n module <a href=\"https://github.com/WordPress/gutenberg/pull/11493\">was refactored</a> to take advantage of performance improvements. \n\n\n\nIf WordPress 5.0 is released before the end of the year, it will include <a href=\"https://make.wordpress.org/core/2018/10/15/wordpress-and-php-7-3/\">PHP 7.3 compatibility fixes</a>. If 5.0 is delayed until next year, these compatibility fixes <a href=\"https://wptavern.com/wordpress-4-9-9-release-may-shift-focus-to-php-7-3-compatibility-gutenberg-merge-proposal-timeline-tbd\">will be released</a> in a minor WordPress update before the end of this year.\n\n\n\nWordPress 5.0 RC 1 is scheduled to be released on Monday, November 19th, with 5.0 final scheduled to be released November 27th. If you think you&#8217;ve discovered a bug, please report it in the  <a href=\"https://wordpress.org/support/forum/alphabeta/\">Alpha/Beta support forums</a>. <br />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 20:51:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"WPTavern: WordPress Accessibility Team to Host Hackathon with Deque Systems at WordCamp US 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85636\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:106:\"https://wptavern.com/wordpress-accessibility-team-to-host-hackathon-with-deque-systems-at-wordcamp-us-2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4651:\"<p>WordPress&#8217; Accessibility team will be <a href=\"https://make.wordpress.org/accessibility/2018/11/15/hackathon-automated-accessibility-testing-with-deque-on-the-wcus-contributor-day/\" rel=\"noopener noreferrer\" target=\"_blank\">hosting a hackathon at Contributor Day</a> on Sunday, December 9, at WordCamp US in Nashville. The team will be joined by lead developers from <a href=\"https://www.deque.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Deque Systems</a>, a widely respected accessibility firm in the industry, with the goal of setting up automated accessibility testing for WordPress core.</p>\n<p>The event has been in planning since JSconf EU 2018 in June when <a href=\"https://twitter.com/miss_jwo\" rel=\"noopener noreferrer\" target=\"_blank\">Jenny Wong</a> met with <a href=\"https://twitter.com/caitlinthefirst\" rel=\"noopener noreferrer\" target=\"_blank\">Caitlin Cashin</a> from Deque. They discussed how Deque could help WordPress with their accessibility expertise at WordCamp US. Rian Rietveld worked with Aaron Campbell, who is organizing the WCUS contributor day, to put the hackathon in motion.</p>\n<p>Deque&#8217;s site is built on WordPress and the company specializes in helping teams get hooked up with automation tools. The company created <a href=\"https://www.deque.com/axe/\" rel=\"noopener noreferrer\" target=\"_blank\">aXe</a>, an open source library and testing engine that can be customized to integrate with all modern browsers and testing frameworks. Deque <a href=\"https://wptavern.com/axe-an-open-source-javascript-library-for-automating-accessibility-testing\" rel=\"noopener noreferrer\" target=\"_blank\">open sourced aXe in 2015</a> and the team was invited to contribute the library to the <a href=\"http://www.w3.org/WAI/ER/2015/draft-charter-3\" rel=\"noopener noreferrer\" target=\"_blank\">W3C WAI Evaluation and Repair Tools Working Group</a>, when the group worked to develop a normative set of rules for evaluating WCAG 2.0 conformance.</p>\n<p>Deque is volunteering their lead developers to help WordPress make improvements to its development workflow. The company has hosted similar hackathons in the past.</p>\n<p>&#8220;By focusing primarily on projects with broad adoption, accessibility fixes have potential to trickle down to every website or web application including that library,&#8221; Deque Developer Advocate Marcy Sutton said after the <a href=\"https://www.deque.com/blog/highlights-takeaways-2nd-annual-axe-hackathon/\" rel=\"noopener noreferrer\" target=\"_blank\">2017 aXe hackathon in San Diego</a>. &#8220;Ultimately, this kind of work will have the most impact on the lives of people with disabilities, as it contributes to the creation of a more accessible workplace environment. A more accessible web also means a better user experience for everyone, part of the reason why digital accessibility is so important.&#8221;</p>\n<p>In order for the hackathon at WordCamp US to be successful, Deque will need to connect to contributors who can collaborate on setting up automated testing.</p>\n<p>&#8220;From the WordPress side we would like to invite core developers to join in and help find solutions to set this up,&#8221; Accessibility Team rep Jean-Baptiste Audras said. He and contributor Rachel Cherry will be representing the accessibility team during the hackathon and they need help from core committers who know their way around the automated testing system in WordPress core. Audras also said the team will need help from Gutenberg contributors.</p>\n<p>&#8220;The tools can/will provide automated tests for the block editor since it&#8217;s based on testing the DOM (Document Object Model) of each admin screen generated by WordPress,&#8221; he said. &#8220;But we have to build it together with the people involved in Gutenberg to see how we can handle it the best way.&#8221;</p>\n<p>Audras said the Gutenberg phase 2 release leads have already been in touch with the accessibility team and communication across teams is improving.</p>\n<p>&#8220;If we find a technical solution, there should ideally not be technical problems to implement it,&#8221; Audras said. &#8220;As usual, it will be a question of priority and communication. I am confident that Gutenberg developers will be interested to add some automated checks to the Gutenberg stack.&#8221;</p>\n<p>Audras said he doesn&#8217;t know when the automated tests for accessibility will be operational but he believes they will be very helpful in the future, especially in cases where new releases are being put out quickly. Anyone interested to contribute to the effort can get in touch on WordPress Slack&#8217;s #accessibility channel.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 15:39:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"BuddyPress: BuddyPress 4.0.0 Release Candidate 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://buddypress.org/?p=281885\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"https://buddypress.org/2018/11/buddypress-4-0-0-release-candidate-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1216:\"<p>BP 4.0.0 Release Candidate 1 is now available. This package contains the code that we think we&#8217;ll ship as BuddyPress 4.0.0 later in November. If you build BuddyPress plugins or themes, you&#8217;re encouraged to give the RC a thorough look in a test environment.</p>\n<p>Important changes in 4.0.0 include:</p>\n<ul>\n<li>BuddyPress data exporters (for WP 4.9.6+), including a new &#8216;Export Data&#8217; Settings subtab, where users can request an export from the front end</li>\n<li>Integration into the WordPress privacy policy system (for WP 4.9.6+)</li>\n<li>Improvements to Nouveau and other BP interfaces on mobile devices</li>\n<li>Bug fixes for emails, Nouveau, BP&#8217;s nav tools</li>\n<li>Improved compatibility with WP 4.9.x and 5.0</li>\n</ul>\n<p>See the <a href=\"https://buddypress.trac.wordpress.org/query?group=status&milestone=4.0\">4.0.0 milestone</a> for more info.</p>\n<p>Download the 4.0.0 release candidate from wordpress.org: <a href=\"https://downloads.wordpress.org/plugin/buddypress.4.0.0-RC1.zip\">https://downloads.wordpress.org/plugin/buddypress.4.0.0-RC1.zip</a>. As always, remember that this is pre-release software, and we don&#8217;t recommend running it on a production site.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 03:05:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Boone Gorges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Dev Blog: WordPress 5.0 Beta 5\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6250\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-5/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4742:\"<p>WordPress 5.0 Beta 5 is now available!</p>\n\n\n\n<p><strong>This software is still in development,</strong>&nbsp;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version.</p>\n\n\n\n<p>There are two ways to test this WordPress 5.0 Beta: try the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin (you’ll want “bleeding edge nightlies”), or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-beta5.zip\">download the beta here</a>&nbsp;(zip).</p>\n\n\n\n<p><strong>Reminder: the WordPress 5.0 release date has changed</strong>. It is now scheduled for release on&nbsp;<a href=\"https://make.wordpress.org/core/5-0/\">November 27</a>, and we need your help to get there. Here are some of the big issues that we’ve fixed since Beta 4:</p>\n\n\n\n<h2>Block Editor</h2>\n\n\n\n<p>The block editor has been updated to match the <a href=\"https://make.wordpress.org/core/2018/11/15/whats-new-in-gutenberg-15th-november-2/\">Gutenberg 4.4 release</a>, the major changes  include:</p>\n\n\n\n<ul><li>&nbsp;A <a href=\"https://github.com/WordPress/gutenberg/pull/11874\">permalink panel has been added to the document sidebar</a> to make it easier to find.</li><li>Editor document panels can now be <a href=\"https://github.com/WordPress/gutenberg/pull/11802\">programmatically removed</a>.</li><li>The uploading indicator for images and galleries has been replaced with a&nbsp;<a href=\"https://github.com/WordPress/gutenberg/pull/11876\">spinner and faded out image</a>.</li><li>The text and code editing blocks will now <a href=\"https://github.com/WordPress/gutenberg/pull/11750\">use the full width of the editor</a>.</li><li>Image handling has been improved. Images now  take up the right amount of space for <a href=\"https://github.com/WordPress/gutenberg/pull/11846\">themes with wider editors</a> (like Twenty Nineteen).<br /></li><li>Hover styles are now <a href=\"https://github.com/WordPress/gutenberg/pull/10333\">correctly disabled for mobile devices</a>.</li><li>The i18n module has been refactored to benefit from <a href=\"https://github.com/WordPress/gutenberg/pull/11493\">significant performance gains</a>.</li></ul>\n\n\n\n<p>Additionally, there have been some pesky bugs fixed:</p>\n\n\n\n<ul><li>Better handling for <a href=\"https://github.com/WordPress/gutenberg/pull/11590\">links without an href</a> attribute, which were showing as <code>undefined</code>.</li><li>Japanese text (double byte characters) are <a href=\"https://github.com/WordPress/gutenberg/pull/11908\">now usable in the list block</a>.</li><li>Better handling for different text encodings (e.g. emoji) within a block <a href=\"https://github.com/WordPress/gutenberg/pull/11771\">in block validation</a>.</li></ul>\n\n\n\n<p>A full list of changes can be found in the <a href=\"https://make.wordpress.org/core/2018/11/15/whats-new-in-gutenberg-15th-november-2/\">Gutenberg 4.4 release post</a>.<br /></p>\n\n\n\n<h2>PHP 7.3 Support</h2>\n\n\n\n<p>The final known PHP 7.3 compatibility issue has been fixed. You can brush up on what you need to know about PHP 7.3 and WordPress by checking out the <a href=\"https://make.wordpress.org/core/2018/10/15/wordpress-and-php-7-3/\">developer note on the Make WordPress Core blog</a>.<br /></p>\n\n\n\n<h2>Twenty Nineteen</h2>\n\n\n\n<p>Work on making Twenty Nineteen ready for prime time continues on its <a href=\"https://github.com/WordPress/twentynineteen\">GitHub repository</a>. This update includes <a href=\"https://core.trac.wordpress.org/changeset/43904\">a host of tweaks and bug fixes</a>, including:</p>\n\n\n\n<ul><li>Add <code>.button</code> class support.</li><li>Fix editor font-weights for headings.</li><li>Improve support for sticky toolbars in the editor.</li><li>Improve text-selection custom colors for better contrast and legibility.</li><li>Fix editor to prevent Gutenberg&#8217;s meta boxes area from overlapping the content.</li></ul>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 01:09:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Jonathan Desrosiers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:135:\"WPTavern: Full Gutenberg Compatibility Coming Soon to Automattic’s Free Themes on WordPress.org, Including Storefront for WooCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85613\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:142:\"https://wptavern.com/full-gutenberg-compatibility-coming-soon-to-automattics-free-themes-on-wordpress-org-including-storefront-for-woocommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3720:\"<p>If your site is hosted on <a href=\"http://WordPress.com\" rel=\"noopener noreferrer\" target=\"_blank\">WordPress.com</a> and you are trying out the new Gutenberg editor, there are currently <a href=\"https://github.com/Automattic/themes\" rel=\"noopener noreferrer\" target=\"_blank\">24 themes with full Gutenberg support</a> available and more on the way. In response to questions about how to find Gutenberg themes on WordPress.com, <a href=\"https://themeshaper.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Automattic&#8217;s Theme Team</a> has <a href=\"https://twitter.com/MRWweb/status/1062491404373356544\" rel=\"noopener noreferrer\" target=\"_blank\">given an update</a> about the status of the .com themes, as well as the company&#8217;s free themes on WordPress.org.</p>\n<p>There is currently no way to search for Gutenberg-ready themes on WordPress.com themes because there is no filter set up for this. However, the team said users should not any experience any issues with themes breaking with the new editor:</p>\n<blockquote><p>All existing themes should still work with Gutenberg. At worst styles in the editor might not exactly match styles on the site itself, and styling for individual blocks might cause conflicts if the theme treats that type of content in a specific way. But that is true of all WordPress themes, not just the ones on WordPress.com.</p></blockquote>\n<p>Users can activate any theme they want with Gutenberg. The new editor is not going to break any themes, but a theme does need to <a href=\"https://wordpress.org/gutenberg/handbook/extensibility/theme-support/\" rel=\"noopener noreferrer\" target=\"_blank\">add support</a> for users to take advantage of specific features like wide alignments and block color palettes. Gutenberg-ready themes also include editor styles to ensure a consistent editing experience between frontend and backend.</p>\n<p>Automattic is also working to bring some of those updates from its current set of Gutenberg-ready themes to its free themes hosted on WordPress.org. The company has <a href=\"https://wordpress.org/themes/author/automattic/\" rel=\"noopener noreferrer\" target=\"_blank\">109 themes</a> in the directory, which have cumulatively been downloaded more than <a href=\"http://wptally.com/?wpusername=automattic\" rel=\"noopener noreferrer\" target=\"_blank\">17 million times</a>. The majority of its more popular themes fall into the business category, such as <a href=\"https://wordpress.org/themes/dara/\" rel=\"noopener noreferrer\" target=\"_blank\">Dara</a> (10K active installs), <a href=\"https://wordpress.org/themes/argent/\" rel=\"noopener noreferrer\" target=\"_blank\">Argent</a> (10K), <a href=\"https://wordpress.org/themes/edin/\" rel=\"noopener noreferrer\" target=\"_blank\">Edin</a> (6K), and <a href=\"https://wordpress.org/themes/karuna/\" rel=\"noopener noreferrer\" target=\"_blank\">Karuna (5K)</a>. Several of these themes are already Gutenberg-ready with the code <a href=\"https://github.com/Automattic/themes\" rel=\"noopener noreferrer\" target=\"_blank\">available on GitHub</a>.</p>\n<p><a href=\"https://wordpress.org/themes/storefront/\" rel=\"noopener noreferrer\" target=\"_blank\">Storefront</a> is by far Automattic&#8217;s most popular free theme on WordPress.org with 200,000+ installs and is well on its way towards being ready to support Gutenberg&#8217;s new features. Development towards this goal is <a href=\"https://github.com/woocommerce/storefront/tree/feature/gutenberg\" rel=\"noopener noreferrer\" target=\"_blank\">happening on GitHub</a>. Users can run beta versions of the Storefront theme ahead of time using the <a href=\"https://github.com/seb86/Storefront-Beta-Tester\" rel=\"noopener noreferrer\" target=\"_blank\">Storefront Beta Tester</a> plugin.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 16 Nov 2018 00:27:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"WPTavern: WPWeekly Episode 338 – Inflation, WordPress Release Dates, WP GDPR\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=85642&preview=true&preview_id=85642\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:83:\"https://wptavern.com/wpweekly-episode-338-inflation-wordpress-release-dates-wp-gdpr\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1871:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I discuss the news of the week. We talk about the delayed release of WordPress 5.0 and which day would be a suitable release date. We share our opinions on Matt&#8217;s answers from his Q&amp;A appearance at WordCamp in Portland, Oregon. We also talk about the changes in WordPress core development, Automatticians in leadership roles, and last, but not least, WordCamp budgeting.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/wordpress-5-0-release-date-update-to-november-27\">WordPress 5.0 Release Date Update to November 27</a></p>\n<p><a href=\"https://wptavern.com/matt-mullenweg-addresses-controversies-surrounding-gutenberg-at-wordcamp-portland-qa\">Matt Mullenweg Addresses Controversies Surrounding Gutenberg at WordCamp Portland Q&amp;A</a></p>\n<p><a href=\"https://wptavern.com/wp-gdpr-compliance-plugin-patches-privilege-escalation-vulnerability\">WP GDPR Compliance Plugin Patches Privilege Escalation Vulnerability</a></p>\n<p><a href=\"https://wptavern.com/maximum-ticket-prices-for-wordcamps-will-increase-to-25-per-day-in-2019\">Maximum Ticket Prices for WordCamps Will Increase to $25 per Day in 2019</a></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, November 21st 3:00 P.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #338:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 15 Nov 2018 17:23:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"WPTavern: NextGEN Gallery Plugin to Add Gutenberg Support Ahead of WordPress 5.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85609\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"https://wptavern.com/nextgen-gallery-plugin-to-add-gutenberg-support-ahead-of-wordpress-5-0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4139:\"<p>If you&#8217;re a <a href=\"https://wordpress.org/plugins/nextgen-gallery/\" rel=\"noopener noreferrer\" target=\"_blank\">NextGEN Gallery plugin</a> user and have been wondering about Gutenberg compatibility, Imagely CEO Erick Danzer announced today that the plugin will ship a gallery block in a release planed for next week. The plugin is currently used on nearly a million WordPress sites (900,000+ active installs). NextGEN Gallery&#8217;s Gutenberg block has been in <a href=\"https://www.imagely.com/gutenberg-block/\" rel=\"noopener noreferrer\" target=\"_blank\">beta testing since May</a> and the plugin will support users who update to use the new editor as well as those who stick with the Classic Editor plugin.</p>\n<p>In a post titled &#8220;<a href=\"https://www.imagely.com/defer-gutenberg/\" rel=\"noopener noreferrer\" target=\"_blank\">A Plea to Defer the Release of Gutenberg</a>,&#8221; Danzer outlined his concerns with the timeline for WordPress 5.0. His thoughts echo many other prominent members of the development community who have written their own <a href=\"https://wptavern.com/calls-to-delay-wordpress-5-0-increase-developers-cite-usability-concerns-and-numerous-bugs-in-gutenberg\" rel=\"noopener noreferrer\" target=\"_blank\">calls to delay the release</a>. He cites feedback on WordPress.org and urges the Gutenberg team not to discount the validity of these reviews:</p>\n<blockquote><p>Some people have been dismissive of those reviews and questioned whether they are a legitimate reflection of user experiences with Gutenberg. The reviews often lack detail and can be quite harsh.</p>\n<p>But that’s the experience of ALL plugin developers on the WordPress repository. Gutenberg is being reviewed in precisely the same way as every other plugin on the repository. If any other major plugin maintained a 2.3 star rating and refused to accept the feedback as legitimate, it would not be a major plugin for long.</p>\n<p>Even without detail, reviews on the repository represent a fair reflection of overall user feelings about a plugin. In the case of Gutenberg, it is clear the plugin is not ‘wowing’ potential users.</p></blockquote>\n<p>Danzer also referenced a release the NextGEN Gallery team shipped in 2013 that included &#8220;major and breaking changes&#8221; that had been &#8220;tested aggressively but in limited ways.&#8221; This release broke an estimated 10 percent of the plugin&#8217;s installations as well as compatibility with many extensions. It has had a lasting impact on NextGEN&#8217;s reputation for the past five years. Danzer said he fears WordPress may be headed in the same direction, except at a much larger scale.</p>\n<p>As a postscript to his plea, Danzer assured users reading his post that NextGEN Gallery will have support for Gutenberg in time for the WordPress 5.0 release:</p>\n<blockquote><p>Despite the concerns expressed in this post, I want to assure NextGEN Gallery users that we&#8217;ll be ready regardless of the final release decision for Gutenberg. We&#8217;ll be officially  in the next week. We&#8217;ve tested and ensured that your existing galleries will work when you update. We&#8217;ve developed our block so that if you add galleries via Gutenberg, they will continue to work if you roll back or install the classic editor. And we&#8217;ll have all hands on deck to deal with any issues that arise when Gutenberg is released.</p></blockquote>\n<p>NextGEN Gallery&#8217;s Gutenberg support includes a block that launches a modal where users can select a gallery to insert. Unless it has significantly changed from the <a href=\"https://www.youtube.com/watch?v=ZCazFfYz49s\" rel=\"noopener noreferrer\" target=\"_blank\">beta preview video</a> published, the gallery block doesn&#8217;t seem to offer a preview of the gallery inside the Gutenberg editor once it has been selected and placed within the content. Users who want to test the beta version of Gutenberg support in the plugin can download the latest from the <a href=\"https://www.imagely.com/wordpress-gallery-plugin/nextgen-gallery/beta/\" rel=\"noopener noreferrer\" target=\"_blank\">NextGEN Gallery beta page</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 14 Nov 2018 23:54:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"WPTavern: Drupal Gutenberg Showcased at DrupalCamp Oslo 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85542\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wptavern.com/drupal-gutenberg-showcased-at-drupalcamp-oslo-2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4727:\"<p>Gutenberg appreciation is running high across the CMS pond in the Drupal world. DrupalCamp Oslo 2018, Norway&#8217;s biggest national camp to date, was held over the weekend. The event featured two sessions on Gutenberg &#8211; one for site builders and one for block developers. <a href=\"https://www.frontkom.no/\" rel=\"noopener noreferrer\" target=\"_blank\">Frontkom</a>, the team behind <a href=\"https://drupalgutenberg.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Drupal Gutenberg</a>, took home two <a href=\"https://splashawards.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Splash Awards</a> for &#8220;Best Module&#8221; and &#8220;Best Integration&#8221; for 2018.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">The Splash Awards for Best integration and Best module was awarded to Drupal Gutenberg this weekend @ <a href=\"https://twitter.com/hashtag/dcoslo?src=hash&ref_src=twsrc%5Etfw\">#dcoslo</a>! Big smile from <a href=\"https://twitter.com/perandre?ref_src=twsrc%5Etfw\">@perandre</a> on behalf of the <a href=\"https://twitter.com/frontkom?ref_src=twsrc%5Etfw\">@frontkom</a> team. <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f3c6.png\" alt=\"🏆\" class=\"wp-smiley\" /><img src=\"https://s.w.org/images/core/emoji/11/72x72/1f3c6.png\" alt=\"🏆\" class=\"wp-smiley\" /> <a href=\"https://t.co/Sx0NLv3rWY\">pic.twitter.com/Sx0NLv3rWY</a></p>\n<p>&mdash; drupalgutenberg (@drupalgutenberg) <a href=\"https://twitter.com/drupalgutenberg/status/1061973657470337024?ref_src=twsrc%5Etfw\">November 12, 2018</a></p></blockquote>\n<p></p>\n<p>The <a href=\"https://wptavern.com/gutenberg-cloud-plugin-for-wordpress-is-now-in-beta\" rel=\"noopener noreferrer\" target=\"_blank\">Cloud Blocks plugin for WordPress</a> was released in beta two weeks ago to begin testing the Gutenberg Cloud API, which enables blocks to be shared across CMS&#8217;s. The Drupal version of this connector plugin was introduced at DrupalCamp Oslo. Frontkom&#8217;s Per André Rønsen and Thor Andre Gretland hosted a session called &#8220;Build your pages build with Drupal Gutenberg&#8221; where they gave attendees a look at Gutenberg Cloud for D8. It runs as submodule of Drupal Gutenberg.</p>\n<p><a href=\"https://cloudup.com/c5wZ7ylbkvN\"><img src=\"https://i2.wp.com/cldup.com/9giVOkXdC3.gif?resize=627%2C407&ssl=1\" alt=\"Drupal pagebuilder gutenberg\" width=\"627\" height=\"407\" /></a></p>\n<h3>Changes Coming to Gutenberg Cloud: All Blocks Will Undergo Code Review before Publishing</h3>\n<p>One of the speakers at the event was a member of the Drupal.org security team. Rønsen said after their session they had good participation during the Q&amp;A time.</p>\n<p>&#8220;There was some push back on Gutenberg Cloud for letting any developer add new blocks,&#8221; Rønsen said. &#8220;We explained that this is only during beta phase, and that we do code review of new blocks coming in. However, this led to the decision of switching to white listing instead. Starting next week, block authors will need to email us and ask for code review before we accept the blocks. This will go hand in hand with an upcoming browser on gutenbergcloud.org  – meaning each block will get it&#8217;s own little landing page online. We think this will be useful for people to see how Gutenberg Cloud can be useful for their site.&#8221;</p>\n<p>Overall, the Frontkom team saw a positive reception to Gutenberg Cloud at DrupalCamp Oslo and they are working to incorporate some of the valuable feedback they received.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Totally impressed by <a href=\"https://twitter.com/drupalgutenberg?ref_src=twsrc%5Etfw\">@drupalgutenberg</a> demo at <a href=\"https://twitter.com/hashtag/dcoslo?src=hash&ref_src=twsrc%5Etfw\">#dcoslo</a>. Good work <a href=\"https://twitter.com/frontkomtech?ref_src=twsrc%5Etfw\">@frontkomtech</a> <a href=\"https://twitter.com/hashtag/drupalgutenberg?src=hash&ref_src=twsrc%5Etfw\">#drupalgutenberg</a> <a href=\"https://twitter.com/hashtag/drupalnorge?src=hash&ref_src=twsrc%5Etfw\">#drupalnorge</a> <a href=\"https://t.co/qXbX8mXhnp\">pic.twitter.com/qXbX8mXhnp</a></p>\n<p>&mdash; Baddy Sonja Breidert (@baddysonja) <a href=\"https://twitter.com/baddysonja/status/1060881025813934085?ref_src=twsrc%5Etfw\">November 9, 2018</a></p></blockquote>\n<p></p>\n<p>&#8220;The interest was amazing,&#8221; Rønsen said. &#8220;This week, we&#8217;ve been in contact with two big dev teams who wants to help out getting the Drupal module a stable release.&#8221;</p>\n<p>The session for site builders was not filmed but there is an unofficial video from the developer day where Frontkom&#8217;s Marco Fernandes and Frank Gjertsen gave a technical session on how to build custom blocks.</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 14 Nov 2018 19:56:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"WPTavern: Maximum Ticket Prices for WordCamps Will Increase to $25 per Day in 2019\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85570\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"https://wptavern.com/maximum-ticket-prices-for-wordcamps-will-increase-to-25-per-day-in-2019\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4485:\"<p>For the last seven years, the maximum amount of money WordCamp organizers could charge for ticket prices was $20 per day. In 2019, this <a href=\"https://make.wordpress.org/community/2018/11/12/increase-in-wordcamp-maximum-ticket-price-for-2019/\">will increase</a> to $25 per day.</p>\n<p>The new amount accounts for inflation and provides breathing room for organizers. According to the Bureau of Labor Statistics <a href=\"https://data.bls.gov/cgi-bin/cpicalc.pl?cost1=20.00&year1=200601&year2=201808\">inflation calculator</a>, $20 in January of 2006 is equal to $25.51 in October of 2018.</p>\n<p>Organizers don&#8217;t have to charge this amount and are encouraged to keep the ticket price as low as possible. The increase is also part of a delicate balancing act between not being a financial burden and getting 80% or more of attendees to show up.</p>\n<p>&#8220;The ticket price does not reflect on the value of the event,&#8221; Andrea Middleton, Community organizer said.</p>\n<p>&#8220;In an ideal world, all WordCamp tickets would be free just like WordPress is free but to avoid organizing a conference for 500 registrants and only having 50 people show up on the day of the event, we <a href=\"https://make.wordpress.org/community/handbook/wordcamp-organizer/planning-details/selling-tickets/#the-reasons-behind-pricing-tickets-as-low-as-possible\">charge as little as we possibly can</a> for tickets, but just enough that people will show up for the event if they’re sleepy that morning or got a last-minute invitation to a pool party or something.&#8221;</p>\n<p>When the <a href=\"https://make.wordpress.org/community/2018/09/17/proposal-to-increase-the-maximum-ticket-price-for-wordcamps/\">proposal </a>to increase the maximum ticket price was published in September, many commenters approved of the increase with <a href=\"https://make.wordpress.org/community/2018/09/17/proposal-to-increase-the-maximum-ticket-price-for-wordcamps/#comment-25918\">some suggesting</a> an even higher amount to account for inflation for the next few years. <a href=\"https://make.wordpress.org/community/2018/09/17/proposal-to-increase-the-maximum-ticket-price-for-wordcamps/#comment-25885\">Ian Dunn questioned</a> whether or not budget shortfalls were due to organizing teams spending money on extra things.</p>\n<p>&#8220;Beyond that, though, I’m curious why camps are having more trouble today than they were 5 or even 10 years ago?&#8221; Dunn said.</p>\n<p>&#8220;Is it harder to get sponsorships? It seems like the opposite is true, especially given how much the global sponsorship program covers.</p>\n<p>&#8220;Based on experiences in my local community, I suspect that the primary reason for budget shortfalls is that the organizing team is choosing to do extra things, beyond what’s necessary to meet the goals of a WordCamp. For example, holding after-parties at trendy venues, expensive speaker gifts, professional A/V (which I’ve advocated for in the past, but not at the cost of higher ticket prices), etc.&#8221;</p>\n<p>It is interesting to ponder how much money WordCamps could save globally by eliminating the materialistic aspects of the event such as t-shirts, speaker gifts, lanyards, badges, signs, etc.</p>\n<p>At there core, WordCamps are about gathering the local community together in a physical location to share knowledge. Not every WordPress event needs to mimic WordCamp US or WordCamp Europe, two of the largest events in the world.</p>\n<p>Although the WordPress Community team tracks data such as how much each WordCamp charges for ticket prices, the information is not readily available. This is because of the large volume of data that would need to be calculated and displayed. It would be interesting to see an info-graphic of this data where you can compare the average ticket price for WordCamps per country.</p>\n<p>Hugh Lashbrooke, a WordPress Community team contributor who has access to the data says that, &#8220;globally the majority of camps have lower prices.&#8221;</p>\n<p>WordCamp organizers are highly encouraged to <a href=\"https://make.wordpress.org/community/handbook/wordcamp-organizer/first-steps/web-presence/using-camptix-event-ticketing-plugin/#tracking-attendance\">keep track</a> of attendance as the data is used to help make better informed decisions. The team will review the no-show rates at WordCamps at the end of 2019 to determine if the price increase had any effect. If not, the team may increase the price again for 2020.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 14 Nov 2018 19:25:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"WPTavern: Google Developers Demo AMP Stories Integration with Gutenberg at Chrome Dev Summit\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85548\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"https://wptavern.com/google-developers-demo-amp-stories-integration-with-gutenberg-at-chrome-dev-summit\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2929:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-13-at-1.18.48-PM.png?ssl=1\"><img /></a></p>\n<p>Alberto Medina and Weston Ruter gave a presentation on Progressive Content Management Systems yesterday at <a href=\"https://developer.chrome.com/devsummit/\" rel=\"noopener noreferrer\" target=\"_blank\">Chrome Dev Summit 2018</a> in San Francisco. Medina is a developer advocate at Google and Ruter recently transitioned into a new role as a Developer Programs Engineer after eight years at XWP.</p>\n<p>Medina began the session with a quick overview of the increasingly complex CMS space, which is growing, according to figures he cited from w3techs: 54% of sites are built with some kind of CMS (11% YoY growth). Many CMS&#8217;s face common challenges when it comes to integrating modern web technologies into their platforms, such as large code bases, legacy code, and technical debt.</p>\n<p>In addressing the challenges that WordPress faces, Google is looking to make an impact on a large swath of the web. Medina outlined the two-part approach Google is using with the WordPress ecosystem. This includes AMP integration via the AMP plugin for WordPress. It&#8217;s currently at <a href=\"https://make.xwp.co/2018/11/05/amp-plugin-release-v1-0-rc2/\" rel=\"noopener noreferrer\" target=\"_blank\">version 1.0 RC2</a> and the stable version is scheduled for release at the end of this month.</p>\n<p>The second part of the approach is integration of modern web capabilities and APIs in core, so that things like service workers and background sync are supported natively in a way that the entire ecosystem can take advantage of them. Google has invested resources to get these features added to core.</p>\n<p>Ruter demonstrated a single page application built in WordPress using a standard theme as the basis and the AMP plugin as a foundation. Medina said the team plans to continue expanding this work integrating AMP content into WordPress, specifically in the context of Gutenberg. He gave a quick demo of how they are working to help content creators easily take advantage of features like <a href=\"https://www.ampproject.org/stories/\" rel=\"noopener noreferrer\" target=\"_blank\">AMP stories</a> via a Gutenberg integration.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/11/Screen-Shot-2018-11-13-at-2.08.41-PM.png?ssl=1\"><img /></a></p>\n<p>Medina said AMP stories are formed by components and work well with Gutenberg, since everything in the new editor corresponds to a block.</p>\n<p>&#8220;We want powerful components like these to become available across all CMS&#8217;s,&#8221; Medina said. &#8220;The CMS space is moving steadily along the progressive web road.&#8221;</p>\n<p>Check out the video below to learn more about Google&#8217;s experience integrating modern web capabilities and progressive technologies into the WordPress platform and ecosystem.</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 14 Nov 2018 00:27:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Dev Blog: WordPress 5.0 Beta 4\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6241\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2018/11/wordpress-5-0-beta-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3706:\"<p>WordPress 5.0 Beta 4 is now available!</p>\n\n\n\n<p><strong>This software is still in development,</strong>&nbsp;so we don’t recommend you run it on a production site. Consider setting up a test site to play with the new version.</p>\n\n\n\n<p>There are two ways to test the WordPress 5.0 Beta: try the&nbsp;<a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>&nbsp;plugin (you’ll want “bleeding edge nightlies”), or you can&nbsp;<a href=\"https://wordpress.org/wordpress-5.0-beta4.zip\">download the beta here</a>&nbsp;(zip).</p>\n\n\n\n<p><strong>The WordPress 5.0 release date has changed</strong>, it is now scheduled for release on&nbsp;<a href=\"https://make.wordpress.org/core/5-0/\">November 27</a>, and we need your help to get there. Here are some of the big issues that we’ve fixed since Beta 3:</p>\n\n\n\n<h2>Block Editor</h2>\n\n\n\n<p>The block editor has been updated to match the <a href=\"https://make.wordpress.org/core/2018/11/12/whats-new-in-gutenberg-12th-november/\">Gutenberg 4.3 release</a>, the major changes  include:</p>\n\n\n\n<ul><li>An <a href=\"https://github.com/WordPress/gutenberg/pull/7718\">Annotations API</a>, allowing plugins to add  contextual data as you write.</li><li>More consistent keyboard navigation between blocks, as well as back-and-forth between different areas of the interface.</li><li>Improved accessibility, with additional  labelling and speech announcements.</li></ul>\n\n\n\n<p>Additionally, there have been some bugs fixed that popped up in beta 3:</p>\n\n\n\n<ul><li>Better support for plugins that have more advanced meta box usage.</li><li>Script concatenation is now supported.</li><li>Ajax calls could occasionally cause PHP errors.</li></ul>\n\n\n\n<h2>Internationalisation</h2>\n\n\n\n<p>We&#8217;ve added an API for translating your plugin and theme strings in JavaScript files! The block editor is now using this, and you can start using it, too. Check out the <a href=\"https://make.wordpress.org/core/2018/11/09/new-javascript-i18n-support-in-wordpress/\">developer note</a>&nbsp;to get started.</p>\n\n\n\n<h2>Twenty Nineteen</h2>\n\n\n\n<p>Twenty Nineteen is being polished over on its <a href=\"https://github.com/WordPress/twentynineteen\">GitHub repository</a>. This update includes <a href=\"https://core.trac.wordpress.org/changeset/43892\">a host of tweaks and bug fixes</a>, including:</p>\n\n\n\n<ul><li>Menus now  properly support keyboard and touch interactions.</li><li>A footer menu has been added for secondary page links.</li><li>Improved backwards compatibility with older versions of WordPress.</li></ul>\n\n\n\n<h2>Default Themes</h2>\n\n\n\n<p>All of the older default themes—from Twenty Ten through to Twenty Seventeen—have polished  styling in the block editor.</p>\n\n\n\n<h2>How to Help</h2>\n\n\n\n<p>Do you speak a language other than English?&nbsp;<a href=\"https://translate.wordpress.org/projects/wp/dev\">Help us translate WordPress into more than 100 languages!</a>&nbsp;</p>\n\n\n\n<p><strong><em>If you think you’ve found a bug</em></strong><em>, you can post to the&nbsp;</em><a href=\"https://wordpress.org/support/forum/alphabeta\"><em>Alpha/Beta area</em></a><em>&nbsp;in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report,&nbsp;</em><a href=\"https://make.wordpress.org/core/reports/\"><em>file one on WordPress Trac</em></a><em>, where you can also find&nbsp;</em><a href=\"https://core.trac.wordpress.org/tickets/major\"><em>a list of known bugs</em></a><em>.</em></p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<p><em>International-<br />isation is a word with<br />many syllables.</em></p>\n\n\n\n<p><em>Meta boxes are<br />the original style block.<br />Old is new again.</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 13 Nov 2018 01:27:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"WPTavern: WordCamp Nordic Tickets Now on Sale, Sponsorship Packages Sold Out in Minutes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85193\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"https://wptavern.com/wordcamp-nordic-tickets-now-on-sale-sponsorship-packages-sold-out-in-minutes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2086:\"<p><a href=\"https://2019.nordic.wordcamp.org/tickets/\" rel=\"noopener noreferrer\" target=\"_blank\">Tickets</a> for the first ever <a href=\"https://wptavern.com/wordcamp-nordic-2019-to-be-held-in-helsinki-march-7-8\" rel=\"noopener noreferrer\" target=\"_blank\">WordCamp Nordic</a> went on sale today and 100 seats sold within 20 minutes. The event is scheduled to be held in Helsinki, Finland, March 7-8, 2019. There are currently 97 regular tickets and 59 micro-sponsor tickets remaining in the first batch, but more will be released in another round.</p>\n<p>If there was any question about whether this new regional WordCamp would gain support, the record-setting buy up of all the <a href=\"https://2019.nordic.wordcamp.org/call-for-sponsors/\" rel=\"noopener noreferrer\" target=\"_blank\">sponsor packages</a> has put them to rest. All of the Gold packages (3000 €) were purchased within one minute. Silver packages (1500 €) and Bronze packages (750 €) were all purchased within four minutes and 35 minutes, respectively.</p>\n<p>&#8220;Sponsor packages tend to go in a few hours whenever there’s a WordCamp in Finland, largely thanks to our communications team and the fact that most companies involved with WordPress follow the conversations on our local Slack/Twitter where these things get announced,&#8221; co-organizer Niko Pettersen said. &#8220;But this must have been a record even for us. WordCamp Nordic seems to be drawing a lot of interest.&#8221;</p>\n<p>The <a href=\"https://2019.nordic.wordcamp.org/call-for-speakers/\" rel=\"noopener noreferrer\" target=\"_blank\">call for speakers</a> opened on November 7 and submissions close January 7, 2019. All of the sessions will be held in English and the camp is planning to have two tracks. Those interested to speak may apply for a long talk (40 minutes) or a lightning talk (15 minutes). Selections will be made by mid-January and speakers will be announced in February. Follow <a href=\"https://twitter.com/WordCampNordic\" rel=\"noopener noreferrer\" target=\"_blank\">@WordCampNordic</a> for all the latest news from the event.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 13 Nov 2018 00:30:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"WPTavern: WP GDPR Compliance Plugin Patches Privilege Escalation Vulnerability\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85459\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"https://wptavern.com/wp-gdpr-compliance-plugin-patches-privilege-escalation-vulnerability\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5052:\"<p>At the end of last week, a plugin called <a href=\"https://wordpress.org/plugins/wp-gdpr-compliance/\" rel=\"noopener noreferrer\" target=\"_blank\">WP GDPR Compliance</a> sent out a security update for a privilege escalation vulnerability that was reported to the WordPress Plugin Directory team on November 6. The plugin was temporarily removed and then reinstated after the issues were patched within 24 hours by its creators, <a href=\"https://www.van-ons.nl/\" rel=\"noopener noreferrer\" target=\"_blank\">Van Ons</a>, a WordPress development shop based in Amsterdam.</p>\n<p>The changelog for the most recent release states that previous versions are vulnerable to SQL injection due to &#8220;wrong handling of possible user input in combination with unsafe unserialization.&#8221; The fixes are in version 1.4.3, which includes the following:</p>\n<ul>\n<li>Security fix: Removed base64_decode() function</li>\n<li>Security fix: Correctly escape input in $wpdb->prepare() function</li>\n<li>Security fix: Only allow modifying WordPress options used by the plugin and by the user capabilities</li>\n</ul>\n<p>Van Ons said they requested the Plugin Directory team do a forced update but they said it was not an option in this case.</p>\n<p><a href=\"https://wordpress.org/plugins/wp-gdpr-compliance/\" rel=\"noopener noreferrer\" target=\"_blank\">WP GDPR Compliance</a> has more than 100,000 active installs. According to Wordfence, the vulnerability is being actively exploited in the wild and many users are reporting new administrator accounts being created on their affected sites. The <a href=\"https://www.wordfence.com/blog/2018/11/privilege-escalation-flaw-in-wp-gdpr-compliance-plugin-exploited-in-the-wild/\">Wordfence blog</a> has a breakdown of how attackers are taking advantage of these sites:</p>\n<blockquote><p>We’ve already begun seeing cases of live sites infected through this attack vector. In these cases, the ability to update arbitrary options values is being used to install new administrator accounts onto the impacted sites.</p>\n<p>By leveraging this flaw to set the users_can_register option to 1, and changing the default_role of new users to “administrator”, attackers can simply fill out the form at /wp-login.php?action=register and immediately access a privileged account. From this point, they can change these options back to normal and install a malicious plugin or theme containing a web shell or other malware to further infect the victim site.</p></blockquote>\n<p>Wordfence has seen multiple malicious administrator accounts present on sites that have been compromised, with variations of the username t2trollherten. Several WP GDPR Compliance plugin users have commented on the Wordfence post saying they were victims of the exploit, having found new admin users with a backdoor and file injections added.</p>\n<p>The plugin has its own <a href=\"https://www.wpgdprc.com/\" rel=\"noopener noreferrer\" target=\"_blank\">website</a> where the vulnerability was announced. Its creators recommend that anyone who didn&#8217;t update right away on November 7, 2018, should look for changes in their databases. The most obvious symptom of attack is likely to be new users with administrator privileges. Any unrecognized users should be deleted. They also recommend restoring a complete backup of the site before November 6 and then updating to version 1.4.3 right away.</p>\n<p>The WP GDPR Compliance plugin lets users add a GDPR checkbox to Contact Form 7, Gravity Forms, WooCommerce, and WordPress comments. It allows visitors and customers to opt into allowing the site to handle their personal data for a defined purpose. It also allows visitors to request data stored in the website&#8217;s database through a Data Request page that allows them to request data to be deleted.</p>\n<p>While the name of the plugin includes the word &#8220;compliance,&#8221; users should note that the plugin details includes a disclaimer:</p>\n<p>&#8220;ACTIVATING THIS PLUGIN DOES NOT GUARANTEE YOU FULLY COMPLY WITH GDPR. PLEASE CONTACT A GDPR CONSULTANT OR LAW FIRM TO ASSESS NECESSARY MEASURES.&#8221;</p>\n<p>A relatively new amendment to <a href=\"https://developer.wordpress.org/plugins/wordpress-org/detailed-plugin-guidelines/#9-developers-and-their-plugins-must-not-do-anything-illegal-dishonest-or-morally-offensive\" rel=\"noopener noreferrer\" target=\"_blank\">section 9 of the plugin development guidelines</a> restricts plugin authors from implying that a plugin can create, provide, automate, or guarantee legal compliance. Heather Burns, a member of WordPress Privacy team, worked together with Mika Epstein last April to <a href=\"https://make.wordpress.org/plugins/2018/04/12/legal-compliance-added-to-guidelines/\" rel=\"noopener noreferrer\" target=\"_blank\">put this change into effect</a>. This guideline is especially important for users to remember when a plugin author uses GDPR Compliance in the name of the plugin. It isn&#8217;t a guarantee of compliance, just a useful tool as part of larger plan to protect users&#8217; privacy.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 12 Nov 2018 20:20:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"Akismet: Version 4.1 of the Akismet WordPress Plugin Is Now Available\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.akismet.com/?p=2031\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"https://blog.akismet.com/2018/11/12/version-4-1-of-the-akismet-wordpress-plugin-is-now-available/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:826:\"<p>Version 4.1 of <a href=\"http://wordpress.org/plugins/akismet/\">the Akismet plugin for WordPress</a> is now available and contains the following changes:</p>\n\n<ul><li>We added a WP-CLI method for retrieving Akismet stats: <code>wp akismet stats</code><br /></li><li>Akismet now hooks into the  new &#8220;Personal Data Eraser&#8221; functionality from WordPress 4.9.6 to ensure that any personal data stored by Akismet is erased when requested.<br /></li><li>We&#8217;ve updated the plugin to more quickly clear outdated alert messages.</li></ul>\n\n<p>To upgrade, visit the Updates page of your WordPress dashboard and follow the instructions. If you need to download the plugin zip file directly, links to all versions are available in <a href=\"http://wordpress.org/plugins/akismet/\">the WordPress plugins directory</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 12 Nov 2018 19:51:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Christopher Finke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"WPTavern: Matt Mullenweg Addresses Controversies Surrounding Gutenberg at WordCamp Portland Q&amp;A\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85433\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"https://wptavern.com/matt-mullenweg-addresses-controversies-surrounding-gutenberg-at-wordcamp-portland-qa\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8531:\"<p>Matt Mullenweg joined attendees at WordCamp Portland, OR, for a Q&amp;A session last weekend and the recording is now <a href=\"https://wordpress.tv/2018/11/08/matt-mullenweg-qa-at-wordcamp-portland-2018/\" rel=\"noopener noreferrer\" target=\"_blank\">available on WordPress.tv</a>.</p>\n<p>The first question came from a user who tried Gutenberg and turned it off because of a plugin conflict. She asked if users will have to use Gutenberg when 5.0 is released. Mullenweg said one of the reasons Gutenberg has been tested so early is to give plugin developers time to get their products compatible. He also said that it has been the fastest growing plugin in WordPress&#8217; history, with more than 600,000 installations since it was first made available.</p>\n<p>In response to her question he said users will have the option to use the Classic Editor and that the team is considering updating it to include per-user controls and the possibility to turn it on/off for different post types.</p>\n<p>Subsequent questions went deeper into recent controversies surrounding Gutenberg, which Mullenweg addressed more in depth.</p>\n<p>&#8220;The tough part of any open source project &#8211; there&#8217;s kind of a crucible of open source development which can sometimes be more adversarial and sometimes even acrimonious,&#8221; he said. &#8220;Working within the same company, you can kind of assume everyone is rowing in the same direction. In a wide open source ecosystem, some people might actually want the opposite of what you&#8217;re doing, because it might be in their own economic self-interest, or for any number of reasons.</p>\n<p>&#8220;I liken it much more to being a mayor of a city than being a CEO of a company. I&#8217;ve done WordPress now for 15 years so I&#8217;m pretty used to it. It might seem kind of controversial if you&#8217;re just coming in, but this is not the most controversial thing we have ever brought into WordPress. The last time we had a big fork of WordPress was actually when we brought in WYSIWYG the first time. Maybe there&#8217;s something about messing with the editor that sets people off.&#8221;</p>\n<p>Mullenweg commented on how polarizing Twitter can be as a medium and how that can impact conversations in negatives ways. He said people tend to read the worst into things that have been said and that has been a new challenge during this particular time in WordPress&#8217; history. WordPress tweets are sprinkled into timelines along with politics and current events in a way that can cause people to react differently than if the discussion was held in a trac ticket, for example.</p>\n<p>One attendee asked, &#8220;With Gutenberg there&#8217;s a lot of uncertainty. Where do you see the tipping point where you see people become more favorable to Gutenberg than the Classic Editor?&#8221;</p>\n<p>&#8220;Part of getting these two plugins, Gutenberg and Classic Editor, out early, was that it could remove uncertainty for people,&#8221; Mullenweg said. &#8220;Months before they were released you could kind of choose your path. The hope is that the 5.0 release day is the most anti-climactic thing ever. Because we have over a million sites that have either chosen to not use Gutenberg, which is totally ok, or have already opted in and have been getting these sometimes weekly updates. We have hosts that have been actually been pre-installing, pre-activating Gutenberg with all of their sites.&#8221;</p>\n<p>Mullenweg said hosts that have pre-installed Gutenberg have not reported a higher than normal support load and that it has basically been &#8220;a non-event.&#8221; It&#8217;s the users who are updating to 5.0 after many years of using WordPress who will have the most to learn.</p>\n<p>&#8220;Gutenberg does by some measures five or ten measures more than what you could really accomplish in the classic editor,&#8221; Mullenweg said. &#8220;That also means there&#8217;s more buttons, there&#8217;s more blocks. That is part of the idea &#8211; to open up people&#8217;s flexibility and creativity to do things they would either need code or a crazy theme to do in the past. And now we&#8217;re going to open that up to do WordPress&#8217; mission, which is to democratize publishing and make it accessible to everyone.&#8221;</p>\n<p>Gutenberg&#8217;s current state of accessibility has been a hot topic lately and one attendee asked for his thoughts about the recent discussions. Mullenweg said there is room for improvement in how this aspect of the project was handled and that WordPress can work better across teams in the future:</p>\n<blockquote><p>Accessibility has been core to WordPress from the very beginning. It&#8217;s part of why we started &#8211; adoption of web standards and accessibility things. We&#8217;ve been a member of the web standards project for many many years. We did kind of have some project management fails in this process where we had a team of volunteers that felt like they were disconnected from the rapid development that was happening with Gutenberg. Definitely there were some things we could do better there. In the future I think that we need &#8211; I don&#8217;t know if it makes sense to have separate accessibility as a separate kind of process from the core development. It really needs to be integrated at every single stage. We did do a lot, as Matias did a big long post on it. We&#8217;ve done a ton of keyboard accessibility stuff, there&#8217;s ARIA elements on everything. One of their feedbacks was that we did it wrong, but we did it the best that we knew how to and it&#8217;s been in there for awhile. There&#8217;s been over 200 closed issues from really the very beginning. We also took the opportunity to fix some things that had been poorly accessible in WordPress from the beginning. It&#8217;s not that WordPress is perfectly accessible and all WCAG AA and it&#8217;s reverting. It&#8217;s actually that huge swaths of WP are inaccessible &#8211; they just might not be considered core paths from the current accessibility team but I consider them core.</p></blockquote>\n<p>In response to a question about the future of React in WordPress, Mullenweg went more in depth on the vision he had when he urged the WordPress community to <a href=\"https://wptavern.com/state-of-the-word-2015-javascript-and-api-driven-interfaces-are-the-future-of-wordpress\">learn JavaScript deeply in 2015</a>. At that time he said &#8220;it is the future of the web.&#8221; He described how each block can be a launching point for something else &#8211; via a modal, such as updating settings, doing advanced things with an e-commerce store, zooming in and out of those screens from the editor. This was perhaps the most inspirational part of the Q&amp;A where the potential of Gutenberg shines as bright as it did in the early demos.</p>\n<p>&#8220;The other beautiful thing is that because Gutenberg essentially allows for translation into many different formats,&#8221; Mullenweg said. &#8220;It can publish to your web page, your RSS feed, AMP, blocks can be translated into email for newsletters, there&#8217;s so much that the structured nature of Gutenberg and the semantic HTML it creates and the grammar that&#8217;s used to parse it, can enable for other applications. It becomes a little bit like a lingua franca that perhaps even crosses CMS&#8217;s. There&#8217;s now these new cross-CMS Gutenberg blocks will be possible. It&#8217;s not just WordPress anymore. It may be a JavaScript block that was written for Drupal that you install on your WordPress site. I mean, hot diggity! How would that have ever happened before? That&#8217;s why we took two years off; it&#8217;s why we&#8217;ve had everyone in the world working on this thing.&#8221;</p>\n<p>JavaScript is what makes this cross-platform collaboration possible and it&#8217;s already evident in the work the Drupal Gutenberg contributors are doing, as well as the platform-agnostic Gutenberg Cloud project. When Gutenberg is released in 5.0, it will enable more for WordPress and the web than we can predict right now.</p>\n<p>&#8220;This is not the finish line,&#8221; Mullenweg said. &#8220;5.0 is almost like the starting point. Expect just as much time invested into Gutenberg after the 5.0 release as before &#8211; to get it to that place where we don&#8217;t think it&#8217;s just better than what we have today but it&#8217;s actually like a world-class web-defining experience, which is what we want to create and what you all deserve.&#8221;</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 10 Nov 2018 15:30:46 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"WPTavern: WordPress 5.0 Release Date Update to November 27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=85475\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wptavern.com/wordpress-5-0-release-date-update-to-november-27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2548:\"<p>The WordPress 5.0 release date has been pushed back to November 27. The <a href=\"https://make.wordpress.org/core/2018/10/03/proposed-wordpress-5-0-scope-and-schedule/\" rel=\"noopener noreferrer\" target=\"_blank\">previous schedule</a> outlined the possibility of a slip date where the first target date could slip by up to eight days if necessary.</p>\n<p>&#8220;As discussed during the Core devchat this week, the initial November 19th target date is looking a bit too soon for a release date,&#8221; Gutenberg technical lead Matias Ventura said in today&#8217;s announcement on the <a href=\"https://make.wordpress.org/core/2018/11/09/update-on-5-0-release-schedule/\" rel=\"noopener noreferrer\" target=\"_blank\">make.wordpress.org/core</a> blog. &#8220;After listening to a lot of feedback — as well as looking at current issues, ongoing pull requests, and general progress — we’re going to take an extra week to make sure everything is fully dialed in and the release date is now targeted for November 27th.&#8221;</p>\n<p>Ventura outlined a new plan where beta 4 and beta 5 releases will coincide with Gutenberg 4.3 and 4.4 releases. RC1 is expected to be released November 19. He said contributors will be posting daily high level updates on the current status of the release, including things like open pull requests to be reviewed and outstanding bugs, to the #core-editor channel.</p>\n<p>The announcement also includes a short video demonstration of Gutenberg fully integrated with the new default Twenty Nineteen theme.</p>\n<p></p>\n<p>Given the recent <a href=\"https://wptavern.com/calls-to-delay-wordpress-5-0-increase-developers-cite-usability-concerns-and-numerous-bugs-in-gutenberg\" rel=\"noopener noreferrer\" target=\"_blank\">pushback on the timeline</a> from prominent WordPress developers and business owners, the updated November 27 timeline may still not offer enough time to resolve the issues remaining and allow the ecosystem to prepare training materials that accurately reflect late stage UI changes.</p>\n<p>At a spontaneous Q&amp;A session at WordCamp Portland this weekend, Matt Mullenweg said WordPress 5.0 was branched from 4.9.8 so this release has been tightly wound to the previous one to allow for a more seamless transition.</p>\n<p>The next targeted release day falls on the Tuesday after Cyber Monday, which should be a relief to anyone running a WordPress-powered e-commerce site. If WordPress misses the updated November 27 release date, it will be pushed back to the secondary target date of January 22, 2019.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Nov 2018 20:06:54 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"WPTavern: WPWeekly Episode 337 – Gutenberg User Experiences, Release Timelines, and the Classic Editor\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=85470&preview=true&preview_id=85470\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:109:\"https://wptavern.com/wpweekly-episode-337-gutenberg-user-experiences-release-timelines-and-the-classic-editor\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2142:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I break down what&#8217;s happening with Gutenberg. We discuss our trials and tribulations with the editor, the release timeline, and calls from members of the community to delay WordPress 5.0 until January. We also share details on how long the Classic Editor plugin will be supported. Last but not least, we talk about the possible release strategy of shipping point releases every two weeks after WordPress 5.0 is released.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/how-to-add-an-image-to-a-paragraph-block-in-gutenberg\">How to Add an Image to A Paragraph Block in Gutenberg</a></p>\n<p><a href=\"https://wptavern.com/adding-aligned-images-to-paragraphs-in-gutenberg-is-not-as-tough-as-i-thought\">Adding Aligned Images to Paragraphs in Gutenberg Is Not as Tough as I Thought</a></p>\n<p><a href=\"https://wptavern.com/wordpress-5-0-beta-3-released-rc-1-expected-november-12\">WordPress 5.0 Beta 3 Released, RC 1 Expected November 12</a></p>\n<p><a href=\"https://joost.blog/wordpress-5-0-needs-a-different-timeline/\">WordPress 5.0 needs a different timeline    </a></p>\n<p><a href=\"https://mrwweb.com/wordpress-5-0-is-not-ready/\">WordPress 5.0 is Not Ready</a></p>\n<p><a href=\"https://wptavern.com/classic-editor-plugin-may-be-included-with-5-0-updates-support-window-set-to-end-in-2021\">Classic Editor Plugin May Be Included with 5.0 Updates, Support Window Set to End in 2021</a></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, November 14th 3:00 P.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #337:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Nov 2018 17:21:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 09 Dec 2018 14:04:44 GMT\";s:12:\"content-type\";s:8:\"text/xml\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Sun, 09 Dec 2018 13:45:33 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:9:\"HIT ord 2\";s:16:\"content-encoding\";s:4:\"gzip\";}}s:5:\"build\";s:14:\"20181205034609\";}', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(340, '_transient_timeout_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9', '1544407485', 'no'),
(341, '_transient_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9', '1544364285', 'no'),
(342, '_transient_timeout_dash_v2_88ae138922fe95674369b1cb3d215a2b', '1544407485', 'no'),
(343, '_transient_dash_v2_88ae138922fe95674369b1cb3d215a2b', '<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wordpress.org/news/2018/12/bebo/\'>WordPress 5.0 “Bebo”</a></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wptavern.com/amp-plugin-for-wordpress-version-1-0-introduces-gutenberg-integrated-amp-validation\'>WPTavern: AMP Plugin for WordPress Version 1.0 Introduces Gutenberg-Integrated AMP Validation</a></li><li><a class=\'rsswidget\' href=\'https://wptavern.com/wordpress-5-0-bebo-released-lays-a-foundation-for-the-platforms-future\'>WPTavern: WordPress 5.0 “Bebo” Released, Lays A Foundation for the Platform’s Future</a></li><li><a class=\'rsswidget\' href=\'https://wordpress.org/news/2018/12/bebo/\'>Dev Blog: WordPress 5.0 “Bebo”</a></li></ul></div>', 'no'),
(344, '_site_transient_timeout_community-events-d41d8cd98f00b204e9800998ecf8427e', '1544432270', 'no'),
(345, '_site_transient_community-events-d41d8cd98f00b204e9800998ecf8427e', 'a:2:{s:8:\"location\";a:1:{s:2:\"ip\";b:0;}s:6:\"events\";a:1:{i:0;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:11:\"WordCamp US\";s:3:\"url\";s:29:\"https://2018.us.wordcamp.org/\";s:6:\"meetup\";s:0:\"\";s:10:\"meetup_url\";s:0:\"\";s:4:\"date\";s:19:\"2018-12-07 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:18:\"Nashville, TN, USA\";s:7:\"country\";s:2:\"US\";s:8:\"latitude\";d:36.15660849999999726378518971614539623260498046875;s:9:\"longitude\";d:-86.7784908999999942125214147381484508514404296875;}}}}', 'no'),
(346, '_transient_timeout_plugin_slugs', '1544465039', 'no'),
(347, '_transient_plugin_slugs', 'a:4:{i:0;s:19:\"akismet/akismet.php\";i:1;s:9:\"hello.php\";i:2;s:21:\"submit-code/index.php\";i:3;s:33:\"theme-my-login/theme-my-login.php\";}', 'no'),
(348, '_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a', '1544375284', 'no'),
(349, '_site_transient_poptags_40cd750bba9870f18aada2478b24840a', 'O:8:\"stdClass\":100:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";i:4527;}s:11:\"woocommerce\";a:3:{s:4:\"name\";s:11:\"woocommerce\";s:4:\"slug\";s:11:\"woocommerce\";s:5:\"count\";i:3161;}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";i:2602;}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";i:2462;}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";i:1891;}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";i:1698;}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";i:1690;}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";i:1460;}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";i:1413;}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";i:1413;}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";i:1410;}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";i:1343;}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";i:1284;}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";i:1268;}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";i:1124;}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";i:1081;}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";i:1067;}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";i:1044;}s:9:\"ecommerce\";a:3:{s:4:\"name\";s:9:\"ecommerce\";s:4:\"slug\";s:9:\"ecommerce\";s:5:\"count\";i:954;}s:5:\"login\";a:3:{s:4:\"name\";s:5:\"login\";s:4:\"slug\";s:5:\"login\";s:5:\"count\";i:907;}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";i:838;}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";i:823;}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";i:813;}s:8:\"security\";a:3:{s:4:\"name\";s:8:\"security\";s:4:\"slug\";s:8:\"security\";s:5:\"count\";i:744;}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";i:716;}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";i:706;}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";i:700;}s:6:\"slider\";a:3:{s:4:\"name\";s:6:\"slider\";s:4:\"slug\";s:6:\"slider\";s:5:\"count\";i:698;}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";i:690;}s:10:\"e-commerce\";a:3:{s:4:\"name\";s:10:\"e-commerce\";s:4:\"slug\";s:10:\"e-commerce\";s:5:\"count\";i:673;}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";i:671;}s:9:\"analytics\";a:3:{s:4:\"name\";s:9:\"analytics\";s:4:\"slug\";s:9:\"analytics\";s:5:\"count\";i:670;}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";i:652;}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";i:647;}s:4:\"form\";a:3:{s:4:\"name\";s:4:\"form\";s:4:\"slug\";s:4:\"form\";s:5:\"count\";i:629;}s:6:\"search\";a:3:{s:4:\"name\";s:6:\"search\";s:4:\"slug\";s:6:\"search\";s:5:\"count\";i:629;}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";i:620;}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"ajax\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";i:611;}s:4:\"menu\";a:3:{s:4:\"name\";s:4:\"menu\";s:4:\"slug\";s:4:\"menu\";s:5:\"count\";i:609;}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";i:602;}s:5:\"embed\";a:3:{s:4:\"name\";s:5:\"embed\";s:4:\"slug\";s:5:\"embed\";s:5:\"count\";i:574;}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";i:558;}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";i:550;}s:3:\"css\";a:3:{s:4:\"name\";s:3:\"css\";s:4:\"slug\";s:3:\"css\";s:5:\"count\";i:549;}s:6:\"editor\";a:3:{s:4:\"name\";s:6:\"editor\";s:4:\"slug\";s:6:\"editor\";s:5:\"count\";i:543;}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";i:539;}s:5:\"share\";a:3:{s:4:\"name\";s:5:\"share\";s:4:\"slug\";s:5:\"share\";s:5:\"count\";i:528;}s:5:\"theme\";a:3:{s:4:\"name\";s:5:\"theme\";s:4:\"slug\";s:5:\"theme\";s:5:\"count\";i:519;}s:7:\"comment\";a:3:{s:4:\"name\";s:7:\"comment\";s:4:\"slug\";s:7:\"comment\";s:5:\"count\";i:519;}s:12:\"contact-form\";a:3:{s:4:\"name\";s:12:\"contact form\";s:4:\"slug\";s:12:\"contact-form\";s:5:\"count\";i:516;}s:10:\"responsive\";a:3:{s:4:\"name\";s:10:\"responsive\";s:4:\"slug\";s:10:\"responsive\";s:5:\"count\";i:512;}s:9:\"dashboard\";a:3:{s:4:\"name\";s:9:\"dashboard\";s:4:\"slug\";s:9:\"dashboard\";s:5:\"count\";i:507;}s:6:\"custom\";a:3:{s:4:\"name\";s:6:\"custom\";s:4:\"slug\";s:6:\"custom\";s:5:\"count\";i:496;}s:10:\"categories\";a:3:{s:4:\"name\";s:10:\"categories\";s:4:\"slug\";s:10:\"categories\";s:5:\"count\";i:490;}s:9:\"affiliate\";a:3:{s:4:\"name\";s:9:\"affiliate\";s:4:\"slug\";s:9:\"affiliate\";s:5:\"count\";i:490;}s:3:\"ads\";a:3:{s:4:\"name\";s:3:\"ads\";s:4:\"slug\";s:3:\"ads\";s:5:\"count\";i:483;}s:4:\"tags\";a:3:{s:4:\"name\";s:4:\"tags\";s:4:\"slug\";s:4:\"tags\";s:5:\"count\";i:468;}s:6:\"button\";a:3:{s:4:\"name\";s:6:\"button\";s:4:\"slug\";s:6:\"button\";s:5:\"count\";i:465;}s:4:\"user\";a:3:{s:4:\"name\";s:4:\"user\";s:4:\"slug\";s:4:\"user\";s:5:\"count\";i:462;}s:7:\"contact\";a:3:{s:4:\"name\";s:7:\"contact\";s:4:\"slug\";s:7:\"contact\";s:5:\"count\";i:454;}s:6:\"mobile\";a:3:{s:4:\"name\";s:6:\"mobile\";s:4:\"slug\";s:6:\"mobile\";s:5:\"count\";i:450;}s:3:\"api\";a:3:{s:4:\"name\";s:3:\"api\";s:4:\"slug\";s:3:\"api\";s:5:\"count\";i:447;}s:7:\"payment\";a:3:{s:4:\"name\";s:7:\"payment\";s:4:\"slug\";s:7:\"payment\";s:5:\"count\";i:441;}s:5:\"users\";a:3:{s:4:\"name\";s:5:\"users\";s:4:\"slug\";s:5:\"users\";s:5:\"count\";i:427;}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";i:427;}s:6:\"events\";a:3:{s:4:\"name\";s:6:\"events\";s:4:\"slug\";s:6:\"events\";s:5:\"count\";i:420;}s:5:\"stats\";a:3:{s:4:\"name\";s:5:\"stats\";s:4:\"slug\";s:5:\"stats\";s:5:\"count\";i:418;}s:9:\"slideshow\";a:3:{s:4:\"name\";s:9:\"slideshow\";s:4:\"slug\";s:9:\"slideshow\";s:5:\"count\";i:417;}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";i:412;}s:10:\"navigation\";a:3:{s:4:\"name\";s:10:\"navigation\";s:4:\"slug\";s:10:\"navigation\";s:5:\"count\";i:398;}s:10:\"statistics\";a:3:{s:4:\"name\";s:10:\"statistics\";s:4:\"slug\";s:10:\"statistics\";s:5:\"count\";i:391;}s:15:\"payment-gateway\";a:3:{s:4:\"name\";s:15:\"payment gateway\";s:4:\"slug\";s:15:\"payment-gateway\";s:5:\"count\";i:389;}s:8:\"calendar\";a:3:{s:4:\"name\";s:8:\"calendar\";s:4:\"slug\";s:8:\"calendar\";s:5:\"count\";i:380;}s:4:\"chat\";a:3:{s:4:\"name\";s:4:\"chat\";s:4:\"slug\";s:4:\"chat\";s:5:\"count\";i:373;}s:4:\"news\";a:3:{s:4:\"name\";s:4:\"news\";s:4:\"slug\";s:4:\"news\";s:5:\"count\";i:373;}s:5:\"popup\";a:3:{s:4:\"name\";s:5:\"popup\";s:4:\"slug\";s:5:\"popup\";s:5:\"count\";i:372;}s:10:\"shortcodes\";a:3:{s:4:\"name\";s:10:\"shortcodes\";s:4:\"slug\";s:10:\"shortcodes\";s:5:\"count\";i:371;}s:9:\"marketing\";a:3:{s:4:\"name\";s:9:\"marketing\";s:4:\"slug\";s:9:\"marketing\";s:5:\"count\";i:371;}s:12:\"social-media\";a:3:{s:4:\"name\";s:12:\"social media\";s:4:\"slug\";s:12:\"social-media\";s:5:\"count\";i:358;}s:7:\"plugins\";a:3:{s:4:\"name\";s:7:\"plugins\";s:4:\"slug\";s:7:\"plugins\";s:5:\"count\";i:355;}s:10:\"newsletter\";a:3:{s:4:\"name\";s:10:\"newsletter\";s:4:\"slug\";s:10:\"newsletter\";s:5:\"count\";i:355;}s:9:\"multisite\";a:3:{s:4:\"name\";s:9:\"multisite\";s:4:\"slug\";s:9:\"multisite\";s:5:\"count\";i:353;}s:4:\"code\";a:3:{s:4:\"name\";s:4:\"code\";s:4:\"slug\";s:4:\"code\";s:5:\"count\";i:346;}s:4:\"meta\";a:3:{s:4:\"name\";s:4:\"meta\";s:4:\"slug\";s:4:\"meta\";s:5:\"count\";i:343;}s:3:\"url\";a:3:{s:4:\"name\";s:3:\"url\";s:4:\"slug\";s:3:\"url\";s:5:\"count\";i:341;}s:4:\"list\";a:3:{s:4:\"name\";s:4:\"list\";s:4:\"slug\";s:4:\"list\";s:5:\"count\";i:338;}s:5:\"forms\";a:3:{s:4:\"name\";s:5:\"forms\";s:4:\"slug\";s:5:\"forms\";s:5:\"count\";i:336;}s:8:\"redirect\";a:3:{s:4:\"name\";s:8:\"redirect\";s:4:\"slug\";s:8:\"redirect\";s:5:\"count\";i:333;}s:11:\"advertising\";a:3:{s:4:\"name\";s:11:\"advertising\";s:4:\"slug\";s:11:\"advertising\";s:5:\"count\";i:316;}s:11:\"performance\";a:3:{s:4:\"name\";s:11:\"performance\";s:4:\"slug\";s:11:\"performance\";s:5:\"count\";i:315;}s:12:\"notification\";a:3:{s:4:\"name\";s:12:\"notification\";s:4:\"slug\";s:12:\"notification\";s:5:\"count\";i:314;}s:16:\"custom-post-type\";a:3:{s:4:\"name\";s:16:\"custom post type\";s:4:\"slug\";s:16:\"custom-post-type\";s:5:\"count\";i:312;}s:6:\"simple\";a:3:{s:4:\"name\";s:6:\"simple\";s:4:\"slug\";s:6:\"simple\";s:5:\"count\";i:310;}s:14:\"contact-form-7\";a:3:{s:4:\"name\";s:14:\"contact form 7\";s:4:\"slug\";s:14:\"contact-form-7\";s:5:\"count\";i:307;}s:16:\"google-analytics\";a:3:{s:4:\"name\";s:16:\"google analytics\";s:4:\"slug\";s:16:\"google-analytics\";s:5:\"count\";i:307;}s:8:\"tracking\";a:3:{s:4:\"name\";s:8:\"tracking\";s:4:\"slug\";s:8:\"tracking\";s:5:\"count\";i:304;}s:3:\"tag\";a:3:{s:4:\"name\";s:3:\"tag\";s:4:\"slug\";s:3:\"tag\";s:5:\"count\";i:304;}s:4:\"html\";a:3:{s:4:\"name\";s:4:\"html\";s:4:\"slug\";s:4:\"html\";s:5:\"count\";i:304;}s:7:\"adsense\";a:3:{s:4:\"name\";s:7:\"adsense\";s:4:\"slug\";s:7:\"adsense\";s:5:\"count\";i:303;}s:6:\"author\";a:3:{s:4:\"name\";s:6:\"author\";s:4:\"slug\";s:6:\"author\";s:5:\"count\";i:299;}}', 'no'),
(354, 'theme_mods_ribbon-lite', 'a:8:{i:0;b:0;s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:2;}s:18:\"custom_css_post_id\";i:-1;s:16:\"header_textcolor\";s:6:\"4d4d4d\";s:16:\"background_color\";s:6:\"ffffff\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1544366476;s:4:\"data\";a:6:{s:19:\"wp_inactive_widgets\";a:5:{i:0;s:14:\"recent-posts-2\";i:1;s:17:\"recent-comments-2\";i:2;s:10:\"archives-2\";i:3;s:12:\"categories-2\";i:4;s:6:\"meta-2\";}s:7:\"sidebar\";a:1:{i:0;s:8:\"search-2\";}s:13:\"widget-header\";a:0:{}s:12:\"footer-first\";a:0:{}s:13:\"footer-second\";a:0:{}s:12:\"footer-third\";a:0:{}}}s:11:\"custom_logo\";s:0:\"\";s:12:\"header_image\";s:13:\"remove-header\";}', 'yes'),
(355, 'widget_social-profile-icons', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(373, 'theme_mods_twentyfifteen', 'a:3:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:2;}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1544366509;s:4:\"data\";a:6:{s:19:\"wp_inactive_widgets\";a:5:{i:0;s:14:\"recent-posts-2\";i:1;s:17:\"recent-comments-2\";i:2;s:10:\"archives-2\";i:3;s:12:\"categories-2\";i:4;s:6:\"meta-2\";}s:7:\"sidebar\";a:1:{i:0;s:8:\"search-2\";}s:13:\"widget-header\";a:0:{}s:12:\"footer-first\";a:0:{}s:13:\"footer-second\";a:0:{}s:12:\"footer-third\";a:0:{}}}}', 'yes'),
(376, 'theme_switched_via_customizer', '', 'yes'),
(377, 'customize_stashed_theme_mods', 'a:0:{}', 'no'),
(379, '_transient_twentyfifteen_categories', '2', 'yes'),
(386, 'WPLANG', '', 'yes'),
(387, 'new_admin_email', 'minhduc2521997@gmail.com', 'yes'),
(398, 'category_children', 'a:2:{i:7;a:4:{i:0;i:1;i:1;i:3;i:2;i:4;i:3;i:5;}i:6;a:1:{i:0;i:8;}}', 'yes'),
(413, 'widget_theme-my-login', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes'),
(414, '_tml_installed_at', '1544397935', 'no'),
(415, '_tml_updated_at', '1544397935', 'no'),
(416, '_tml_version', '7.0.11', 'no'),
(417, '_site_transient_timeout_tml_extensions_feed-cae96a2d942fdf2699534023b6a11d31', '1544415966', 'no'),
(418, '_site_transient_tml_extensions_feed-cae96a2d942fdf2699534023b6a11d31', 'a:10:{i:0;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:1027;s:4:\"slug\";s:6:\"social\";s:5:\"title\";s:6:\"Social\";s:11:\"create_date\";s:19:\"2018-09-27 01:27:24\";s:13:\"modified_date\";s:19:\"2018-10-31 12:16:55\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:43:\"https://thememylogin.com/extensions/social/\";s:7:\"content\";s:300:\"Allow your users to log in to your site with their favorite social providers.\r\n<h3>Features</h3>\r\n<ul>\r\n 	<li>Allow users to log in with Facebook</li>\r\n 	<li>Allow users to log in with Twitter</li>\r\n 	<li>Allow users to log in with Google</li>\r\n 	<li>Names are also populated, if provided</li>\r\n</ul>\";s:7:\"excerpt\";s:77:\"Allow your users to log in to your site with their favorite social providers.\";s:9:\"thumbnail\";s:59:\"https://thememylogin.com/app/uploads/edd/2018/06/social.png\";s:8:\"category\";b:0;s:4:\"tags\";b:0;}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"15.00\";s:8:\"2-5sites\";s:5:\"30.00\";s:14:\"unlimitedsites\";s:5:\"45.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.0.1\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:1;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:82070;s:4:\"slug\";s:3:\"2fa\";s:5:\"title\";s:3:\"2FA\";s:11:\"create_date\";s:19:\"2018-07-20 11:00:05\";s:13:\"modified_date\";s:19:\"2018-07-25 11:55:32\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:40:\"https://thememylogin.com/extensions/2fa/\";s:7:\"content\";s:394:\"Give your users peace of mind by allowing them to enable 2-factor authentication (2FA) on their account.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Users can opt-in to two-factor authentication</li>\r\n 	<li>Once enabled, users will need to enter a code from an app on their mobile device to log in</li>\r\n 	<li>Supports multiple authenticator apps, including Google Authenticator, Authy and more</li>\r\n</ul>\";s:7:\"excerpt\";s:65:\"Allow users to enable two-factor authentication on their account.\";s:9:\"thumbnail\";s:56:\"https://thememylogin.com/app/uploads/edd/2018/07/2fa.png\";s:8:\"category\";b:0;s:4:\"tags\";b:0;}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"10.00\";s:8:\"2-5sites\";s:5:\"25.00\";s:14:\"unlimitedsites\";s:5:\"40.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:3:\"1.0\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:2;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:103;s:4:\"slug\";s:12:\"restrictions\";s:5:\"title\";s:12:\"Restrictions\";s:11:\"create_date\";s:19:\"2018-06-01 15:07:21\";s:13:\"modified_date\";s:19:\"2018-09-13 13:19:21\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:49:\"https://thememylogin.com/extensions/restrictions/\";s:7:\"content\";s:915:\"With the Restrictions extension, you can restrict your entire site, or pieces of it in a highly configurable way.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Restrict entire site from unauthenticated users</li>\r\n 	<li>Require users to be logged in to view specific posts or pages</li>\r\n 	<li>Require specific roles to view specific posts or pages</li>\r\n 	<li>Configure nav menu items to display only if a user is logged or not logged in</li>\r\n 	<li>Configure nav menu items to display only for specified user roles</li>\r\n 	<li>Configure widgets to display only if a user is logged or not logged in</li>\r\n 	<li>Configure widgets to display only for specified user roles</li>\r\n 	<li>Use the `[tml-require-role]` shortcode to restrict content within a post or page to a specific role</li>\r\n 	<li>Use the `[tml-require-user]` shortcode to restrict content within a post or page to a specific user or all logged in users</li>\r\n</ul>\";s:7:\"excerpt\";s:78:\"Restrict posts, pages, pieces of content and menu items by user role and more.\";s:9:\"thumbnail\";s:65:\"https://thememylogin.com/app/uploads/edd/2018/06/restrictions.png\";s:8:\"category\";b:0;s:4:\"tags\";b:0;}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"10.00\";s:8:\"2-5sites\";s:5:\"25.00\";s:14:\"unlimitedsites\";s:5:\"40.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:3:\"1.1\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:3;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:83;s:4:\"slug\";s:13:\"legacy-bundle\";s:5:\"title\";s:13:\"Legacy Bundle\";s:11:\"create_date\";s:19:\"2018-06-01 10:10:23\";s:13:\"modified_date\";s:19:\"2018-07-06 13:49:22\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:50:\"https://thememylogin.com/extensions/legacy-bundle/\";s:7:\"content\";s:634:\"Get all 6 \"legacy\" extensions for a <strong>30% discount</strong>. This bundle includes the following extensions:\r\n<ul>\r\n 	<li><a href=\"https://thememylogin.com/extensions/moderation/\">Moderation</a></li>\r\n 	<li><a href=\"https://thememylogin.com/extensions/notifications/\">Notifications</a></li>\r\n 	<li><a href=\"https://thememylogin.com/extensions/profiles/\">Profiles</a></li>\r\n 	<li><a href=\"https://thememylogin.com/extensions/recaptcha/\">reCAPTCHA</a></li>\r\n 	<li><a href=\"https://thememylogin.com/extensions/redirection/\">Redirection</a></li>\r\n 	<li><a href=\"https://thememylogin.com/extensions/security/\">Security</a></li>\r\n</ul>\";s:7:\"excerpt\";s:51:\"Get all six \"legacy\" extensions for a 30% discount.\";s:9:\"thumbnail\";s:66:\"https://thememylogin.com/app/uploads/edd/2018/06/legacy-bundle.png\";s:8:\"category\";b:0;s:4:\"tags\";b:0;}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"49.00\";s:8:\"2-5sites\";s:5:\"70.00\";s:14:\"unlimitedsites\";s:6:\"175.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:0;s:7:\"version\";s:0:\"\";s:8:\"exp_unit\";s:4:\"days\";s:10:\"exp_length\";s:0:\"\";}}i:4;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:38;s:4:\"slug\";s:10:\"moderation\";s:5:\"title\";s:10:\"Moderation\";s:11:\"create_date\";s:19:\"2018-05-28 04:15:16\";s:13:\"modified_date\";s:19:\"2018-07-31 11:07:06\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:47:\"https://thememylogin.com/extensions/moderation/\";s:7:\"content\";s:769:\"Cut down unwanted spam registrations by requiring your users to activate their account by clicking a link sent to their email address. Take it a step further and require admin approval before allowing users access to your site. Double the protection by requiring both.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Require new users to confirm their email address in order to activate their account</li>\r\n 	<li>Administrators can resend activation emails to remind users to activate their account</li>\r\n 	<li>Users can request to resend their activation email if they attempt to login while pending activation</li>\r\n 	<li>Require new users to be approved by an administrator</li>\r\n 	<li>Require new users to confirm their email address and be approved by an administrator</li>\r\n</ul>\";s:7:\"excerpt\";s:69:\"Require users to confirm their email address or be manually approved.\";s:9:\"thumbnail\";s:63:\"https://thememylogin.com/app/uploads/edd/2018/05/moderation.png\";s:8:\"category\";b:0;s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":10:{s:7:\"term_id\";i:7;s:4:\"name\";s:6:\"legacy\";s:4:\"slug\";s:6:\"legacy\";s:10:\"term_group\";i:0;s:16:\"term_taxonomy_id\";i:7;s:8:\"taxonomy\";s:12:\"download_tag\";s:11:\"description\";s:0:\"\";s:6:\"parent\";i:0;s:5:\"count\";i:6;s:6:\"filter\";s:3:\"raw\";}}}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"10.00\";s:8:\"2-5sites\";s:5:\"25.00\";s:14:\"unlimitedsites\";s:5:\"40.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.0.2\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:5;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:55;s:4:\"slug\";s:8:\"security\";s:5:\"title\";s:8:\"Security\";s:11:\"create_date\";s:19:\"2018-05-28 01:31:46\";s:13:\"modified_date\";s:19:\"2018-07-31 11:06:48\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:45:\"https://thememylogin.com/extensions/security/\";s:7:\"content\";s:518:\"Help secure your website by throttling and blocking IP addresses after a predetermined amount of failed login attempts.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Set the number of failed attempts required for lockout</li>\r\n 	<li>Set the period of time the failed attempts must span to be locked out</li>\r\n 	<li>Set the duration of the lockout</li>\r\n 	<li>Automatically lockout invalid usernames</li>\r\n 	<li>Manually lock and unlock specific users</li>\r\n 	<li>Disable wp-login.php</li>\r\n 	<li>Enforce strong passwords</li>\r\n</ul>\";s:7:\"excerpt\";s:53:\"Help secure your website with brute force protection.\";s:9:\"thumbnail\";s:61:\"https://thememylogin.com/app/uploads/edd/2018/05/security.png\";s:8:\"category\";b:0;s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":10:{s:7:\"term_id\";i:7;s:4:\"name\";s:6:\"legacy\";s:4:\"slug\";s:6:\"legacy\";s:10:\"term_group\";i:0;s:16:\"term_taxonomy_id\";i:7;s:8:\"taxonomy\";s:12:\"download_tag\";s:11:\"description\";s:0:\"\";s:6:\"parent\";i:0;s:5:\"count\";i:6;s:6:\"filter\";s:3:\"raw\";}}}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"10.00\";s:8:\"2-5sites\";s:5:\"25.00\";s:14:\"unlimitedsites\";s:5:\"40.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.1.2\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:6;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:52;s:4:\"slug\";s:11:\"redirection\";s:5:\"title\";s:11:\"Redirection\";s:11:\"create_date\";s:19:\"2018-05-28 01:29:28\";s:13:\"modified_date\";s:19:\"2018-11-20 15:01:49\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:48:\"https://thememylogin.com/extensions/redirection/\";s:7:\"content\";s:422:\"Don\'t want your users being redirected to the Dashboard upon login? Want to redirect them back where they came from instead? Want to send Subscribers to one place and Authors to another? You need the Redirection extension.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Specify where users are redirected upon login</li>\r\n 	<li>Specify where users are redirected upon logout</li>\r\n 	<li>Manage redirection rules per user role</li>\r\n</ul>\";s:7:\"excerpt\";s:57:\"Redirect users upon login and logout based on their role.\";s:9:\"thumbnail\";s:64:\"https://thememylogin.com/app/uploads/edd/2018/05/redirection.png\";s:8:\"category\";b:0;s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":10:{s:7:\"term_id\";i:7;s:4:\"name\";s:6:\"legacy\";s:4:\"slug\";s:6:\"legacy\";s:10:\"term_group\";i:0;s:16:\"term_taxonomy_id\";i:7;s:8:\"taxonomy\";s:12:\"download_tag\";s:11:\"description\";s:0:\"\";s:6:\"parent\";i:0;s:5:\"count\";i:6;s:6:\"filter\";s:3:\"raw\";}}}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"10.00\";s:8:\"2-5sites\";s:5:\"25.00\";s:14:\"unlimitedsites\";s:5:\"40.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.0.2\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:7;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:49;s:4:\"slug\";s:9:\"recaptcha\";s:5:\"title\";s:9:\"reCAPTCHA\";s:11:\"create_date\";s:19:\"2018-05-28 01:27:10\";s:13:\"modified_date\";s:19:\"2018-07-31 11:04:25\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:46:\"https://thememylogin.com/extensions/recaptcha/\";s:7:\"content\";s:320:\"Keep spam bots at bay by utilizing Google reCAPTCHA on your registration and login forms.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Require reCAPTCHA on your registration and/or login form</li>\r\n 	<li>Choose your reCAPTCHA theme</li>\r\n 	<li>reCAPTCHA will be localized if the translation exists for the selected locale</li>\r\n</ul>\";s:7:\"excerpt\";s:69:\"Enable Google reCAPTCHA support on your registration and login forms.\";s:9:\"thumbnail\";s:62:\"https://thememylogin.com/app/uploads/edd/2018/05/recaptcha.png\";s:8:\"category\";b:0;s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":10:{s:7:\"term_id\";i:7;s:4:\"name\";s:6:\"legacy\";s:4:\"slug\";s:6:\"legacy\";s:10:\"term_group\";i:0;s:16:\"term_taxonomy_id\";i:7;s:8:\"taxonomy\";s:12:\"download_tag\";s:11:\"description\";s:0:\"\";s:6:\"parent\";i:0;s:5:\"count\";i:6;s:6:\"filter\";s:3:\"raw\";}}}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"10.00\";s:8:\"2-5sites\";s:5:\"25.00\";s:14:\"unlimitedsites\";s:5:\"40.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.0.1\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:8;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:46;s:4:\"slug\";s:8:\"profiles\";s:5:\"title\";s:8:\"Profiles\";s:11:\"create_date\";s:19:\"2018-05-28 01:24:30\";s:13:\"modified_date\";s:19:\"2018-07-31 11:01:37\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:45:\"https://thememylogin.com/extensions/profiles/\";s:7:\"content\";s:495:\"If you\'re already utilizing Theme My Login to keep your login experience within your theme, you should be using the Profiles extension to keep your user\'s profile within it as well. If Theme My Login is the peanut butter, the Profiles extension is the jelly - they just go together.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Set which roles get front-end profiles</li>\r\n 	<li>Restrict specific roles from the admin area</li>\r\n 	<li>Designed to work with any theme</li>\r\n 	<li>Easily extensible</li>\r\n</ul>\";s:7:\"excerpt\";s:69:\"Allow your users to edit their profile on the front-end of your site.\";s:9:\"thumbnail\";s:61:\"https://thememylogin.com/app/uploads/edd/2018/05/profiles.png\";s:8:\"category\";b:0;s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":10:{s:7:\"term_id\";i:7;s:4:\"name\";s:6:\"legacy\";s:4:\"slug\";s:6:\"legacy\";s:10:\"term_group\";i:0;s:16:\"term_taxonomy_id\";i:7;s:8:\"taxonomy\";s:12:\"download_tag\";s:11:\"description\";s:0:\"\";s:6:\"parent\";i:0;s:5:\"count\";i:6;s:6:\"filter\";s:3:\"raw\";}}}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"15.00\";s:8:\"2-5sites\";s:5:\"30.00\";s:14:\"unlimitedsites\";s:5:\"45.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.0.6\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}i:9;O:8:\"stdClass\":3:{s:4:\"info\";O:8:\"stdClass\":12:{s:2:\"id\";i:43;s:4:\"slug\";s:13:\"notifications\";s:5:\"title\";s:13:\"Notifications\";s:11:\"create_date\";s:19:\"2018-05-28 01:21:50\";s:13:\"modified_date\";s:19:\"2018-09-27 17:51:48\";s:6:\"status\";s:7:\"publish\";s:4:\"link\";s:50:\"https://thememylogin.com/extensions/notifications/\";s:7:\"content\";s:668:\"Do you like the default notifications that WordPress sends for everything account related? No? Neither do we. With the Notifications extension, you can disable them and create your own. Spruce up your emails by sending them in HTML format. Personalize them by utilizing the many variables available.\r\n<h5>Features</h5>\r\n<ul>\r\n 	<li>Disable default notifications</li>\r\n 	<li>Create custom notifications</li>\r\n 	<li>Send HTML emails</li>\r\n 	<li>Customize who the notification is from</li>\r\n 	<li>Send multiple notifications per action</li>\r\n 	<li>Core actions include: \"New User Registered\", \"New User Created\", \"Lost Password Request\" and \"Password Changed\"</li>\r\n</ul>\";s:7:\"excerpt\";s:64:\"Send users customized notifications when specified events occur.\";s:9:\"thumbnail\";s:66:\"https://thememylogin.com/app/uploads/edd/2018/05/notifications.png\";s:8:\"category\";b:0;s:4:\"tags\";a:1:{i:0;O:8:\"stdClass\":10:{s:7:\"term_id\";i:7;s:4:\"name\";s:6:\"legacy\";s:4:\"slug\";s:6:\"legacy\";s:10:\"term_group\";i:0;s:16:\"term_taxonomy_id\";i:7;s:8:\"taxonomy\";s:12:\"download_tag\";s:11:\"description\";s:0:\"\";s:6:\"parent\";i:0;s:5:\"count\";i:6;s:6:\"filter\";s:3:\"raw\";}}}s:7:\"pricing\";O:8:\"stdClass\":3:{s:10:\"singlesite\";s:5:\"15.00\";s:8:\"2-5sites\";s:5:\"30.00\";s:14:\"unlimitedsites\";s:5:\"45.00\";}s:9:\"licensing\";O:8:\"stdClass\":4:{s:7:\"enabled\";b:1;s:7:\"version\";s:5:\"1.1.1\";s:8:\"exp_unit\";s:5:\"years\";s:10:\"exp_length\";s:1:\"1\";}}}', 'no'),
(419, 'tml_login_type', 'default', 'yes'),
(420, 'tml_registration_type', 'default', 'yes'),
(421, 'tml_user_passwords', '1', 'yes'),
(422, 'tml_auto_login', '1', 'yes'),
(423, 'tml_login_slug', 'login', 'yes'),
(424, 'tml_logout_slug', 'logout', 'yes'),
(425, 'tml_register_slug', 'register', 'yes'),
(426, 'tml_lostpassword_slug', 'lostpassword', 'yes'),
(427, 'tml_resetpass_slug', 'resetpass', 'yes'),
(430, '_tml_dismissed_notices', 'a:1:{i:0;s:20:\"new_extension-social\";}', 'no'),
(444, '_site_transient_update_core', 'O:8:\"stdClass\":4:{s:7:\"updates\";a:2:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.0.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.0.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.0-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.0-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.0\";s:7:\"version\";s:3:\"5.0\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.0\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.0.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.0.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.0-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.0-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.0\";s:7:\"version\";s:3:\"5.0\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.0\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}}s:12:\"last_checked\";i:1544387537;s:15:\"version_checked\";s:5:\"4.9.8\";s:12:\"translations\";a:0:{}}', 'no'),
(562, '_site_transient_update_themes', 'O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1544387539;s:7:\"checked\";a:5:{s:15:\"my-vcard-resume\";s:3:\"1.3\";s:11:\"ribbon-lite\";s:5:\"2.0.8\";s:13:\"twentyfifteen\";s:3:\"2.0\";s:15:\"twentyseventeen\";s:3:\"1.7\";s:13:\"twentysixteen\";s:3:\"1.5\";}s:8:\"response\";a:3:{s:13:\"twentyfifteen\";a:4:{s:5:\"theme\";s:13:\"twentyfifteen\";s:11:\"new_version\";s:3:\"2.1\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentyfifteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentyfifteen.2.1.zip\";}s:15:\"twentyseventeen\";a:4:{s:5:\"theme\";s:15:\"twentyseventeen\";s:11:\"new_version\";s:3:\"1.8\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentyseventeen/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentyseventeen.1.8.zip\";}s:13:\"twentysixteen\";a:4:{s:5:\"theme\";s:13:\"twentysixteen\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentysixteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentysixteen.1.6.zip\";}}s:12:\"translations\";a:0:{}}', 'no'),
(563, '_site_transient_update_plugins', 'O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1544387541;s:7:\"checked\";a:4:{s:19:\"akismet/akismet.php\";s:5:\"4.0.8\";s:9:\"hello.php\";s:3:\"1.7\";s:21:\"submit-code/index.php\";s:5:\"1.0.0\";s:33:\"theme-my-login/theme-my-login.php\";s:6:\"7.0.11\";}s:8:\"response\";a:1:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:3:\"4.1\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:54:\"https://downloads.wordpress.org/plugin/akismet.4.1.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:3:\"5.0\";s:12:\"requires_php\";b:0;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:2:{s:9:\"hello.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:25:\"w.org/plugins/hello-dolly\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/hello-dolly.1.6.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=969907\";s:2:\"1x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-128x128.jpg?rev=969907\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:65:\"https://ps.w.org/hello-dolly/assets/banner-772x250.png?rev=478342\";}s:11:\"banners_rtl\";a:0:{}}s:33:\"theme-my-login/theme-my-login.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:28:\"w.org/plugins/theme-my-login\";s:4:\"slug\";s:14:\"theme-my-login\";s:6:\"plugin\";s:33:\"theme-my-login/theme-my-login.php\";s:11:\"new_version\";s:6:\"7.0.11\";s:3:\"url\";s:45:\"https://wordpress.org/plugins/theme-my-login/\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/plugin/theme-my-login.7.0.11.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:67:\"https://ps.w.org/theme-my-login/assets/icon-256x256.png?rev=1891232\";s:2:\"1x\";s:67:\"https://ps.w.org/theme-my-login/assets/icon-128x128.png?rev=1891232\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:70:\"https://ps.w.org/theme-my-login/assets/banner-1544x500.png?rev=1891232\";s:2:\"1x\";s:69:\"https://ps.w.org/theme-my-login/assets/banner-772x250.png?rev=1891232\";}s:11:\"banners_rtl\";a:0:{}}}}', 'no'),
(564, '_site_transient_timeout_theme_roots', '1544390030', 'no'),
(565, '_site_transient_theme_roots', 'a:5:{s:15:\"my-vcard-resume\";s:7:\"/themes\";s:11:\"ribbon-lite\";s:7:\"/themes\";s:13:\"twentyfifteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";}', 'no'),
(572, '_site_transient_timeout_available_translations', '1544400248', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(573, '_site_transient_available_translations', 'a:113:{s:2:\"af\";a:8:{s:8:\"language\";s:2:\"af\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-01 06:22:57\";s:12:\"english_name\";s:9:\"Afrikaans\";s:11:\"native_name\";s:9:\"Afrikaans\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/af.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"af\";i:2;s:3:\"afr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Gaan voort\";}}s:2:\"ar\";a:8:{s:8:\"language\";s:2:\"ar\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-08 00:58:53\";s:12:\"english_name\";s:6:\"Arabic\";s:11:\"native_name\";s:14:\"العربية\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/ar.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:2;s:3:\"ara\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:3:\"ary\";a:8:{s:8:\"language\";s:3:\"ary\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-01-26 15:42:35\";s:12:\"english_name\";s:15:\"Moroccan Arabic\";s:11:\"native_name\";s:31:\"العربية المغربية\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.7/ary.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:3;s:3:\"ary\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"as\";a:8:{s:8:\"language\";s:2:\"as\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-22 18:59:07\";s:12:\"english_name\";s:8:\"Assamese\";s:11:\"native_name\";s:21:\"অসমীয়া\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/as.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"as\";i:2;s:3:\"asm\";i:3;s:3:\"asm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:3:\"azb\";a:8:{s:8:\"language\";s:3:\"azb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-12 20:34:31\";s:12:\"english_name\";s:17:\"South Azerbaijani\";s:11:\"native_name\";s:29:\"گؤنئی آذربایجان\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/azb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:3;s:3:\"azb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"az\";a:8:{s:8:\"language\";s:2:\"az\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-06 00:09:27\";s:12:\"english_name\";s:11:\"Azerbaijani\";s:11:\"native_name\";s:16:\"Azərbaycan dili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/az.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:2;s:3:\"aze\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Davam\";}}s:3:\"bel\";a:8:{s:8:\"language\";s:3:\"bel\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-04 08:43:29\";s:12:\"english_name\";s:10:\"Belarusian\";s:11:\"native_name\";s:29:\"Беларуская мова\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.5/bel.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"be\";i:2;s:3:\"bel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Працягнуць\";}}s:5:\"bg_BG\";a:8:{s:8:\"language\";s:5:\"bg_BG\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-05 11:37:23\";s:12:\"english_name\";s:9:\"Bulgarian\";s:11:\"native_name\";s:18:\"Български\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/bg_BG.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bg\";i:2;s:3:\"bul\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Напред\";}}s:5:\"bn_BD\";a:8:{s:8:\"language\";s:5:\"bn_BD\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2017-10-01 12:57:10\";s:12:\"english_name\";s:7:\"Bengali\";s:11:\"native_name\";s:15:\"বাংলা\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.6/bn_BD.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"bn\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:23:\"এগিয়ে চল.\";}}s:2:\"bo\";a:8:{s:8:\"language\";s:2:\"bo\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-07 07:08:01\";s:12:\"english_name\";s:7:\"Tibetan\";s:11:\"native_name\";s:21:\"བོད་ཡིག\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/bo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bo\";i:2;s:3:\"tib\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"མུ་མཐུད།\";}}s:5:\"bs_BA\";a:8:{s:8:\"language\";s:5:\"bs_BA\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-04 20:20:28\";s:12:\"english_name\";s:7:\"Bosnian\";s:11:\"native_name\";s:8:\"Bosanski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/bs_BA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bs\";i:2;s:3:\"bos\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:2:\"ca\";a:8:{s:8:\"language\";s:2:\"ca\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-29 21:28:23\";s:12:\"english_name\";s:7:\"Catalan\";s:11:\"native_name\";s:7:\"Català\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/ca.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ca\";i:2;s:3:\"cat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:3:\"ceb\";a:8:{s:8:\"language\";s:3:\"ceb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-02 17:25:51\";s:12:\"english_name\";s:7:\"Cebuano\";s:11:\"native_name\";s:7:\"Cebuano\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/ceb.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"ceb\";i:3;s:3:\"ceb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Padayun\";}}s:5:\"cs_CZ\";a:8:{s:8:\"language\";s:5:\"cs_CZ\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-28 17:08:36\";s:12:\"english_name\";s:5:\"Czech\";s:11:\"native_name\";s:9:\"Čeština\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/cs_CZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cs\";i:2;s:3:\"ces\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Pokračovat\";}}s:2:\"cy\";a:8:{s:8:\"language\";s:2:\"cy\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-14 19:51:46\";s:12:\"english_name\";s:5:\"Welsh\";s:11:\"native_name\";s:7:\"Cymraeg\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/cy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cy\";i:2;s:3:\"cym\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Parhau\";}}s:5:\"da_DK\";a:8:{s:8:\"language\";s:5:\"da_DK\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 08:46:24\";s:12:\"english_name\";s:6:\"Danish\";s:11:\"native_name\";s:5:\"Dansk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/da_DK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"da\";i:2;s:3:\"dan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsæt\";}}s:12:\"de_DE_formal\";a:8:{s:8:\"language\";s:12:\"de_DE_formal\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-25 12:30:09\";s:12:\"english_name\";s:15:\"German (Formal)\";s:11:\"native_name\";s:13:\"Deutsch (Sie)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.9.8/de_DE_formal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_DE\";a:8:{s:8:\"language\";s:5:\"de_DE\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-25 13:19:31\";s:12:\"english_name\";s:6:\"German\";s:11:\"native_name\";s:7:\"Deutsch\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/de_DE.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_CH\";a:8:{s:8:\"language\";s:5:\"de_CH\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-07-28 11:47:36\";s:12:\"english_name\";s:20:\"German (Switzerland)\";s:11:\"native_name\";s:17:\"Deutsch (Schweiz)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/de_CH.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:14:\"de_CH_informal\";a:8:{s:8:\"language\";s:14:\"de_CH_informal\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-07-28 11:48:22\";s:12:\"english_name\";s:30:\"German (Switzerland, Informal)\";s:11:\"native_name\";s:21:\"Deutsch (Schweiz, Du)\";s:7:\"package\";s:73:\"https://downloads.wordpress.org/translation/core/4.9.8/de_CH_informal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:3:\"dzo\";a:8:{s:8:\"language\";s:3:\"dzo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-06-29 08:59:03\";s:12:\"english_name\";s:8:\"Dzongkha\";s:11:\"native_name\";s:18:\"རྫོང་ཁ\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/dzo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"dz\";i:2;s:3:\"dzo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:2:\"el\";a:8:{s:8:\"language\";s:2:\"el\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-27 15:33:27\";s:12:\"english_name\";s:5:\"Greek\";s:11:\"native_name\";s:16:\"Ελληνικά\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/el.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"el\";i:2;s:3:\"ell\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Συνέχεια\";}}s:5:\"en_CA\";a:8:{s:8:\"language\";s:5:\"en_CA\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-01 02:03:58\";s:12:\"english_name\";s:16:\"English (Canada)\";s:11:\"native_name\";s:16:\"English (Canada)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/en_CA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_NZ\";a:8:{s:8:\"language\";s:5:\"en_NZ\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-29 04:07:23\";s:12:\"english_name\";s:21:\"English (New Zealand)\";s:11:\"native_name\";s:21:\"English (New Zealand)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/en_NZ.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_AU\";a:8:{s:8:\"language\";s:5:\"en_AU\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-28 23:34:56\";s:12:\"english_name\";s:19:\"English (Australia)\";s:11:\"native_name\";s:19:\"English (Australia)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/en_AU.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_GB\";a:8:{s:8:\"language\";s:5:\"en_GB\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-28 16:14:01\";s:12:\"english_name\";s:12:\"English (UK)\";s:11:\"native_name\";s:12:\"English (UK)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/en_GB.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_ZA\";a:8:{s:8:\"language\";s:5:\"en_ZA\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-09-04 13:34:08\";s:12:\"english_name\";s:22:\"English (South Africa)\";s:11:\"native_name\";s:22:\"English (South Africa)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/en_ZA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"eo\";a:8:{s:8:\"language\";s:2:\"eo\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-09 14:53:42\";s:12:\"english_name\";s:9:\"Esperanto\";s:11:\"native_name\";s:9:\"Esperanto\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/eo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eo\";i:2;s:3:\"epo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Daŭrigi\";}}s:5:\"es_MX\";a:8:{s:8:\"language\";s:5:\"es_MX\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-15 16:32:57\";s:12:\"english_name\";s:16:\"Spanish (Mexico)\";s:11:\"native_name\";s:19:\"Español de México\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/es_MX.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CL\";a:8:{s:8:\"language\";s:5:\"es_CL\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-15 15:46:49\";s:12:\"english_name\";s:15:\"Spanish (Chile)\";s:11:\"native_name\";s:17:\"Español de Chile\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/es_CL.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_ES\";a:8:{s:8:\"language\";s:5:\"es_ES\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-28 16:20:18\";s:12:\"english_name\";s:15:\"Spanish (Spain)\";s:11:\"native_name\";s:8:\"Español\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/es_ES.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_GT\";a:8:{s:8:\"language\";s:5:\"es_GT\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-15 15:03:42\";s:12:\"english_name\";s:19:\"Spanish (Guatemala)\";s:11:\"native_name\";s:21:\"Español de Guatemala\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/es_GT.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CO\";a:8:{s:8:\"language\";s:5:\"es_CO\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-15 23:17:08\";s:12:\"english_name\";s:18:\"Spanish (Colombia)\";s:11:\"native_name\";s:20:\"Español de Colombia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/es_CO.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CR\";a:8:{s:8:\"language\";s:5:\"es_CR\";s:7:\"version\";s:5:\"4.8.3\";s:7:\"updated\";s:19:\"2017-10-01 17:54:52\";s:12:\"english_name\";s:20:\"Spanish (Costa Rica)\";s:11:\"native_name\";s:22:\"Español de Costa Rica\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.3/es_CR.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_PE\";a:8:{s:8:\"language\";s:5:\"es_PE\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-09 09:36:22\";s:12:\"english_name\";s:14:\"Spanish (Peru)\";s:11:\"native_name\";s:17:\"Español de Perú\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/es_PE.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_AR\";a:8:{s:8:\"language\";s:5:\"es_AR\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-27 22:08:38\";s:12:\"english_name\";s:19:\"Spanish (Argentina)\";s:11:\"native_name\";s:21:\"Español de Argentina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/es_AR.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_VE\";a:8:{s:8:\"language\";s:5:\"es_VE\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-10 17:20:09\";s:12:\"english_name\";s:19:\"Spanish (Venezuela)\";s:11:\"native_name\";s:21:\"Español de Venezuela\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/es_VE.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"et\";a:8:{s:8:\"language\";s:2:\"et\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-19 14:11:29\";s:12:\"english_name\";s:8:\"Estonian\";s:11:\"native_name\";s:5:\"Eesti\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.2/et.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"et\";i:2;s:3:\"est\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Jätka\";}}s:2:\"eu\";a:8:{s:8:\"language\";s:2:\"eu\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-12-09 21:12:23\";s:12:\"english_name\";s:6:\"Basque\";s:11:\"native_name\";s:7:\"Euskara\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.2/eu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eu\";i:2;s:3:\"eus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Jarraitu\";}}s:5:\"fa_IR\";a:8:{s:8:\"language\";s:5:\"fa_IR\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-04 08:05:41\";s:12:\"english_name\";s:7:\"Persian\";s:11:\"native_name\";s:10:\"فارسی\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/fa_IR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fa\";i:2;s:3:\"fas\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:2:\"fi\";a:8:{s:8:\"language\";s:2:\"fi\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-05 07:24:22\";s:12:\"english_name\";s:7:\"Finnish\";s:11:\"native_name\";s:5:\"Suomi\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/fi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fi\";i:2;s:3:\"fin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Jatka\";}}s:5:\"fr_CA\";a:8:{s:8:\"language\";s:5:\"fr_CA\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-08 18:24:55\";s:12:\"english_name\";s:15:\"French (Canada)\";s:11:\"native_name\";s:19:\"Français du Canada\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/fr_CA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_FR\";a:8:{s:8:\"language\";s:5:\"fr_FR\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-28 16:02:42\";s:12:\"english_name\";s:15:\"French (France)\";s:11:\"native_name\";s:9:\"Français\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/fr_FR.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"fr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_BE\";a:8:{s:8:\"language\";s:5:\"fr_BE\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-01-31 11:16:06\";s:12:\"english_name\";s:16:\"French (Belgium)\";s:11:\"native_name\";s:21:\"Français de Belgique\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/fr_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:3:\"fur\";a:8:{s:8:\"language\";s:3:\"fur\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2018-01-29 17:32:35\";s:12:\"english_name\";s:8:\"Friulian\";s:11:\"native_name\";s:8:\"Friulian\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.6/fur.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"fur\";i:3;s:3:\"fur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"gd\";a:8:{s:8:\"language\";s:2:\"gd\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-08-23 17:41:37\";s:12:\"english_name\";s:15:\"Scottish Gaelic\";s:11:\"native_name\";s:9:\"Gàidhlig\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/gd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"gd\";i:2;s:3:\"gla\";i:3;s:3:\"gla\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"Lean air adhart\";}}s:5:\"gl_ES\";a:8:{s:8:\"language\";s:5:\"gl_ES\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-02 09:10:15\";s:12:\"english_name\";s:8:\"Galician\";s:11:\"native_name\";s:6:\"Galego\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/gl_ES.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gl\";i:2;s:3:\"glg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"gu\";a:8:{s:8:\"language\";s:2:\"gu\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-09-14 12:33:48\";s:12:\"english_name\";s:8:\"Gujarati\";s:11:\"native_name\";s:21:\"ગુજરાતી\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/gu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gu\";i:2;s:3:\"guj\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:31:\"ચાલુ રાખવું\";}}s:3:\"haz\";a:8:{s:8:\"language\";s:3:\"haz\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-05 00:59:09\";s:12:\"english_name\";s:8:\"Hazaragi\";s:11:\"native_name\";s:15:\"هزاره گی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/haz.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"haz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:5:\"he_IL\";a:8:{s:8:\"language\";s:5:\"he_IL\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-09 10:32:06\";s:12:\"english_name\";s:6:\"Hebrew\";s:11:\"native_name\";s:16:\"עִבְרִית\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/he_IL.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"he\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"המשך\";}}s:5:\"hi_IN\";a:8:{s:8:\"language\";s:5:\"hi_IN\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-06-17 09:33:44\";s:12:\"english_name\";s:5:\"Hindi\";s:11:\"native_name\";s:18:\"हिन्दी\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/hi_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hi\";i:2;s:3:\"hin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"जारी\";}}s:2:\"hr\";a:8:{s:8:\"language\";s:2:\"hr\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-06 18:14:24\";s:12:\"english_name\";s:8:\"Croatian\";s:11:\"native_name\";s:8:\"Hrvatski\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/hr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hr\";i:2;s:3:\"hrv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:5:\"hu_HU\";a:8:{s:8:\"language\";s:5:\"hu_HU\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-08-03 10:29:39\";s:12:\"english_name\";s:9:\"Hungarian\";s:11:\"native_name\";s:6:\"Magyar\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/hu_HU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hu\";i:2;s:3:\"hun\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Folytatás\";}}s:2:\"hy\";a:8:{s:8:\"language\";s:2:\"hy\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-03 16:21:10\";s:12:\"english_name\";s:8:\"Armenian\";s:11:\"native_name\";s:14:\"Հայերեն\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/hy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hy\";i:2;s:3:\"hye\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Շարունակել\";}}s:5:\"id_ID\";a:8:{s:8:\"language\";s:5:\"id_ID\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-07-28 13:16:13\";s:12:\"english_name\";s:10:\"Indonesian\";s:11:\"native_name\";s:16:\"Bahasa Indonesia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/id_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"id\";i:2;s:3:\"ind\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Lanjutkan\";}}s:5:\"is_IS\";a:8:{s:8:\"language\";s:5:\"is_IS\";s:7:\"version\";s:6:\"4.7.11\";s:7:\"updated\";s:19:\"2018-09-20 11:13:37\";s:12:\"english_name\";s:9:\"Icelandic\";s:11:\"native_name\";s:9:\"Íslenska\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.7.11/is_IS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"is\";i:2;s:3:\"isl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Áfram\";}}s:5:\"it_IT\";a:8:{s:8:\"language\";s:5:\"it_IT\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-01 11:16:36\";s:12:\"english_name\";s:7:\"Italian\";s:11:\"native_name\";s:8:\"Italiano\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/it_IT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"it\";i:2;s:3:\"ita\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"ja\";a:8:{s:8:\"language\";s:2:\"ja\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-01 10:30:44\";s:12:\"english_name\";s:8:\"Japanese\";s:11:\"native_name\";s:9:\"日本語\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/ja.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"ja\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"続ける\";}}s:5:\"jv_ID\";a:8:{s:8:\"language\";s:5:\"jv_ID\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-24 13:53:29\";s:12:\"english_name\";s:8:\"Javanese\";s:11:\"native_name\";s:9:\"Basa Jawa\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/jv_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"jv\";i:2;s:3:\"jav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Nerusaké\";}}s:5:\"ka_GE\";a:8:{s:8:\"language\";s:5:\"ka_GE\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-02 06:28:35\";s:12:\"english_name\";s:8:\"Georgian\";s:11:\"native_name\";s:21:\"ქართული\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/ka_GE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ka\";i:2;s:3:\"kat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"გაგრძელება\";}}s:3:\"kab\";a:8:{s:8:\"language\";s:3:\"kab\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-09-21 14:15:57\";s:12:\"english_name\";s:6:\"Kabyle\";s:11:\"native_name\";s:9:\"Taqbaylit\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.8/kab.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"kab\";i:3;s:3:\"kab\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Kemmel\";}}s:2:\"kk\";a:8:{s:8:\"language\";s:2:\"kk\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-12 08:08:32\";s:12:\"english_name\";s:6:\"Kazakh\";s:11:\"native_name\";s:19:\"Қазақ тілі\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/kk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"kk\";i:2;s:3:\"kaz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Жалғастыру\";}}s:2:\"km\";a:8:{s:8:\"language\";s:2:\"km\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-07 02:07:59\";s:12:\"english_name\";s:5:\"Khmer\";s:11:\"native_name\";s:27:\"ភាសាខ្មែរ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/km.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"km\";i:2;s:3:\"khm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"បន្ត\";}}s:5:\"ko_KR\";a:8:{s:8:\"language\";s:5:\"ko_KR\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-22 02:28:45\";s:12:\"english_name\";s:6:\"Korean\";s:11:\"native_name\";s:9:\"한국어\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/ko_KR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ko\";i:2;s:3:\"kor\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"계속\";}}s:3:\"ckb\";a:8:{s:8:\"language\";s:3:\"ckb\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-28 17:12:13\";s:12:\"english_name\";s:16:\"Kurdish (Sorani)\";s:11:\"native_name\";s:13:\"كوردی‎\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.8/ckb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ku\";i:3;s:3:\"ckb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"به‌رده‌وام به‌\";}}s:2:\"lo\";a:8:{s:8:\"language\";s:2:\"lo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 09:59:23\";s:12:\"english_name\";s:3:\"Lao\";s:11:\"native_name\";s:21:\"ພາສາລາວ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/lo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lo\";i:2;s:3:\"lao\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"ຕໍ່​ໄປ\";}}s:5:\"lt_LT\";a:8:{s:8:\"language\";s:5:\"lt_LT\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-13 21:42:46\";s:12:\"english_name\";s:10:\"Lithuanian\";s:11:\"native_name\";s:15:\"Lietuvių kalba\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/lt_LT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lt\";i:2;s:3:\"lit\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Tęsti\";}}s:2:\"lv\";a:8:{s:8:\"language\";s:2:\"lv\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-03-17 20:40:40\";s:12:\"english_name\";s:7:\"Latvian\";s:11:\"native_name\";s:16:\"Latviešu valoda\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.7/lv.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lv\";i:2;s:3:\"lav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Turpināt\";}}s:5:\"mk_MK\";a:8:{s:8:\"language\";s:5:\"mk_MK\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-01-26 15:54:41\";s:12:\"english_name\";s:10:\"Macedonian\";s:11:\"native_name\";s:31:\"Македонски јазик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.7/mk_MK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mk\";i:2;s:3:\"mkd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Продолжи\";}}s:5:\"ml_IN\";a:8:{s:8:\"language\";s:5:\"ml_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:43:32\";s:12:\"english_name\";s:9:\"Malayalam\";s:11:\"native_name\";s:18:\"മലയാളം\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ml_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ml\";i:2;s:3:\"mal\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"തുടരുക\";}}s:2:\"mn\";a:8:{s:8:\"language\";s:2:\"mn\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-12 07:29:35\";s:12:\"english_name\";s:9:\"Mongolian\";s:11:\"native_name\";s:12:\"Монгол\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/mn.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mn\";i:2;s:3:\"mon\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"Үргэлжлүүлэх\";}}s:2:\"mr\";a:8:{s:8:\"language\";s:2:\"mr\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2018-02-13 07:38:55\";s:12:\"english_name\";s:7:\"Marathi\";s:11:\"native_name\";s:15:\"मराठी\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.6/mr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mr\";i:2;s:3:\"mar\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"सुरु ठेवा\";}}s:5:\"ms_MY\";a:8:{s:8:\"language\";s:5:\"ms_MY\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-08-30 20:27:25\";s:12:\"english_name\";s:5:\"Malay\";s:11:\"native_name\";s:13:\"Bahasa Melayu\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/ms_MY.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ms\";i:2;s:3:\"msa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Teruskan\";}}s:5:\"my_MM\";a:8:{s:8:\"language\";s:5:\"my_MM\";s:7:\"version\";s:6:\"4.1.20\";s:7:\"updated\";s:19:\"2015-03-26 15:57:42\";s:12:\"english_name\";s:17:\"Myanmar (Burmese)\";s:11:\"native_name\";s:15:\"ဗမာစာ\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.20/my_MM.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"my\";i:2;s:3:\"mya\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:54:\"ဆက်လက်လုပ်ဆောင်ပါ။\";}}s:5:\"nb_NO\";a:8:{s:8:\"language\";s:5:\"nb_NO\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-11 00:57:26\";s:12:\"english_name\";s:19:\"Norwegian (Bokmål)\";s:11:\"native_name\";s:13:\"Norsk bokmål\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/nb_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nb\";i:2;s:3:\"nob\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsett\";}}s:5:\"ne_NP\";a:8:{s:8:\"language\";s:5:\"ne_NP\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-27 10:30:26\";s:12:\"english_name\";s:6:\"Nepali\";s:11:\"native_name\";s:18:\"नेपाली\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/ne_NP.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ne\";i:2;s:3:\"nep\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:43:\"जारी राख्नुहोस्\";}}s:5:\"nl_BE\";a:8:{s:8:\"language\";s:5:\"nl_BE\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-09-18 11:11:49\";s:12:\"english_name\";s:15:\"Dutch (Belgium)\";s:11:\"native_name\";s:20:\"Nederlands (België)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/nl_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:12:\"nl_NL_formal\";a:8:{s:8:\"language\";s:12:\"nl_NL_formal\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-29 08:41:27\";s:12:\"english_name\";s:14:\"Dutch (Formal)\";s:11:\"native_name\";s:20:\"Nederlands (Formeel)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.9.8/nl_NL_formal.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nl_NL\";a:8:{s:8:\"language\";s:5:\"nl_NL\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-05 19:28:41\";s:12:\"english_name\";s:5:\"Dutch\";s:11:\"native_name\";s:10:\"Nederlands\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/nl_NL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nn_NO\";a:8:{s:8:\"language\";s:5:\"nn_NO\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-10 17:50:37\";s:12:\"english_name\";s:19:\"Norwegian (Nynorsk)\";s:11:\"native_name\";s:13:\"Norsk nynorsk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/nn_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nn\";i:2;s:3:\"nno\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Hald fram\";}}s:3:\"oci\";a:8:{s:8:\"language\";s:3:\"oci\";s:7:\"version\";s:5:\"4.8.3\";s:7:\"updated\";s:19:\"2017-08-25 10:03:08\";s:12:\"english_name\";s:7:\"Occitan\";s:11:\"native_name\";s:7:\"Occitan\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.3/oci.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"oc\";i:2;s:3:\"oci\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Contunhar\";}}s:5:\"pa_IN\";a:8:{s:8:\"language\";s:5:\"pa_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-16 05:19:43\";s:12:\"english_name\";s:7:\"Punjabi\";s:11:\"native_name\";s:18:\"ਪੰਜਾਬੀ\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/pa_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pa\";i:2;s:3:\"pan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"ਜਾਰੀ ਰੱਖੋ\";}}s:5:\"pl_PL\";a:8:{s:8:\"language\";s:5:\"pl_PL\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-21 07:25:37\";s:12:\"english_name\";s:6:\"Polish\";s:11:\"native_name\";s:6:\"Polski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/pl_PL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pl\";i:2;s:3:\"pol\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Kontynuuj\";}}s:2:\"ps\";a:8:{s:8:\"language\";s:2:\"ps\";s:7:\"version\";s:6:\"4.1.20\";s:7:\"updated\";s:19:\"2015-03-29 22:19:48\";s:12:\"english_name\";s:6:\"Pashto\";s:11:\"native_name\";s:8:\"پښتو\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.20/ps.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ps\";i:2;s:3:\"pus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"دوام ورکړه\";}}s:5:\"pt_BR\";a:8:{s:8:\"language\";s:5:\"pt_BR\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-05 14:41:09\";s:12:\"english_name\";s:19:\"Portuguese (Brazil)\";s:11:\"native_name\";s:20:\"Português do Brasil\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/pt_BR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pt\";i:2;s:3:\"por\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:10:\"pt_PT_ao90\";a:8:{s:8:\"language\";s:10:\"pt_PT_ao90\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-09 09:30:48\";s:12:\"english_name\";s:27:\"Portuguese (Portugal, AO90)\";s:11:\"native_name\";s:17:\"Português (AO90)\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/translation/core/4.9.5/pt_PT_ao90.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_PT\";a:8:{s:8:\"language\";s:5:\"pt_PT\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-07 01:11:27\";s:12:\"english_name\";s:21:\"Portuguese (Portugal)\";s:11:\"native_name\";s:10:\"Português\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/pt_PT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:3:\"rhg\";a:8:{s:8:\"language\";s:3:\"rhg\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-16 13:03:18\";s:12:\"english_name\";s:8:\"Rohingya\";s:11:\"native_name\";s:8:\"Ruáinga\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/rhg.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"rhg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:5:\"ro_RO\";a:8:{s:8:\"language\";s:5:\"ro_RO\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-08 20:59:54\";s:12:\"english_name\";s:8:\"Romanian\";s:11:\"native_name\";s:8:\"Română\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/ro_RO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ro\";i:2;s:3:\"ron\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuă\";}}s:5:\"ru_RU\";a:8:{s:8:\"language\";s:5:\"ru_RU\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-09 15:27:18\";s:12:\"english_name\";s:7:\"Russian\";s:11:\"native_name\";s:14:\"Русский\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/ru_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ru\";i:2;s:3:\"rus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:3:\"sah\";a:8:{s:8:\"language\";s:3:\"sah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-21 02:06:41\";s:12:\"english_name\";s:5:\"Sakha\";s:11:\"native_name\";s:14:\"Сахалыы\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/sah.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"sah\";i:3;s:3:\"sah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Салҕаа\";}}s:5:\"si_LK\";a:8:{s:8:\"language\";s:5:\"si_LK\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 06:00:52\";s:12:\"english_name\";s:7:\"Sinhala\";s:11:\"native_name\";s:15:\"සිංහල\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/si_LK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"si\";i:2;s:3:\"sin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:44:\"දිගටම කරගෙන යන්න\";}}s:5:\"sk_SK\";a:8:{s:8:\"language\";s:5:\"sk_SK\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-31 08:30:58\";s:12:\"english_name\";s:6:\"Slovak\";s:11:\"native_name\";s:11:\"Slovenčina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/sk_SK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sk\";i:2;s:3:\"slk\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Pokračovať\";}}s:5:\"sl_SI\";a:8:{s:8:\"language\";s:5:\"sl_SI\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2018-01-04 13:33:13\";s:12:\"english_name\";s:9:\"Slovenian\";s:11:\"native_name\";s:13:\"Slovenščina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/sl_SI.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sl\";i:2;s:3:\"slv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Nadaljuj\";}}s:2:\"sq\";a:8:{s:8:\"language\";s:2:\"sq\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-01 13:20:12\";s:12:\"english_name\";s:8:\"Albanian\";s:11:\"native_name\";s:5:\"Shqip\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/sq.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sq\";i:2;s:3:\"sqi\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Vazhdo\";}}s:5:\"sr_RS\";a:8:{s:8:\"language\";s:5:\"sr_RS\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-08-02 20:59:54\";s:12:\"english_name\";s:7:\"Serbian\";s:11:\"native_name\";s:23:\"Српски језик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/sr_RS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sr\";i:2;s:3:\"srp\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:14:\"Настави\";}}s:5:\"sv_SE\";a:8:{s:8:\"language\";s:5:\"sv_SE\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-05 01:54:24\";s:12:\"english_name\";s:7:\"Swedish\";s:11:\"native_name\";s:7:\"Svenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/sv_SE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sv\";i:2;s:3:\"swe\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Fortsätt\";}}s:3:\"szl\";a:8:{s:8:\"language\";s:3:\"szl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-24 19:58:14\";s:12:\"english_name\";s:8:\"Silesian\";s:11:\"native_name\";s:17:\"Ślōnskŏ gŏdka\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/szl.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"szl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:13:\"Kōntynuować\";}}s:5:\"ta_IN\";a:8:{s:8:\"language\";s:5:\"ta_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:22:47\";s:12:\"english_name\";s:5:\"Tamil\";s:11:\"native_name\";s:15:\"தமிழ்\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ta_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ta\";i:2;s:3:\"tam\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"தொடரவும்\";}}s:2:\"te\";a:8:{s:8:\"language\";s:2:\"te\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:47:39\";s:12:\"english_name\";s:6:\"Telugu\";s:11:\"native_name\";s:18:\"తెలుగు\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/te.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"te\";i:2;s:3:\"tel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"కొనసాగించు\";}}s:2:\"th\";a:8:{s:8:\"language\";s:2:\"th\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-02 17:08:41\";s:12:\"english_name\";s:4:\"Thai\";s:11:\"native_name\";s:9:\"ไทย\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/th.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"th\";i:2;s:3:\"tha\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"ต่อไป\";}}s:2:\"tl\";a:8:{s:8:\"language\";s:2:\"tl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-30 02:38:08\";s:12:\"english_name\";s:7:\"Tagalog\";s:11:\"native_name\";s:7:\"Tagalog\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/tl.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tl\";i:2;s:3:\"tgl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Magpatuloy\";}}s:5:\"tr_TR\";a:8:{s:8:\"language\";s:5:\"tr_TR\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-07 21:08:54\";s:12:\"english_name\";s:7:\"Turkish\";s:11:\"native_name\";s:8:\"Türkçe\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/tr_TR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tr\";i:2;s:3:\"tur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Devam\";}}s:5:\"tt_RU\";a:8:{s:8:\"language\";s:5:\"tt_RU\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-20 20:20:50\";s:12:\"english_name\";s:5:\"Tatar\";s:11:\"native_name\";s:19:\"Татар теле\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/tt_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tt\";i:2;s:3:\"tat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:17:\"дәвам итү\";}}s:3:\"tah\";a:8:{s:8:\"language\";s:3:\"tah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-06 18:39:39\";s:12:\"english_name\";s:8:\"Tahitian\";s:11:\"native_name\";s:10:\"Reo Tahiti\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/tah.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"ty\";i:2;s:3:\"tah\";i:3;s:3:\"tah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:5:\"ug_CN\";a:8:{s:8:\"language\";s:5:\"ug_CN\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-12 12:31:53\";s:12:\"english_name\";s:6:\"Uighur\";s:11:\"native_name\";s:16:\"ئۇيغۇرچە\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/ug_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ug\";i:2;s:3:\"uig\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:26:\"داۋاملاشتۇرۇش\";}}s:2:\"uk\";a:8:{s:8:\"language\";s:2:\"uk\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-01 10:24:13\";s:12:\"english_name\";s:9:\"Ukrainian\";s:11:\"native_name\";s:20:\"Українська\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/uk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uk\";i:2;s:3:\"ukr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продовжити\";}}s:2:\"ur\";a:8:{s:8:\"language\";s:2:\"ur\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-12-03 09:18:37\";s:12:\"english_name\";s:4:\"Urdu\";s:11:\"native_name\";s:8:\"اردو\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/ur.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ur\";i:2;s:3:\"urd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"جاری رکھیں\";}}s:5:\"uz_UZ\";a:8:{s:8:\"language\";s:5:\"uz_UZ\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-10-11 06:46:15\";s:12:\"english_name\";s:5:\"Uzbek\";s:11:\"native_name\";s:11:\"O‘zbekcha\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/uz_UZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uz\";i:2;s:3:\"uzb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Davom etish\";}}s:2:\"vi\";a:8:{s:8:\"language\";s:2:\"vi\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-06 02:26:39\";s:12:\"english_name\";s:10:\"Vietnamese\";s:11:\"native_name\";s:14:\"Tiếng Việt\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/vi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"vi\";i:2;s:3:\"vie\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Tiếp tục\";}}s:5:\"zh_TW\";a:8:{s:8:\"language\";s:5:\"zh_TW\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-11-19 20:31:12\";s:12:\"english_name\";s:16:\"Chinese (Taiwan)\";s:11:\"native_name\";s:12:\"繁體中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/zh_TW.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_HK\";a:8:{s:8:\"language\";s:5:\"zh_HK\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-09 00:56:52\";s:12:\"english_name\";s:19:\"Chinese (Hong Kong)\";s:11:\"native_name\";s:16:\"香港中文版	\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/zh_HK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_CN\";a:8:{s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-17 22:20:52\";s:12:\"english_name\";s:15:\"Chinese (China)\";s:11:\"native_name\";s:12:\"简体中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/zh_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"继续\";}}}', 'no'),
(612, '_transient_is_multi_author', '0', 'yes');

-- --------------------------------------------------------

--
-- Table structure for table `wp_postmeta`
--

CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) UNSIGNED NOT NULL,
  `post_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_postmeta`
--

INSERT INTO `wp_postmeta` (`meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES
(1, 2, '_wp_page_template', 'default'),
(2, 3, '_wp_page_template', 'default'),
(5, 6, '_wp_trash_meta_status', 'publish'),
(6, 6, '_wp_trash_meta_time', '1543829927'),
(15, 7, '_wp_trash_meta_status', 'publish'),
(16, 7, '_wp_trash_meta_time', '1543829971'),
(17, 9, '_edit_lock', '1543830016:1'),
(18, 9, '_customize_restore_dismissed', '1'),
(19, 10, '_wp_trash_meta_status', 'publish'),
(20, 10, '_wp_trash_meta_time', '1543830158'),
(21, 11, '_wp_trash_meta_status', 'publish'),
(22, 11, '_wp_trash_meta_time', '1543830164'),
(23, 12, '_wp_trash_meta_status', 'publish'),
(24, 12, '_wp_trash_meta_time', '1543830167'),
(25, 13, '_wp_trash_meta_status', 'publish'),
(26, 13, '_wp_trash_meta_time', '1543830171'),
(27, 14, '_edit_lock', '1543830339:1'),
(28, 14, '_wp_trash_meta_status', 'publish'),
(29, 14, '_wp_trash_meta_time', '1543830342'),
(30, 17, '_edit_lock', '1543830513:1'),
(31, 17, '_wp_trash_meta_status', 'publish'),
(32, 17, '_wp_trash_meta_time', '1543830538'),
(33, 19, '_wp_trash_meta_status', 'publish'),
(34, 19, '_wp_trash_meta_time', '1543830571'),
(35, 21, '_edit_lock', '1543830633:1'),
(36, 21, '_wp_trash_meta_status', 'publish'),
(37, 21, '_wp_trash_meta_time', '1543830656'),
(38, 23, '_wp_trash_meta_status', 'publish'),
(39, 23, '_wp_trash_meta_time', '1543830730'),
(40, 25, '_wp_trash_meta_status', 'publish'),
(41, 25, '_wp_trash_meta_time', '1543830873'),
(42, 27, '_wp_trash_meta_status', 'publish'),
(43, 27, '_wp_trash_meta_time', '1543830893'),
(44, 29, '_wp_trash_meta_status', 'publish'),
(45, 29, '_wp_trash_meta_time', '1543830917'),
(46, 31, '_wp_trash_meta_status', 'publish'),
(47, 31, '_wp_trash_meta_time', '1543830926'),
(48, 33, '_wp_trash_meta_status', 'publish'),
(49, 33, '_wp_trash_meta_time', '1543830970'),
(50, 35, '_wp_trash_meta_status', 'publish'),
(51, 35, '_wp_trash_meta_time', '1543831056'),
(52, 37, '_wp_trash_meta_status', 'publish'),
(53, 37, '_wp_trash_meta_time', '1543831059'),
(54, 39, '_wp_trash_meta_status', 'publish'),
(55, 39, '_wp_trash_meta_time', '1543831063'),
(56, 41, '_wp_trash_meta_status', 'publish'),
(57, 41, '_wp_trash_meta_time', '1543831080'),
(58, 43, '_wp_trash_meta_status', 'publish'),
(59, 43, '_wp_trash_meta_time', '1543831089'),
(60, 45, '_wp_trash_meta_status', 'publish'),
(61, 45, '_wp_trash_meta_time', '1543831117'),
(62, 47, '_wp_trash_meta_status', 'publish'),
(63, 47, '_wp_trash_meta_time', '1543831169'),
(64, 49, '_edit_lock', '1543831230:1'),
(65, 49, '_wp_trash_meta_status', 'publish'),
(66, 49, '_wp_trash_meta_time', '1543831231'),
(67, 51, '_wp_trash_meta_status', 'publish'),
(68, 51, '_wp_trash_meta_time', '1543831734'),
(69, 53, '_edit_lock', '1543832050:1'),
(70, 53, '_wp_trash_meta_status', 'publish'),
(71, 53, '_wp_trash_meta_time', '1543832060'),
(72, 55, '_wp_trash_meta_status', 'publish'),
(73, 55, '_wp_trash_meta_time', '1543832133'),
(74, 57, '_wp_trash_meta_status', 'publish'),
(75, 57, '_wp_trash_meta_time', '1543832424'),
(84, 59, '_wp_trash_meta_status', 'publish'),
(85, 59, '_wp_trash_meta_time', '1543836983'),
(86, 61, '_wp_trash_meta_status', 'publish'),
(87, 61, '_wp_trash_meta_time', '1543837069'),
(88, 62, '_wp_trash_meta_status', 'publish'),
(89, 62, '_wp_trash_meta_time', '1543837083'),
(90, 63, '_wp_trash_meta_status', 'publish'),
(91, 63, '_wp_trash_meta_time', '1543837098'),
(92, 64, '_wp_trash_meta_status', 'publish'),
(93, 64, '_wp_trash_meta_time', '1543837112'),
(102, 65, '_wp_trash_meta_status', 'publish'),
(103, 65, '_wp_trash_meta_time', '1543837788'),
(105, 68, '_edit_last', '1'),
(108, 68, '_edit_lock', '1543945157:1'),
(115, 73, '_edit_last', '1'),
(118, 73, '_edit_lock', '1543944957:1'),
(121, 76, '_edit_last', '1'),
(124, 76, '_edit_lock', '1543940820:1'),
(127, 67, '_customize_restore_dismissed', '1'),
(160, 79, '_wp_trash_meta_status', 'publish'),
(161, 79, '_wp_trash_meta_time', '1543941022'),
(162, 84, '_edit_lock', '1543941083:1'),
(163, 84, '_wp_trash_meta_status', 'publish'),
(164, 84, '_wp_trash_meta_time', '1543941086'),
(173, 85, '_wp_trash_meta_status', 'publish'),
(174, 85, '_wp_trash_meta_time', '1543941206'),
(175, 87, '_edit_lock', '1544390032:1'),
(176, 87, '_edit_last', '1'),
(185, 91, '_edit_lock', '1543941923:1'),
(186, 91, '_wp_trash_meta_status', 'publish'),
(187, 91, '_wp_trash_meta_time', '1543941946'),
(190, 73, '_wp_old_slug', 'matrixelementssum-codesignal'),
(193, 68, '_wp_old_slug', 'dsd'),
(196, 87, '_wp_old_slug', 'tinh-tong-2'),
(197, 94, '_edit_lock', '1543945737:1'),
(198, 94, '_edit_last', '1'),
(207, 94, '_wp_trash_meta_status', 'draft'),
(208, 94, '_wp_trash_meta_time', '1543957026'),
(209, 94, '_wp_desired_post_slug', ''),
(210, 121, '_edit_lock', '1544389649:1'),
(211, 121, '_edit_last', '1'),
(214, 126, '_wp_trash_meta_status', 'publish'),
(215, 126, '_wp_trash_meta_time', '1544366125'),
(216, 127, '_wp_trash_meta_status', 'publish'),
(217, 127, '_wp_trash_meta_time', '1544366136'),
(218, 128, '_wp_trash_meta_status', 'publish'),
(219, 128, '_wp_trash_meta_time', '1544366150'),
(222, 130, '_edit_lock', '1544366322:1'),
(223, 130, '_edit_last', '1'),
(226, 132, '_wp_trash_meta_status', 'publish'),
(227, 132, '_wp_trash_meta_time', '1544366477'),
(228, 133, '_wp_trash_meta_status', 'publish'),
(229, 133, '_wp_trash_meta_time', '1544368942'),
(230, 135, '_menu_item_type', 'custom'),
(231, 135, '_menu_item_menu_item_parent', '0'),
(232, 135, '_menu_item_object_id', '135'),
(233, 135, '_menu_item_object', 'custom'),
(234, 135, '_menu_item_target', ''),
(235, 135, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(236, 135, '_menu_item_xfn', ''),
(237, 135, '_menu_item_url', 'http://localhost/web-teach-code/blog'),
(238, 134, '_wp_trash_meta_status', 'publish'),
(239, 134, '_wp_trash_meta_time', '1544368974'),
(248, 136, '_wp_trash_meta_status', 'publish'),
(249, 136, '_wp_trash_meta_time', '1544368992'),
(258, 138, '_wp_trash_meta_status', 'publish'),
(259, 138, '_wp_trash_meta_time', '1544369127'),
(260, 140, '_edit_lock', '1544369268:1'),
(277, 143, '_menu_item_type', 'taxonomy'),
(278, 143, '_menu_item_menu_item_parent', '179'),
(279, 143, '_menu_item_object_id', '1'),
(280, 143, '_menu_item_object', 'category'),
(281, 143, '_menu_item_target', ''),
(282, 143, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(283, 143, '_menu_item_xfn', ''),
(284, 143, '_menu_item_url', ''),
(285, 144, '_menu_item_type', 'taxonomy'),
(286, 144, '_menu_item_menu_item_parent', '179'),
(287, 144, '_menu_item_object_id', '3'),
(288, 144, '_menu_item_object', 'category'),
(289, 144, '_menu_item_target', ''),
(290, 144, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(291, 144, '_menu_item_xfn', ''),
(292, 144, '_menu_item_url', ''),
(293, 145, '_menu_item_type', 'taxonomy'),
(294, 145, '_menu_item_menu_item_parent', '179'),
(295, 145, '_menu_item_object_id', '5'),
(296, 145, '_menu_item_object', 'category'),
(297, 145, '_menu_item_target', ''),
(298, 145, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(299, 145, '_menu_item_xfn', ''),
(300, 145, '_menu_item_url', ''),
(301, 146, '_menu_item_type', 'taxonomy'),
(302, 146, '_menu_item_menu_item_parent', '179'),
(303, 146, '_menu_item_object_id', '4'),
(304, 146, '_menu_item_object', 'category'),
(305, 146, '_menu_item_target', ''),
(306, 146, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(307, 146, '_menu_item_xfn', ''),
(308, 146, '_menu_item_url', ''),
(309, 147, '_menu_item_type', 'taxonomy'),
(310, 147, '_menu_item_menu_item_parent', '180'),
(311, 147, '_menu_item_object_id', '8'),
(312, 147, '_menu_item_object', 'category'),
(313, 147, '_menu_item_target', ''),
(314, 147, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(315, 147, '_menu_item_xfn', ''),
(316, 147, '_menu_item_url', ''),
(317, 140, '_wp_trash_meta_status', 'publish'),
(318, 140, '_wp_trash_meta_time', '1544369279'),
(319, 148, '_edit_lock', '1544369340:1'),
(320, 148, '_wp_trash_meta_status', 'publish'),
(321, 148, '_wp_trash_meta_time', '1544369351'),
(322, 130, '_wp_trash_meta_status', 'publish'),
(323, 130, '_wp_trash_meta_time', '1544369619'),
(324, 130, '_wp_desired_post_slug', 'dsd'),
(327, 149, '_edit_lock', '1544389651:1'),
(328, 149, '_edit_last', '1'),
(331, 151, '_edit_lock', '1544389650:1'),
(332, 151, '_edit_last', '1'),
(339, 121, '_wp_old_date', '2018-12-09'),
(340, 154, '_edit_lock', '1544389648:1'),
(341, 154, '_edit_last', '1'),
(354, 157, '_edit_lock', '1544389603:1'),
(355, 157, '_edit_last', '1'),
(358, 159, '_edit_lock', '1544389603:1'),
(359, 159, '_edit_last', '1'),
(362, 161, '_edit_lock', '1544389601:1'),
(363, 161, '_edit_last', '1'),
(366, 163, '_edit_lock', '1544389559:1'),
(367, 163, '_edit_last', '1'),
(370, 165, '_edit_lock', '1544389557:1'),
(371, 165, '_edit_last', '1'),
(374, 167, '_edit_lock', '1544389557:1'),
(375, 167, '_edit_last', '1'),
(378, 169, '_edit_lock', '1544389521:1'),
(379, 169, '_edit_last', '1'),
(382, 171, '_edit_lock', '1544389515:1'),
(383, 171, '_edit_last', '1'),
(386, 173, '_edit_lock', '1544389484:1'),
(387, 173, '_edit_last', '1'),
(392, 175, '_edit_lock', '1544389470:1'),
(393, 175, '_edit_last', '1'),
(398, 179, '_menu_item_type', 'custom'),
(399, 179, '_menu_item_menu_item_parent', '0'),
(400, 179, '_menu_item_object_id', '179'),
(401, 179, '_menu_item_object', 'custom'),
(402, 179, '_menu_item_target', ''),
(403, 179, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(404, 179, '_menu_item_xfn', ''),
(405, 179, '_menu_item_url', '#'),
(406, 180, '_menu_item_type', 'custom'),
(407, 180, '_menu_item_menu_item_parent', '0'),
(408, 180, '_menu_item_object_id', '180'),
(409, 180, '_menu_item_object', 'custom'),
(410, 180, '_menu_item_target', ''),
(411, 180, '_menu_item_classes', 'a:1:{i:0;s:0:\"\";}'),
(412, 180, '_menu_item_xfn', ''),
(413, 180, '_menu_item_url', '#'),
(414, 178, '_wp_trash_meta_status', 'publish'),
(415, 178, '_wp_trash_meta_time', '1544380157'),
(416, 181, '_wp_trash_meta_status', 'publish'),
(417, 181, '_wp_trash_meta_time', '1544380176'),
(418, 182, '_edit_lock', '1544380196:1'),
(419, 182, '_customize_restore_dismissed', '1'),
(420, 183, '_wp_trash_meta_status', 'publish'),
(421, 183, '_wp_trash_meta_time', '1544380207'),
(422, 184, '_edit_lock', '1544389844:1'),
(423, 184, '_edit_last', '1'),
(430, 188, '_edit_lock', '1544389830:1'),
(431, 188, '_edit_last', '1'),
(450, 76, '_wp_trash_meta_status', 'publish'),
(451, 76, '_wp_trash_meta_time', '1544382525'),
(452, 76, '_wp_desired_post_slug', 'all-longest-strings'),
(453, 73, '_wp_trash_meta_status', 'publish'),
(454, 73, '_wp_trash_meta_time', '1544382535'),
(455, 73, '_wp_desired_post_slug', 'matrixelementssum'),
(456, 68, '_wp_trash_meta_status', 'publish'),
(457, 68, '_wp_trash_meta_time', '1544382535'),
(458, 68, '_wp_desired_post_slug', 'avoidobstacles'),
(503, 216, '_wp_trash_meta_status', 'publish'),
(504, 216, '_wp_trash_meta_time', '1544386539'),
(505, 2, '_wp_trash_meta_status', 'publish'),
(506, 2, '_wp_trash_meta_time', '1544386855'),
(507, 2, '_wp_desired_post_slug', 'sample-page'),
(508, 3, '_wp_trash_meta_status', 'draft'),
(509, 3, '_wp_trash_meta_time', '1544386857'),
(510, 3, '_wp_desired_post_slug', 'privacy-policy'),
(511, 219, '_wp_attached_file', '2018/12/logo.png'),
(512, 219, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:278;s:6:\"height\";i:89;s:4:\"file\";s:16:\"2018/12/logo.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"logo-150x89.png\";s:5:\"width\";i:150;s:6:\"height\";i:89;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:15:\"logo-150x89.png\";s:5:\"width\";i:150;s:6:\"height\";i:89;s:9:\"mime-type\";s:9:\"image/png\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:15:\"logo-150x89.png\";s:5:\"width\";i:150;s:6:\"height\";i:89;s:9:\"mime-type\";s:9:\"image/png\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:15:\"logo-200x89.png\";s:5:\"width\";i:200;s:6:\"height\";i:89;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(513, 220, '_wp_trash_meta_status', 'publish'),
(514, 220, '_wp_trash_meta_time', '1544386927'),
(515, 221, '_wp_attached_file', '2018/12/cropped-logo.png'),
(516, 221, '_wp_attachment_context', 'custom-logo'),
(517, 221, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:278;s:6:\"height\";i:79;s:4:\"file\";s:24:\"2018/12/cropped-logo.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:23:\"cropped-logo-150x79.png\";s:5:\"width\";i:150;s:6:\"height\";i:79;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:23:\"cropped-logo-150x79.png\";s:5:\"width\";i:150;s:6:\"height\";i:79;s:9:\"mime-type\";s:9:\"image/png\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:23:\"cropped-logo-150x79.png\";s:5:\"width\";i:150;s:6:\"height\";i:79;s:9:\"mime-type\";s:9:\"image/png\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:23:\"cropped-logo-200x79.png\";s:5:\"width\";i:200;s:6:\"height\";i:79;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(518, 222, '_wp_trash_meta_status', 'publish'),
(519, 222, '_wp_trash_meta_time', '1544386953'),
(520, 223, '_wp_trash_meta_status', 'publish'),
(521, 223, '_wp_trash_meta_time', '1544386964'),
(522, 224, '_wp_trash_meta_status', 'publish'),
(523, 224, '_wp_trash_meta_time', '1544386982'),
(524, 225, '_wp_trash_meta_status', 'publish'),
(525, 225, '_wp_trash_meta_time', '1544386990'),
(526, 226, '_wp_trash_meta_status', 'publish'),
(527, 226, '_wp_trash_meta_time', '1544387029'),
(530, 227, '_wp_trash_meta_status', 'publish'),
(531, 227, '_wp_trash_meta_time', '1544387053'),
(532, 228, '_wp_trash_meta_status', 'publish'),
(533, 228, '_wp_trash_meta_time', '1544387107'),
(534, 229, '_wp_attached_file', '2018/12/cropped-logo-1.png'),
(535, 229, '_wp_attachment_context', 'custom-header'),
(536, 229, '_wp_attachment_metadata', 'a:6:{s:5:\"width\";i:278;s:6:\"height\";i:29;s:4:\"file\";s:26:\"2018/12/cropped-logo-1.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"cropped-logo-1-150x29.png\";s:5:\"width\";i:150;s:6:\"height\";i:29;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:25:\"cropped-logo-1-150x29.png\";s:5:\"width\";i:150;s:6:\"height\";i:29;s:9:\"mime-type\";s:9:\"image/png\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:25:\"cropped-logo-1-150x29.png\";s:5:\"width\";i:150;s:6:\"height\";i:29;s:9:\"mime-type\";s:9:\"image/png\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:25:\"cropped-logo-1-200x29.png\";s:5:\"width\";i:200;s:6:\"height\";i:29;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:17:\"attachment_parent\";i:219;}'),
(539, 230, '_wp_trash_meta_status', 'publish'),
(540, 230, '_wp_trash_meta_time', '1544387128'),
(541, 231, '_wp_trash_meta_status', 'publish'),
(542, 231, '_wp_trash_meta_time', '1544387154'),
(545, 233, '_wp_attached_file', '2018/12/c_lang.jpg'),
(546, 233, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:750;s:6:\"height\";i:422;s:4:\"file\";s:18:\"2018/12/c_lang.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:18:\"c_lang-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"c_lang-300x169.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:169;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:18:\"c_lang-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:18:\"c_lang-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:18:\"c_lang-200x125.jpg\";s:5:\"width\";i:200;s:6:\"height\";i:125;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(547, 175, '_thumbnail_id', '234'),
(552, 234, '_wp_attached_file', '2018/12/c_home.jpg'),
(553, 234, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:354;s:6:\"height\";i:250;s:4:\"file\";s:18:\"2018/12/c_home.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:18:\"c_home-150x100.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:100;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"c_home-300x212.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:212;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:18:\"c_home-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:18:\"c_home-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:18:\"c_home-200x125.jpg\";s:5:\"width\";i:200;s:6:\"height\";i:125;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(556, 173, '_thumbnail_id', '234'),
(559, 171, '_thumbnail_id', '234'),
(562, 169, '_thumbnail_id', '234'),
(565, 167, '_thumbnail_id', '234'),
(568, 165, '_thumbnail_id', '234'),
(571, 163, '_thumbnail_id', '234'),
(574, 161, '_thumbnail_id', '234'),
(577, 159, '_thumbnail_id', '234'),
(580, 157, '_thumbnail_id', '234'),
(583, 154, '_thumbnail_id', '234'),
(586, 121, '_thumbnail_id', '234'),
(589, 151, '_thumbnail_id', '234'),
(592, 149, '_thumbnail_id', '234'),
(598, 237, '_wp_attached_file', '2018/12/LOGO-Programming-Language.jpg'),
(599, 237, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:400;s:6:\"height\";i:266;s:4:\"file\";s:37:\"2018/12/LOGO-Programming-Language.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:37:\"LOGO-Programming-Language-150x100.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:100;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:37:\"LOGO-Programming-Language-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:37:\"LOGO-Programming-Language-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:37:\"LOGO-Programming-Language-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:37:\"LOGO-Programming-Language-200x125.jpg\";s:5:\"width\";i:200;s:6:\"height\";i:125;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(600, 188, '_thumbnail_id', '237'),
(603, 238, '_wp_attached_file', '2018/12/file-code-icon.png'),
(604, 238, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:1024;s:6:\"height\";i:1024;s:4:\"file\";s:26:\"2018/12/file-code-icon.png\";s:5:\"sizes\";a:6:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:26:\"file-code-icon-150x100.png\";s:5:\"width\";i:150;s:6:\"height\";i:100;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:26:\"file-code-icon-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:26:\"file-code-icon-768x768.png\";s:5:\"width\";i:768;s:6:\"height\";i:768;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:26:\"file-code-icon-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:20:\"ribbon-lite-featured\";a:4:{s:4:\"file\";s:26:\"file-code-icon-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:19:\"ribbon-lite-related\";a:4:{s:4:\"file\";s:26:\"file-code-icon-200x125.png\";s:5:\"width\";i:200;s:6:\"height\";i:125;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(609, 184, '_thumbnail_id', '237'),
(612, 87, '_thumbnail_id', '237');

-- --------------------------------------------------------

--
-- Table structure for table `wp_posts`
--

CREATE TABLE `wp_posts` (
  `ID` bigint(20) UNSIGNED NOT NULL,
  `post_author` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_parent` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_posts`
--

INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(2, 1, '2018-12-03 08:31:36', '2018-12-03 08:31:36', 'This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\n\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</blockquote>\n\n...or something like this:\n\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\n\nAs a new WordPress user, you should go to <a href=\"http://localhost/web-teach-code/blog/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!', 'Sample Page', '', 'trash', 'closed', 'open', '', 'sample-page__trashed', '', '', '2018-12-10 03:20:55', '2018-12-09 20:20:55', '', 0, 'http://localhost/web-teach-code/blog/?page_id=2', 0, 'page', '', 0),
(3, 1, '2018-12-03 08:31:36', '2018-12-03 08:31:36', '<h2>Who we are</h2><p>Our website address is: http://localhost/web-teach-code/blog.</p><h2>What personal data we collect and why we collect it</h2><h3>Comments</h3><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><h3>Media</h3><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><h3>Contact forms</h3><h3>Cookies</h3><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><p>If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><h3>Embedded content from other websites</h3><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p><h3>Analytics</h3><h2>Who we share your data with</h2><h2>How long we retain your data</h2><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><h2>What rights you have over your data</h2><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><h2>Where we send your data</h2><p>Visitor comments may be checked through an automated spam detection service.</p><h2>Your contact information</h2><h2>Additional information</h2><h3>How we protect your data</h3><h3>What data breach procedures we have in place</h3><h3>What third parties we receive data from</h3><h3>What automated decision making and/or profiling we do with user data</h3><h3>Industry regulatory disclosure requirements</h3>', 'Privacy Policy', '', 'trash', 'closed', 'open', '', 'privacy-policy__trashed', '', '', '2018-12-10 03:20:58', '2018-12-09 20:20:58', '', 0, 'http://localhost/web-teach-code/blog/?page_id=3', 0, 'page', '', 0),
(4, 1, '2018-12-03 08:31:53', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2018-12-03 08:31:53', '0000-00-00 00:00:00', '', 0, 'http://localhost/web-teach-code/blog/?p=4', 0, 'post', '', 0),
(6, 1, '2018-12-03 09:38:47', '2018-12-03 09:38:47', '{\n    \"my-vcard-resume::header_image\": {\n        \"value\": \"remove-header\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:38:47\"\n    },\n    \"my-vcard-resume::header_image_data\": {\n        \"value\": \"remove-header\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:38:47\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '2904adcb-70c0-42bd-bb15-99d78cdaee00', '', '', '2018-12-03 09:38:47', '2018-12-03 09:38:47', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/2904adcb-70c0-42bd-bb15-99d78cdaee00/', 0, 'customize_changeset', '', 0),
(7, 1, '2018-12-03 09:39:29', '2018-12-03 09:39:29', '{\n    \"my-vcard-resume::nav_menu_locations[primary]\": {\n        \"value\": -8556998526679937000,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:39:29\"\n    },\n    \"nav_menu[-8556998526679937000]\": {\n        \"value\": {\n            \"name\": \"menu1\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": false\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:39:29\"\n    },\n    \"nav_menu_item[-3618259226746130400]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 1,\n            \"type\": \"taxonomy\",\n            \"title\": \"Uncategorized\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"nav_menu_term_id\": -8556998526679937000,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:39:29\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'd87344e0-37e3-469d-a544-809f9056a7b1', '', '', '2018-12-03 09:39:29', '2018-12-03 09:39:29', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/d87344e0-37e3-469d-a544-809f9056a7b1/', 0, 'customize_changeset', '', 0),
(9, 1, '2018-12-03 09:40:16', '0000-00-00 00:00:00', '{\n    \"nav_menu[2]\": {\n        \"value\": {\n            \"name\": \"menu1\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": false\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:40:16\"\n    }\n}', '', '', 'auto-draft', 'closed', 'closed', '', '988fc82f-0a95-402c-b653-4696abaca8f8', '', '', '2018-12-03 09:40:16', '0000-00-00 00:00:00', '', 0, 'http://localhost/web-teach-code/blog/?p=9', 0, 'customize_changeset', '', 0),
(10, 1, '2018-12-03 09:42:38', '2018-12-03 09:42:38', '{\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-2\",\n            \"recent-comments-2\",\n            \"archives-2\",\n            \"categories-2\",\n            \"meta-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:38\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'dd63b791-e2b1-4dce-a81a-488e81c1b2fb', '', '', '2018-12-03 09:42:38', '2018-12-03 09:42:38', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/dd63b791-e2b1-4dce-a81a-488e81c1b2fb/', 0, 'customize_changeset', '', 0),
(11, 1, '2018-12-03 09:42:43', '2018-12-03 09:42:43', '{\n    \"sidebars_widgets[wp_inactive_widgets]\": {\n        \"value\": [\n            \"recent-comments-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:43\"\n    },\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-2\",\n            \"archives-2\",\n            \"categories-2\",\n            \"meta-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:43\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '1d363439-5f13-45f6-aff2-d2b94f4bd641', '', '', '2018-12-03 09:42:43', '2018-12-03 09:42:43', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/1d363439-5f13-45f6-aff2-d2b94f4bd641/', 0, 'customize_changeset', '', 0),
(12, 1, '2018-12-03 09:42:46', '2018-12-03 09:42:46', '{\n    \"sidebars_widgets[wp_inactive_widgets]\": {\n        \"value\": [\n            \"recent-comments-2\",\n            \"archives-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:46\"\n    },\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-2\",\n            \"categories-2\",\n            \"meta-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:46\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '2135bb04-1181-43e5-9233-f797ad8dea85', '', '', '2018-12-03 09:42:46', '2018-12-03 09:42:46', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/2135bb04-1181-43e5-9233-f797ad8dea85/', 0, 'customize_changeset', '', 0),
(13, 1, '2018-12-03 09:42:51', '2018-12-03 09:42:51', '{\n    \"sidebars_widgets[wp_inactive_widgets]\": {\n        \"value\": [\n            \"recent-comments-2\",\n            \"archives-2\",\n            \"categories-2\",\n            \"meta-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:51\"\n    },\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:42:51\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '3486d34d-ab4f-4fd9-a7eb-d3643556f4b6', '', '', '2018-12-03 09:42:51', '2018-12-03 09:42:51', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/3486d34d-ab4f-4fd9-a7eb-d3643556f4b6/', 0, 'customize_changeset', '', 0),
(14, 1, '2018-12-03 09:45:42', '2018-12-03 09:45:42', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\twidth: 60%\\n}\\n.card-inner{\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:45:39\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'fe38ef7c-7ce9-40c9-86c3-963de046cf4a', '', '', '2018-12-03 09:45:42', '2018-12-03 09:45:42', '', 0, 'http://localhost/web-teach-code/blog/?p=14', 0, 'customize_changeset', '', 0),
(15, 1, '2018-12-03 09:45:42', '2018-12-03 09:45:42', '', 'my-vcard-resume', '', 'publish', 'closed', 'closed', '', 'my-vcard-resume', '', '', '2018-12-03 10:20:23', '2018-12-03 10:20:23', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/my-vcard-resume/', 0, 'custom_css', '', 0),
(16, 1, '2018-12-03 09:45:42', '2018-12-03 09:45:42', '.card-started{\n	width: 60%\n}\n.card-inner{\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:45:42', '2018-12-03 09:45:42', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(17, 1, '2018-12-03 09:48:57', '2018-12-03 09:48:57', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\twidth: 60%\\n}\\n.card-inner{\\n\\tleft: 51%;\\n\\twidth: 160%;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:48:57\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '8d13e7ab-400a-4e13-89e3-d78a478b7f06', '', '', '2018-12-03 09:48:57', '2018-12-03 09:48:57', '', 0, 'http://localhost/web-teach-code/blog/?p=17', 0, 'customize_changeset', '', 0),
(18, 1, '2018-12-03 09:48:57', '2018-12-03 09:48:57', '.card-started{\n	width: 60%\n}\n.card-inner{\n	left: 51%;\n	width: 160%;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:48:57', '2018-12-03 09:48:57', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(19, 1, '2018-12-03 09:49:31', '2018-12-03 09:49:31', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\twidth: 60%\\n}\\n.card-inner{\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:49:31\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '8b1a9e92-2b49-4eeb-a567-01304664d3fa', '', '', '2018-12-03 09:49:31', '2018-12-03 09:49:31', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/8b1a9e92-2b49-4eeb-a567-01304664d3fa/', 0, 'customize_changeset', '', 0),
(20, 1, '2018-12-03 09:49:31', '2018-12-03 09:49:31', '.card-started{\n	width: 60%\n}\n.card-inner{\n	left: 65%;\n	width: 160%;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:49:31', '2018-12-03 09:49:31', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(21, 1, '2018-12-03 09:50:55', '2018-12-03 09:50:55', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:50:55\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '8b7817a2-cd64-425a-81c7-0823da2593c3', '', '', '2018-12-03 09:50:55', '2018-12-03 09:50:55', '', 0, 'http://localhost/web-teach-code/blog/?p=21', 0, 'customize_changeset', '', 0),
(22, 1, '2018-12-03 09:50:55', '2018-12-03 09:50:55', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:50:55', '2018-12-03 09:50:55', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(23, 1, '2018-12-03 09:52:09', '2018-12-03 09:52:09', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.image{\\n\\tdisplay: none;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:52:09\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'fc3aff3d-c4c8-47d6-b337-579599939d30', '', '', '2018-12-03 09:52:09', '2018-12-03 09:52:09', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/fc3aff3d-c4c8-47d6-b337-579599939d30/', 0, 'customize_changeset', '', 0),
(24, 1, '2018-12-03 09:52:09', '2018-12-03 09:52:09', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.image{\n	display: none;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:52:09', '2018-12-03 09:52:09', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(25, 1, '2018-12-03 09:54:33', '2018-12-03 09:54:33', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:54:33\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'd4744372-5299-4a29-9f1b-1aee6eb6393a', '', '', '2018-12-03 09:54:33', '2018-12-03 09:54:33', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/d4744372-5299-4a29-9f1b-1aee6eb6393a/', 0, 'customize_changeset', '', 0),
(26, 1, '2018-12-03 09:54:33', '2018-12-03 09:54:33', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:54:33', '2018-12-03 09:54:33', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(27, 1, '2018-12-03 09:54:52', '2018-12-03 09:54:52', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:54:52\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '31665bcb-93a1-4803-9608-615ba71e65c6', '', '', '2018-12-03 09:54:52', '2018-12-03 09:54:52', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/31665bcb-93a1-4803-9608-615ba71e65c6/', 0, 'customize_changeset', '', 0),
(28, 1, '2018-12-03 09:54:52', '2018-12-03 09:54:52', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:54:52', '2018-12-03 09:54:52', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(29, 1, '2018-12-03 09:55:16', '2018-12-03 09:55:16', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:55:16\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'de527d26-07c9-460a-be04-f859a817c132', '', '', '2018-12-03 09:55:16', '2018-12-03 09:55:16', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/de527d26-07c9-460a-be04-f859a817c132/', 0, 'customize_changeset', '', 0),
(30, 1, '2018-12-03 09:55:16', '2018-12-03 09:55:16', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:55:16', '2018-12-03 09:55:16', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(31, 1, '2018-12-03 09:55:26', '2018-12-03 09:55:26', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:55:26\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'a89528b2-fee0-4afd-b49a-6e06f2fdc42e', '', '', '2018-12-03 09:55:26', '2018-12-03 09:55:26', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/a89528b2-fee0-4afd-b49a-6e06f2fdc42e/', 0, 'customize_changeset', '', 0),
(32, 1, '2018-12-03 09:55:26', '2018-12-03 09:55:26', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:55:26', '2018-12-03 09:55:26', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(33, 1, '2018-12-03 09:56:10', '2018-12-03 09:56:10', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:56:10\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '31529634-170a-4df7-b450-3d1d620e353a', '', '', '2018-12-03 09:56:10', '2018-12-03 09:56:10', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/31529634-170a-4df7-b450-3d1d620e353a/', 0, 'customize_changeset', '', 0),
(34, 1, '2018-12-03 09:56:10', '2018-12-03 09:56:10', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:56:10', '2018-12-03 09:56:10', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(35, 1, '2018-12-03 09:57:36', '2018-12-03 09:57:36', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:57:36\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '4671c853-e943-494e-976b-d3cf0aea55ec', '', '', '2018-12-03 09:57:36', '2018-12-03 09:57:36', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/4671c853-e943-494e-976b-d3cf0aea55ec/', 0, 'customize_changeset', '', 0),
(36, 1, '2018-12-03 09:57:36', '2018-12-03 09:57:36', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:57:36', '2018-12-03 09:57:36', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(37, 1, '2018-12-03 09:57:39', '2018-12-03 09:57:39', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n\\n\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:57:39\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '11f34b47-13b6-4bc6-a38b-5765a4330d5c', '', '', '2018-12-03 09:57:39', '2018-12-03 09:57:39', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/11f34b47-13b6-4bc6-a38b-5765a4330d5c/', 0, 'customize_changeset', '', 0),
(38, 1, '2018-12-03 09:57:39', '2018-12-03 09:57:39', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n\n', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:57:39', '2018-12-03 09:57:39', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(39, 1, '2018-12-03 09:57:43', '2018-12-03 09:57:43', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:57:43\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'a1ce8d52-ffb3-400a-b8ea-656037ed0716', '', '', '2018-12-03 09:57:43', '2018-12-03 09:57:43', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/a1ce8d52-ffb3-400a-b8ea-656037ed0716/', 0, 'customize_changeset', '', 0),
(40, 1, '2018-12-03 09:57:43', '2018-12-03 09:57:43', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:57:43', '2018-12-03 09:57:43', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(41, 1, '2018-12-03 09:58:00', '2018-12-03 09:58:00', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 20%;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:58:00\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '35212623-6b44-48df-a481-2e17347cf003', '', '', '2018-12-03 09:58:00', '2018-12-03 09:58:00', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/35212623-6b44-48df-a481-2e17347cf003/', 0, 'customize_changeset', '', 0),
(42, 1, '2018-12-03 09:58:00', '2018-12-03 09:58:00', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 20%;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:58:00', '2018-12-03 09:58:00', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(43, 1, '2018-12-03 09:58:09', '2018-12-03 09:58:09', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 10%;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:58:09\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '5928ab1c-d6a6-4452-b26b-4b24181bf07c', '', '', '2018-12-03 09:58:09', '2018-12-03 09:58:09', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/5928ab1c-d6a6-4452-b26b-4b24181bf07c/', 0, 'customize_changeset', '', 0),
(44, 1, '2018-12-03 09:58:09', '2018-12-03 09:58:09', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 10%;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:58:09', '2018-12-03 09:58:09', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(45, 1, '2018-12-03 09:58:36', '2018-12-03 09:58:36', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 10px;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:58:36\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '3f01a9a6-dc7f-4267-a32f-266587d6c259', '', '', '2018-12-03 09:58:36', '2018-12-03 09:58:36', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/3f01a9a6-dc7f-4267-a32f-266587d6c259/', 0, 'customize_changeset', '', 0),
(46, 1, '2018-12-03 09:58:37', '2018-12-03 09:58:37', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 10px;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:58:37', '2018-12-03 09:58:37', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(47, 1, '2018-12-03 09:59:29', '2018-12-03 09:59:29', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".card-started{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 43% !important;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 09:59:29\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '605931fc-38c9-4d81-b6f6-bab20382571b', '', '', '2018-12-03 09:59:29', '2018-12-03 09:59:29', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/605931fc-38c9-4d81-b6f6-bab20382571b/', 0, 'customize_changeset', '', 0),
(48, 1, '2018-12-03 09:59:29', '2018-12-03 09:59:29', '.card-started{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 43% !important;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 09:59:29', '2018-12-03 09:59:29', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(49, 1, '2018-12-03 10:00:31', '2018-12-03 10:00:31', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".profile{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 43% !important;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 10:00:30\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'f2eca7cf-d1db-4c59-ace5-81cdfa13e195', '', '', '2018-12-03 10:00:31', '2018-12-03 10:00:31', '', 0, 'http://localhost/web-teach-code/blog/?p=49', 0, 'customize_changeset', '', 0),
(50, 1, '2018-12-03 10:00:31', '2018-12-03 10:00:31', '.profile{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 43% !important;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 10:00:31', '2018-12-03 10:00:31', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(51, 1, '2018-12-03 10:08:53', '2018-12-03 10:08:53', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".profile{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 43% !important;\\n}\\n.header{\\n\\tdisplay: none;\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 10:08:53\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '0341c518-e670-4bd5-a4b3-d52eacdb283a', '', '', '2018-12-03 10:08:53', '2018-12-03 10:08:53', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/0341c518-e670-4bd5-a4b3-d52eacdb283a/', 0, 'customize_changeset', '', 0),
(52, 1, '2018-12-03 10:08:53', '2018-12-03 10:08:53', '.profile{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 43% !important;\n}\n.header{\n	display: none;\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 10:08:53', '2018-12-03 10:08:53', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(53, 1, '2018-12-03 10:14:20', '2018-12-03 10:14:20', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".profile{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 43% !important;\\n}\\n.header{\\n\\tdisplay: none;\\n}\\n.container.opened {\\n  transform: translateX(0px);\\n  -webkit-transform: translateX(0px);\\n  -moz-transform: translateX(0px);\\n  -o-transform:\\n\\t\\ttranslateX(0px);\\n\\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 10:14:20\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '0d155250-f8d8-45a3-9192-9b6444d08417', '', '', '2018-12-03 10:14:20', '2018-12-03 10:14:20', '', 0, 'http://localhost/web-teach-code/blog/?p=53', 0, 'customize_changeset', '', 0),
(54, 1, '2018-12-03 10:14:20', '2018-12-03 10:14:20', '.profile{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 43% !important;\n}\n.header{\n	display: none;\n}\n.container.opened {\n  transform: translateX(0px);\n  -webkit-transform: translateX(0px);\n  -moz-transform: translateX(0px);\n  -o-transform:\n		translateX(0px);\n\n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 10:14:20', '2018-12-03 10:14:20', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(55, 1, '2018-12-03 10:15:33', '2018-12-03 10:15:33', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \".profile{\\n\\tfloat: left;\\n\\twidth: 60%;\\n}\\n.card-inner{\\n\\tfloat: left;\\n\\tleft: 65%;\\n\\twidth: 160%;\\n}\\n.box-item .image{\\n\\tdisplay: none;\\n}\\n.image{\\n\\twidth: 43% !important;\\n}\\n.header{\\n\\tdisplay: none;\\n}\\n.container.opened {\\n \\n}\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 10:15:33\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '94cb0153-83ed-463e-ae50-487791f4cdb4', '', '', '2018-12-03 10:15:33', '2018-12-03 10:15:33', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/94cb0153-83ed-463e-ae50-487791f4cdb4/', 0, 'customize_changeset', '', 0),
(56, 1, '2018-12-03 10:15:33', '2018-12-03 10:15:33', '.profile{\n	float: left;\n	width: 60%;\n}\n.card-inner{\n	float: left;\n	left: 65%;\n	width: 160%;\n}\n.box-item .image{\n	display: none;\n}\n.image{\n	width: 43% !important;\n}\n.header{\n	display: none;\n}\n.container.opened {\n \n}', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 10:15:33', '2018-12-03 10:15:33', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(57, 1, '2018-12-03 10:20:23', '2018-12-03 10:20:23', '{\n    \"custom_css[my-vcard-resume]\": {\n        \"value\": \"\",\n        \"type\": \"custom_css\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 10:20:23\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'c2453e70-853c-4598-98e1-d78e08b1925a', '', '', '2018-12-03 10:20:23', '2018-12-03 10:20:23', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/c2453e70-853c-4598-98e1-d78e08b1925a/', 0, 'customize_changeset', '', 0),
(58, 1, '2018-12-03 10:20:23', '2018-12-03 10:20:23', '', 'my-vcard-resume', '', 'inherit', 'closed', 'closed', '', '15-revision-v1', '', '', '2018-12-03 10:20:23', '2018-12-03 10:20:23', '', 15, 'http://localhost/web-teach-code/blog/2018/12/03/15-revision-v1/', 0, 'revision', '', 0),
(59, 1, '2018-12-03 11:36:22', '2018-12-03 11:36:22', '{\n    \"nav_menu_item[-739412084235938800]\": {\n        \"value\": {\n            \"object_id\": 2,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"post_type\",\n            \"title\": \"Sample Page\",\n            \"url\": \"http://localhost/web-teach-code/blog/sample-page/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Sample Page\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:36:22\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '0c662e72-7994-4b4d-a623-95ab85ef580d', '', '', '2018-12-03 11:36:22', '2018-12-03 11:36:22', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/0c662e72-7994-4b4d-a623-95ab85ef580d/', 0, 'customize_changeset', '', 0),
(61, 1, '2018-12-03 11:37:49', '2018-12-03 11:37:49', '{\n    \"my-vcard-resume::nav_menu_locations[primary]\": {\n        \"value\": 0,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:37:49\"\n    },\n    \"nav_menu[2]\": {\n        \"value\": {\n            \"name\": \"menu1\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": true\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:37:49\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '1ba9b9c0-caba-4860-9005-f49b51288dab', '', '', '2018-12-03 11:37:49', '2018-12-03 11:37:49', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/1ba9b9c0-caba-4860-9005-f49b51288dab/', 0, 'customize_changeset', '', 0),
(62, 1, '2018-12-03 11:38:02', '2018-12-03 11:38:02', '{\n    \"my-vcard-resume::nav_menu_locations[primary]\": {\n        \"value\": 2,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:38:02\"\n    },\n    \"nav_menu[2]\": {\n        \"value\": {\n            \"name\": \"menu1\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": false\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:38:02\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '08b64c6c-df7b-4866-a953-852816b74e0d', '', '', '2018-12-03 11:38:02', '2018-12-03 11:38:02', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/08b64c6c-df7b-4866-a953-852816b74e0d/', 0, 'customize_changeset', '', 0),
(63, 1, '2018-12-03 11:38:18', '2018-12-03 11:38:18', '{\n    \"nav_menu_item[8]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"title\": \"Menu\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 1,\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:38:18\"\n    },\n    \"nav_menu_item[60]\": {\n        \"value\": {\n            \"object_id\": 2,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"post_type\",\n            \"title\": \"Menu1\",\n            \"url\": \"http://localhost/web-teach-code/blog/sample-page/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Sample Page\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:38:18\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '25d2206a-5380-46a9-8f85-5f9101590da4', '', '', '2018-12-03 11:38:18', '2018-12-03 11:38:18', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/25d2206a-5380-46a9-8f85-5f9101590da4/', 0, 'customize_changeset', '', 0),
(64, 1, '2018-12-03 11:38:32', '2018-12-03 11:38:32', '{\n    \"nav_menu_item[8]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"title\": \"C\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 1,\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:38:32\"\n    },\n    \"nav_menu_item[60]\": {\n        \"value\": {\n            \"object_id\": 2,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"post_type\",\n            \"title\": \"Java\",\n            \"url\": \"http://localhost/web-teach-code/blog/sample-page/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Sample Page\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:38:32\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '0460660c-c251-42f9-80b9-456b4b7693c6', '', '', '2018-12-03 11:38:32', '2018-12-03 11:38:32', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/0460660c-c251-42f9-80b9-456b4b7693c6/', 0, 'customize_changeset', '', 0),
(65, 1, '2018-12-03 11:49:47', '2018-12-03 11:49:47', '{\n    \"nav_menu_item[8]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"title\": \"C\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 2,\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:49:47\"\n    },\n    \"nav_menu_item[60]\": {\n        \"value\": {\n            \"object_id\": 2,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 3,\n            \"type\": \"post_type\",\n            \"title\": \"Java\",\n            \"url\": \"http://localhost/web-teach-code/blog/sample-page/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Sample Page\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:49:47\"\n    },\n    \"nav_menu_item[-2404686235563186000]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 1,\n            \"type\": \"custom\",\n            \"title\": \"Home\",\n            \"url\": \"http://localhost/web-teach-code/blog\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Home\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-03 11:49:47\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'f78e9b77-9354-499f-9314-973acc0545b8', '', '', '2018-12-03 11:49:47', '2018-12-03 11:49:47', '', 0, 'http://localhost/web-teach-code/blog/2018/12/03/f78e9b77-9354-499f-9314-973acc0545b8/', 0, 'customize_changeset', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(67, 1, '2018-12-04 09:14:45', '0000-00-00 00:00:00', '{\n    \"nav_menu_item[66]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[8]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[60]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[-5671843905867679000]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[-4480034332258566000]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"taxonomy\",\n            \"title\": \"Uncategorized\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[-7989757126619995000]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 3,\n            \"type\": \"taxonomy\",\n            \"title\": \"Uncategorized\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[-1086460066117116900]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 4,\n            \"type\": \"taxonomy\",\n            \"title\": \"Uncategorized\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[-5024102486980163000]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 5,\n            \"type\": \"taxonomy\",\n            \"title\": \"Uncategorized\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    },\n    \"nav_menu_item[-3066494936728782000]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 6,\n            \"type\": \"taxonomy\",\n            \"title\": \"Uncategorized\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/uncategorized/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Uncategorized\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 09:14:45\"\n    }\n}', '', '', 'auto-draft', 'closed', 'closed', '', '0ec70ce3-e73e-4240-b9d1-72cb32a0f450', '', '', '2018-12-04 09:14:45', '0000-00-00 00:00:00', '', 0, 'http://localhost/web-teach-code/blog/?p=67', 0, 'customize_changeset', '', 0),
(68, 1, '2018-12-04 10:03:28', '2018-12-04 10:03:28', 'You are given an array of integers representing coordinates of obstacles situated on a straight line.\r\n\r\nAssume that you are jumping from the point with coordinate <code>0</code> to the right. You are allowed only to make jumps of the same length represented by some integer.\r\n\r\nFind the minimal length of the jump enough to avoid all the obstacles.\r\n\r\nExample\r\n\r\nFor <code>inputArray = [5, 3, 6, 7, 9]</code>, the output should be\r\n<code>avoidObstacles(inputArray) = 4</code>.\r\n\r\nCheck out the image below for better understanding:\r\n\r\n<img src=\"https://codefightsuserpics.s3.amazonaws.com/tasks/avoidObstacles/img/example.png?_tm=1530791184431\" alt=\"\" />\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 0.5 seconds (c)</strong></li>\r\n 	<li><strong>[input] array.integer inputArray</strong>Non-empty array of positive integers.<em>Guaranteed constraints:</em>\r\n<code>2 ≤ inputArray.length ≤ 1000</code>,\r\n<code>1 ≤ inputArray[i] ≤ 1000</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The desired length.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'avoidObstacles', '', 'trash', 'open', 'open', '', 'avoidobstacles__trashed', '', '', '2018-12-10 02:08:55', '2018-12-09 19:08:55', '', 0, 'http://localhost/web-teach-code/blog/?p=68', 0, 'post', '', 0),
(69, 1, '2018-12-04 10:03:28', '2018-12-04 10:03:28', 'dsd', 'dsd', '', 'inherit', 'closed', 'closed', '', '68-revision-v1', '', '', '2018-12-04 10:03:28', '2018-12-04 10:03:28', '', 68, 'http://localhost/web-teach-code/blog/2018/12/04/68-revision-v1/', 0, 'revision', '', 0),
(70, 1, '2018-12-04 10:07:03', '2018-12-04 10:07:03', 'You are given an array of integers representing coordinates of obstacles situated on a straight line.\n\nAssume that you are jumping from the point with coordinate <code>0</code> to the right. You are allowed only to make jumps of the same length represented by some integer.\n\nFind the minimal length of the jump enough to avoid all the obstacles.\n\nExample\n\nFor <code>inputArray = [5, 3, 6, 7, 9]</code>, the output should be\n<code>avoidObstacles(inputArray) = 4</code>.\n\nCheck out the image below for better understanding:\n\n<img src=\"https://codefightsuserpics.s3.amazonaws.com/tasks/avoidObstacles/img/example.png?_tm=1530791184431\" alt=\"\" />\n\nInput/Output\n<ul>\n 	<li><strong>[execution time limit] 0.5 seconds (c)</strong></li>\n 	<li><strong>[input] array.integer inputArray</strong>\n\nNon-empty array of positive integers.\n\n<em>Guaranteed constraints:</em>\n<code>2 ≤ inputArray.length ≤ 1000</code>,\n<code>1 ≤ inputArray[i] ≤ 1000</code>.</li>\n 	<li><strong>[output] integer</strong>\n<ul>\n 	<li>The desired length.</li>\n</ul>\n</li>\n</ul>', 'dsd', '', 'inherit', 'closed', 'closed', '', '68-autosave-v1', '', '', '2018-12-04 10:07:03', '2018-12-04 10:07:03', '', 68, 'http://localhost/web-teach-code/blog/2018/12/04/68-autosave-v1/', 0, 'revision', '', 0),
(71, 1, '2018-12-04 10:07:12', '2018-12-04 10:07:12', 'You are given an array of integers representing coordinates of obstacles situated on a straight line.\r\n\r\nAssume that you are jumping from the point with coordinate <code>0</code> to the right. You are allowed only to make jumps of the same length represented by some integer.\r\n\r\nFind the minimal length of the jump enough to avoid all the obstacles.\r\n\r\nExample\r\n\r\nFor <code>inputArray = [5, 3, 6, 7, 9]</code>, the output should be\r\n<code>avoidObstacles(inputArray) = 4</code>.\r\n\r\nCheck out the image below for better understanding:\r\n\r\n<img src=\"https://codefightsuserpics.s3.amazonaws.com/tasks/avoidObstacles/img/example.png?_tm=1530791184431\" alt=\"\" />\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 0.5 seconds (c)</strong></li>\r\n 	<li><strong>[input] array.integer inputArray</strong>\r\n\r\nNon-empty array of positive integers.\r\n\r\n<em>Guaranteed constraints:</em>\r\n<code>2 ≤ inputArray.length ≤ 1000</code>,\r\n<code>1 ≤ inputArray[i] ≤ 1000</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The desired length.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'avoidObstacles', '', 'inherit', 'closed', 'closed', '', '68-revision-v1', '', '', '2018-12-04 10:07:12', '2018-12-04 10:07:12', '', 68, 'http://localhost/web-teach-code/blog/2018/12/04/68-revision-v1/', 0, 'revision', '', 0),
(73, 1, '2018-12-04 10:14:58', '2018-12-04 10:14:58', 'After they became famous, the CodeBots all decided to move to a new building and live together. The building is represented by a rectangular <code>matrix</code> of rooms. Each cell in the <code>matrix</code> contains an integer that represents the price of the room. Some rooms are <em>free</em> (their cost is <code>0</code>), but that\'s probably because they are haunted, so all the bots are afraid of them. That is why any room that is <em>free</em> or is located <strong>anywhere below</strong> a <em>free</em> room in the same column is not considered suitable for the bots to live in.\r\n\r\nHelp the bots calculate the total price of all the rooms that are suitable for them.\r\n\r\n<strong>Example</strong>\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[0, 1, 1, 2], \r\n          [0, 5, 0, 0], \r\n          [2, 0, 3, 3]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[x, 1, 1, 2], \r\n [x, 5, x, x], \r\n [x, x, x, x]]\r\n</code></pre>\r\nThus, the answer is <code>1 + 5 + 1 + 2 = 9</code>.\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[1, 1, 1, 0], \r\n          [0, 5, 0, 1], \r\n          [2, 1, 3, 10]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[1, 1, 1, x], \r\n [x, 5, x, x], \r\n [x, 1, x, x]]\r\n</code></pre>\r\nNote that the free room in the first row make the full column unsuitable for bots.\r\n\r\nThus, the answer is <code>1 + 1 + 1 + 5 + 1 = 9</code>.\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 3 seconds (kt)</strong></li>\r\n 	<li><strong>[input] array.array.integer matrix</strong>A 2-dimensional array of integers representing a rectangular matrix of the building.<em>Guaranteed constraints:</em>\r\n<code>1 ≤ matrix.length ≤ 5</code>,\r\n<code>1 ≤ matrix[i].length ≤ 5</code>,\r\n<code>0 ≤ matrix[i][j] ≤ 10</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The total price of all the rooms that are suitable for the CodeBots to live in.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'matrixElementsSum', '', 'trash', 'open', 'open', '', 'matrixelementssum__trashed', '', '', '2018-12-10 02:08:55', '2018-12-09 19:08:55', '', 0, 'http://localhost/web-teach-code/blog/?p=73', 0, 'post', '', 0),
(74, 1, '2018-12-04 10:14:58', '2018-12-04 10:14:58', 'After they became famous, the CodeBots all decided to move to a new building and live together. The building is represented by a rectangular <code>matrix</code> of rooms. Each cell in the <code>matrix</code> contains an integer that represents the price of the room. Some rooms are <em>free</em> (their cost is <code>0</code>), but that\'s probably because they are haunted, so all the bots are afraid of them. That is why any room that is <em>free</em> or is located <strong>anywhere below</strong> a <em>free</em> room in the same column is not considered suitable for the bots to live in.\r\n\r\nHelp the bots calculate the total price of all the rooms that are suitable for them.\r\n\r\n<strong>Example</strong>\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[0, 1, 1, 2], \r\n          [0, 5, 0, 0], \r\n          [2, 0, 3, 3]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[x, 1, 1, 2], \r\n [x, 5, x, x], \r\n [x, x, x, x]]\r\n</code></pre>\r\nThus, the answer is <code>1 + 5 + 1 + 2 = 9</code>.\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[1, 1, 1, 0], \r\n          [0, 5, 0, 1], \r\n          [2, 1, 3, 10]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[1, 1, 1, x], \r\n [x, 5, x, x], \r\n [x, 1, x, x]]\r\n</code></pre>\r\nNote that the free room in the first row make the full column unsuitable for bots.\r\n\r\nThus, the answer is <code>1 + 1 + 1 + 5 + 1 = 9</code>.\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 3 seconds (kt)</strong></li>\r\n 	<li><strong>[input] array.array.integer matrix</strong>\r\n\r\nA 2-dimensional array of integers representing a rectangular matrix of the building.\r\n\r\n<em>Guaranteed constraints:</em>\r\n<code>1 ≤ matrix.length ≤ 5</code>,\r\n<code>1 ≤ matrix[i].length ≤ 5</code>,\r\n<code>0 ≤ matrix[i][j] ≤ 10</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The total price of all the rooms that are suitable for the CodeBots to live in.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'matrixElementsSum | CodeSignal', '', 'inherit', 'closed', 'closed', '', '73-revision-v1', '', '', '2018-12-04 10:14:58', '2018-12-04 10:14:58', '', 73, 'http://localhost/web-teach-code/blog/2018/12/04/73-revision-v1/', 0, 'revision', '', 0),
(75, 1, '2018-12-04 10:15:03', '2018-12-04 10:15:03', 'After they became famous, the CodeBots all decided to move to a new building and live together. The building is represented by a rectangular <code>matrix</code> of rooms. Each cell in the <code>matrix</code> contains an integer that represents the price of the room. Some rooms are <em>free</em> (their cost is <code>0</code>), but that\'s probably because they are haunted, so all the bots are afraid of them. That is why any room that is <em>free</em> or is located <strong>anywhere below</strong> a <em>free</em> room in the same column is not considered suitable for the bots to live in.\r\n\r\nHelp the bots calculate the total price of all the rooms that are suitable for them.\r\n\r\n<strong>Example</strong>\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[0, 1, 1, 2], \r\n          [0, 5, 0, 0], \r\n          [2, 0, 3, 3]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[x, 1, 1, 2], \r\n [x, 5, x, x], \r\n [x, x, x, x]]\r\n</code></pre>\r\nThus, the answer is <code>1 + 5 + 1 + 2 = 9</code>.\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[1, 1, 1, 0], \r\n          [0, 5, 0, 1], \r\n          [2, 1, 3, 10]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[1, 1, 1, x], \r\n [x, 5, x, x], \r\n [x, 1, x, x]]\r\n</code></pre>\r\nNote that the free room in the first row make the full column unsuitable for bots.\r\n\r\nThus, the answer is <code>1 + 1 + 1 + 5 + 1 = 9</code>.\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 3 seconds (kt)</strong></li>\r\n 	<li><strong>[input] array.array.integer matrix</strong>A 2-dimensional array of integers representing a rectangular matrix of the building.\r\n\r\n<em>Guaranteed constraints:</em>\r\n<code>1 ≤ matrix.length ≤ 5</code>,\r\n<code>1 ≤ matrix[i].length ≤ 5</code>,\r\n<code>0 ≤ matrix[i][j] ≤ 10</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The total price of all the rooms that are suitable for the CodeBots to live in.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'matrixElementsSum', '', 'inherit', 'closed', 'closed', '', '73-revision-v1', '', '', '2018-12-04 10:15:03', '2018-12-04 10:15:03', '', 73, 'http://localhost/web-teach-code/blog/2018/12/04/73-revision-v1/', 0, 'revision', '', 0),
(76, 1, '2018-12-04 10:15:42', '2018-12-04 10:15:42', 'Given an array of strings, return another array containing all of its longest strings.\r\n\r\nExample\r\n\r\nFor <code>inputArray = [\"aba\", \"aa\", \"ad\", \"vcd\", \"aba\"]</code>, the output should be\r\n<code>allLongestStrings(inputArray) = [\"aba\", \"vcd\", \"aba\"]</code>.\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 3 seconds (kt)</strong></li>\r\n 	<li><strong>[input] array.string inputArray</strong>\r\n\r\nA non-empty array.\r\n\r\n<em>Guaranteed constraints:</em>\r\n<code>1 ≤ inputArray.length ≤ 10</code>,\r\n<code>1 ≤ inputArray[i].length ≤ 10</code>.</li>\r\n 	<li><strong>[output] array.string</strong>\r\n<ul>\r\n 	<li>Array of the longest strings, stored in the same order as in the <code>inputArray</code>.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'All Longest Strings', '', 'trash', 'open', 'open', '', 'all-longest-strings__trashed', '', '', '2018-12-10 02:08:45', '2018-12-09 19:08:45', '', 0, 'http://localhost/web-teach-code/blog/?p=76', 0, 'post', '', 0),
(77, 1, '2018-12-04 10:15:42', '2018-12-04 10:15:42', 'Given an array of strings, return another array containing all of its longest strings.\r\n\r\nExample\r\n\r\nFor <code>inputArray = [\"aba\", \"aa\", \"ad\", \"vcd\", \"aba\"]</code>, the output should be\r\n<code>allLongestStrings(inputArray) = [\"aba\", \"vcd\", \"aba\"]</code>.\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 3 seconds (kt)</strong></li>\r\n 	<li><strong>[input] array.string inputArray</strong>\r\n\r\nA non-empty array.\r\n\r\n<em>Guaranteed constraints:</em>\r\n<code>1 ≤ inputArray.length ≤ 10</code>,\r\n<code>1 ≤ inputArray[i].length ≤ 10</code>.</li>\r\n 	<li><strong>[output] array.string</strong>\r\n<ul>\r\n 	<li>Array of the longest strings, stored in the same order as in the <code>inputArray</code>.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'All Longest Strings', '', 'inherit', 'closed', 'closed', '', '76-revision-v1', '', '', '2018-12-04 10:15:42', '2018-12-04 10:15:42', '', 76, 'http://localhost/web-teach-code/blog/2018/12/04/76-revision-v1/', 0, 'revision', '', 0),
(78, 1, '2018-12-04 16:29:37', '2018-12-04 16:29:37', 'You are given an array of integers representing coordinates of obstacles situated on a straight line.\r\n\r\nAssume that you are jumping from the point with coordinate <code>0</code> to the right. You are allowed only to make jumps of the same length represented by some integer.\r\n\r\nFind the minimal length of the jump enough to avoid all the obstacles.\r\n\r\nExample\r\n\r\nFor <code>inputArray = [5, 3, 6, 7, 9]</code>, the output should be\r\n<code>avoidObstacles(inputArray) = 4</code>.\r\n\r\nCheck out the image below for better understanding:\r\n\r\n<img src=\"https://codefightsuserpics.s3.amazonaws.com/tasks/avoidObstacles/img/example.png?_tm=1530791184431\" alt=\"\" />\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 0.5 seconds (c)</strong></li>\r\n 	<li><strong>[input] array.integer inputArray</strong>Non-empty array of positive integers.\r\n\r\n<em>Guaranteed constraints:</em>\r\n<code>2 ≤ inputArray.length ≤ 1000</code>,\r\n<code>1 ≤ inputArray[i] ≤ 1000</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The desired length.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'avoidObstacles', '', 'inherit', 'closed', 'closed', '', '68-revision-v1', '', '', '2018-12-04 16:29:37', '2018-12-04 16:29:37', '', 68, 'http://localhost/web-teach-code/blog/2018/12/04/68-revision-v1/', 0, 'revision', '', 0),
(79, 1, '2018-12-04 16:30:16', '2018-12-04 16:30:16', '{\n    \"nav_menu_item[66]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    },\n    \"nav_menu_item[8]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    },\n    \"nav_menu_item[60]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    },\n    \"nav_menu_item[-3372575754738637000]\": {\n        \"value\": {\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 1,\n            \"type\": \"taxonomy\",\n            \"title\": \"Start\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/start/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Start\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    },\n    \"nav_menu_item[-553599605523671040]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"taxonomy\",\n            \"title\": \"Easy\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/easy/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Easy\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    },\n    \"nav_menu_item[-4101850829294416000]\": {\n        \"value\": {\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 3,\n            \"type\": \"taxonomy\",\n            \"title\": \"Medium\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/medium/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Medium\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    },\n    \"nav_menu_item[-3566653562268463000]\": {\n        \"value\": {\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 4,\n            \"type\": \"taxonomy\",\n            \"title\": \"Hard\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/hard/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Hard\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:30:16\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'be7e9221-65a7-4353-b3fa-2fb3c9ff9e35', '', '', '2018-12-04 16:30:16', '2018-12-04 16:30:16', '', 0, 'http://localhost/web-teach-code/blog/2018/12/04/be7e9221-65a7-4353-b3fa-2fb3c9ff9e35/', 0, 'customize_changeset', '', 0),
(84, 1, '2018-12-04 16:31:25', '2018-12-04 16:31:25', '{\n    \"nav_menu_item[83]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:31:23\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '6c6e1559-8089-43c0-a380-4a11c358d10f', '', '', '2018-12-04 16:31:25', '2018-12-04 16:31:25', '', 0, 'http://localhost/web-teach-code/blog/?p=84', 0, 'customize_changeset', '', 0),
(85, 1, '2018-12-04 16:33:25', '2018-12-04 16:33:25', '{\n    \"nav_menu_item[-8527417167352521000]\": {\n        \"value\": {\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 4,\n            \"type\": \"taxonomy\",\n            \"title\": \"Hard\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/hard/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Hard\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:33:25\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '4df3032f-1721-4b3e-a51b-6f2b33a9e5d5', '', '', '2018-12-04 16:33:25', '2018-12-04 16:33:25', '', 0, 'http://localhost/web-teach-code/blog/2018/12/04/4df3032f-1721-4b3e-a51b-6f2b33a9e5d5/', 0, 'customize_changeset', '', 0),
(87, 1, '2018-12-04 16:37:42', '2018-12-04 16:37:42', '<strong>Đề bài: tính tổng 2 số nguyên dương</strong>\r\n<pre>input: \r\n2 3 \r\noutput: \r\n5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'Tính tổng 2 số', '', 'publish', 'open', 'open', '', 'tinh-tong-2-so', '', '', '2018-12-10 04:13:19', '2018-12-09 21:13:19', '', 0, 'http://localhost/web-teach-code/blog/?p=87', 0, 'post', '', 0),
(88, 1, '2018-12-04 16:37:42', '2018-12-04 16:37:42', '<div class=\"de-bai\">\r\n<h4>Đề bài: tính tổng 2 số nguyên dương:</h4>\r\nVí dụ:\r\n<pre>input:\r\n2 3\r\noutput:\r\n5</pre>\r\n</div>', 'TÍNH TỔNG 2', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 16:37:42', '2018-12-04 16:37:42', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(89, 1, '2018-12-04 16:38:06', '2018-12-04 16:38:06', '<div class=\"de-bai\">\r\n<h4>Đề bài: tính tổng 2 số nguyên dương:</h4>\r\nVí dụ:\r\n<pre>input:\r\n2 3\r\noutput:\r\n5</pre>\r\n</div>', 'TÍNH TỔNG', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 16:38:06', '2018-12-04 16:38:06', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(90, 1, '2018-12-04 16:38:17', '2018-12-04 16:38:17', '<div class=\"de-bai\">\r\n<h4>Đề bài: tính tổng 2 số nguyên dương:</h4>\r\nVí dụ:\r\n<pre>input:\r\n2 3\r\noutput:\r\n5</pre>\r\n</div>', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 16:38:17', '2018-12-04 16:38:17', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(91, 1, '2018-12-04 16:45:46', '2018-12-04 16:45:46', '{\n    \"nav_menu_item[80]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/start/\",\n            \"title\": \"C\\u00f9i b\\u1eafp\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 1,\n            \"status\": \"publish\",\n            \"original_title\": \"Start\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:45:23\"\n    },\n    \"nav_menu_item[81]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/easy/\",\n            \"title\": \"D\\u1ec5\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 2,\n            \"status\": \"publish\",\n            \"original_title\": \"Easy\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:45:46\"\n    },\n    \"nav_menu_item[82]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/medium/\",\n            \"title\": \"Trung b\\u00ecnh\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 3,\n            \"status\": \"publish\",\n            \"original_title\": \"Medium\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:45:46\"\n    },\n    \"nav_menu_item[86]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/hard/\",\n            \"title\": \"Kh\\u00f3\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 4,\n            \"status\": \"publish\",\n            \"original_title\": \"Hard\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-04 16:45:46\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '396b49fb-0107-403b-8981-04c9e22162ae', '', '', '2018-12-04 16:45:46', '2018-12-04 16:45:46', '', 0, 'http://localhost/web-teach-code/blog/?p=91', 0, 'customize_changeset', '', 0),
(92, 1, '2018-12-04 17:38:16', '2018-12-04 17:38:16', 'After they became famous, the CodeBots all decided to move to a new building and live together. The building is represented by a rectangular <code>matrix</code> of rooms. Each cell in the <code>matrix</code> contains an integer that represents the price of the room. Some rooms are <em>free</em> (their cost is <code>0</code>), but that\'s probably because they are haunted, so all the bots are afraid of them. That is why any room that is <em>free</em> or is located <strong>anywhere below</strong> a <em>free</em> room in the same column is not considered suitable for the bots to live in.\r\n\r\nHelp the bots calculate the total price of all the rooms that are suitable for them.\r\n\r\n<strong>Example</strong>\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[0, 1, 1, 2], \r\n          [0, 5, 0, 0], \r\n          [2, 0, 3, 3]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[x, 1, 1, 2], \r\n [x, 5, x, x], \r\n [x, x, x, x]]\r\n</code></pre>\r\nThus, the answer is <code>1 + 5 + 1 + 2 = 9</code>.\r\n<ul>\r\n 	<li>For</li>\r\n</ul>\r\n<pre><code>matrix = [[1, 1, 1, 0], \r\n          [0, 5, 0, 1], \r\n          [2, 1, 3, 10]]\r\n</code></pre>\r\nthe output should be\r\n<code>matrixElementsSum(matrix) = 9</code>.\r\n\r\nHere\'s the rooms matrix with unsuitable rooms marked with <code>\'x\'</code>:\r\n<pre><code>[[1, 1, 1, x], \r\n [x, 5, x, x], \r\n [x, 1, x, x]]\r\n</code></pre>\r\nNote that the free room in the first row make the full column unsuitable for bots.\r\n\r\nThus, the answer is <code>1 + 1 + 1 + 5 + 1 = 9</code>.\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 3 seconds (kt)</strong></li>\r\n 	<li><strong>[input] array.array.integer matrix</strong>A 2-dimensional array of integers representing a rectangular matrix of the building.<em>Guaranteed constraints:</em>\r\n<code>1 ≤ matrix.length ≤ 5</code>,\r\n<code>1 ≤ matrix[i].length ≤ 5</code>,\r\n<code>0 ≤ matrix[i][j] ≤ 10</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The total price of all the rooms that are suitable for the CodeBots to live in.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'matrixElementsSum', '', 'inherit', 'closed', 'closed', '', '73-revision-v1', '', '', '2018-12-04 17:38:16', '2018-12-04 17:38:16', '', 73, 'http://localhost/web-teach-code/blog/2018/12/04/73-revision-v1/', 0, 'revision', '', 0),
(93, 1, '2018-12-04 17:38:29', '2018-12-04 17:38:29', 'You are given an array of integers representing coordinates of obstacles situated on a straight line.\r\n\r\nAssume that you are jumping from the point with coordinate <code>0</code> to the right. You are allowed only to make jumps of the same length represented by some integer.\r\n\r\nFind the minimal length of the jump enough to avoid all the obstacles.\r\n\r\nExample\r\n\r\nFor <code>inputArray = [5, 3, 6, 7, 9]</code>, the output should be\r\n<code>avoidObstacles(inputArray) = 4</code>.\r\n\r\nCheck out the image below for better understanding:\r\n\r\n<img src=\"https://codefightsuserpics.s3.amazonaws.com/tasks/avoidObstacles/img/example.png?_tm=1530791184431\" alt=\"\" />\r\n\r\nInput/Output\r\n<ul>\r\n 	<li><strong>[execution time limit] 0.5 seconds (c)</strong></li>\r\n 	<li><strong>[input] array.integer inputArray</strong>Non-empty array of positive integers.<em>Guaranteed constraints:</em>\r\n<code>2 ≤ inputArray.length ≤ 1000</code>,\r\n<code>1 ≤ inputArray[i] ≤ 1000</code>.</li>\r\n 	<li><strong>[output] integer</strong>\r\n<ul>\r\n 	<li>The desired length.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'avoidObstacles', '', 'inherit', 'closed', 'closed', '', '68-revision-v1', '', '', '2018-12-04 17:38:29', '2018-12-04 17:38:29', '', 68, 'http://localhost/web-teach-code/blog/2018/12/04/68-revision-v1/', 0, 'revision', '', 0),
(94, 1, '2018-12-04 20:57:06', '2018-12-04 20:57:06', '', 'fdfd', '', 'trash', 'open', 'open', '', '__trashed', '', '', '2018-12-04 20:57:06', '2018-12-04 20:57:06', '', 0, 'http://localhost/web-teach-code/blog/?p=94', 0, 'post', '', 0),
(95, 1, '2018-12-05 02:58:03', '2018-12-05 02:58:03', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\n\nVí dụ:\n<pre>input: 2 3 \noutput: 5</pre>\nstart-test\n\ninput: 2\\n3 output: 5 ;\n\ninput: 100\\n100 output: 200 ;\n\ninput: 60\\n40 output: 100 ;\n\ninput: 100\\n50 output: 150 ;\n\ninput: 20\\n50 output: 150 ;\n\ninput: 100\\n50 output: 150 ;\n\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-autosave-v1', '', '', '2018-12-05 02:58:03', '2018-12-05 02:58:03', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-autosave-v1/', 0, 'revision', '', 0),
(96, 1, '2018-12-04 17:54:47', '2018-12-04 17:54:47', '<div class=\"de-bai\">\r\n\r\nĐề bài: tính tổng 2 số nguyên dương:\r\n\r\nVí dụ:\r\n\r\ninput: 2 3 output: 5\r\n<pre>&lt;testcase&gt;\r\n&lt;? 2\\n3 : 5 ?&gt;\r\n&lt;? 100\\n100 : 200 ?&gt;\r\n&lt;/testcase&gt;</pre>\r\n</div>', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 17:54:47', '2018-12-04 17:54:47', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(97, 1, '2018-12-04 17:55:17', '2018-12-04 17:55:17', '<div class=\"de-bai\">\r\n\r\nĐề bài: tính tổng 2 số nguyên dương:\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\n<pre>&lt;testcase&gt;\r\n&lt;? 2\\n3 : 5 ?&gt;\r\n&lt;? 100\\n100 : 200 ?&gt;\r\n&lt;/testcase&gt;</pre>\r\n</div>', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 17:55:17', '2018-12-04 17:55:17', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(98, 1, '2018-12-04 17:56:32', '2018-12-04 17:56:32', '<div class=\"de-bai\">\r\n\r\nĐề bài: tính tổng 2 số nguyên dương:\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\n<pre>\r\n<testcase>\r\n<? 2\\n3 : 5 ?>\r\n<? 100\\n100 : 200 ?>\r\n</testcase>\r\n</pre>\r\n</div>', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 17:56:32', '2018-12-04 17:56:32', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(99, 1, '2018-12-04 18:04:13', '2018-12-04 18:04:13', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 18:04:13', '2018-12-04 18:04:13', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(100, 1, '2018-12-04 20:57:06', '2018-12-04 20:57:06', '', 'fdfd', '', 'inherit', 'closed', 'closed', '', '94-revision-v1', '', '', '2018-12-04 20:57:06', '2018-12-04 20:57:06', '', 94, 'http://localhost/web-teach-code/blog/2018/12/04/94-revision-v1/', 0, 'revision', '', 0),
(101, 1, '2018-12-04 21:19:22', '2018-12-04 21:19:22', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:19:22', '2018-12-04 21:19:22', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(102, 1, '2018-12-04 21:31:13', '2018-12-04 21:31:13', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5    ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:31:13', '2018-12-04 21:31:13', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(103, 1, '2018-12-04 21:32:10', '2018-12-04 21:32:10', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:32:10', '2018-12-04 21:32:10', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(104, 1, '2018-12-04 21:32:38', '2018-12-04 21:32:38', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5     ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:32:38', '2018-12-04 21:32:38', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(105, 1, '2018-12-04 21:32:49', '2018-12-04 21:32:49', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5       ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:32:49', '2018-12-04 21:32:49', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(106, 1, '2018-12-04 21:33:04', '2018-12-04 21:33:04', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:33:04', '2018-12-04 21:33:04', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(107, 1, '2018-12-04 21:33:24', '2018-12-04 21:33:24', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5      ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:33:24', '2018-12-04 21:33:24', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(108, 1, '2018-12-04 21:33:40', '2018-12-04 21:33:40', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output:     5      ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:33:40', '2018-12-04 21:33:40', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(109, 1, '2018-12-04 21:36:50', '2018-12-04 21:36:50', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output:       5      ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:36:50', '2018-12-04 21:36:50', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(110, 1, '2018-12-04 21:37:15', '2018-12-04 21:37:15', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output:         5      ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:37:15', '2018-12-04 21:37:15', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(111, 1, '2018-12-04 21:37:35', '2018-12-04 21:37:35', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output:                                  5      ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:37:35', '2018-12-04 21:37:35', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(112, 1, '2018-12-04 21:38:20', '2018-12-04 21:38:20', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5\\n5 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:38:20', '2018-12-04 21:38:20', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(113, 1, '2018-12-04 21:45:56', '2018-12-04 21:45:56', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n5 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-04 21:45:56', '2018-12-04 21:45:56', '', 87, 'http://localhost/web-teach-code/blog/2018/12/04/87-revision-v1/', 0, 'revision', '', 0),
(114, 1, '2018-12-05 02:04:19', '2018-12-05 02:04:19', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 02:04:19', '2018-12-05 02:04:19', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0),
(115, 1, '2018-12-05 02:58:21', '2018-12-05 02:58:21', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 02:58:21', '2018-12-05 02:58:21', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0),
(116, 1, '2018-12-05 14:26:51', '2018-12-05 14:26:51', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\n&nbsp;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 14:26:51', '2018-12-05 14:26:51', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0),
(117, 1, '2018-12-05 14:32:12', '2018-12-05 14:32:12', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 14:32:12', '2018-12-05 14:32:12', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(118, 1, '2018-12-05 14:36:09', '2018-12-05 14:36:09', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\n&nbsp;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 14:36:09', '2018-12-05 14:36:09', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0),
(119, 1, '2018-12-05 14:47:45', '2018-12-05 14:47:45', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 14:47:45', '2018-12-05 14:47:45', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0),
(120, 1, '2018-12-05 14:48:12', '2018-12-05 14:48:12', '<strong>Đề bài: tính tổng 2 số nguyên dương:</strong>\r\n\r\nVí dụ:\r\n<pre>input: 2 3 \r\noutput: 5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-05 14:48:12', '2018-12-05 14:48:12', '', 87, 'http://localhost/web-teach-code/blog/2018/12/05/87-revision-v1/', 0, 'revision', '', 0),
(121, 1, '2018-12-10 01:15:44', '2018-12-09 18:15:44', 'Ở các bài trước, chúng ta đã làm quen với một số chương trình mà in lên màn hình một số thông tin. Bài này chúng ta sẽ tìm hiểu kỹ hơn về cách nhập xuất trong C.\r\n<h2><span id=\"1_Chuoi_dinh_dang_du_lieu\">1. Chuỗi định dạng dữ liệu</span></h2>\r\nTrước khi đến với phần nhập, xuất dữ liệu cho các biến mình sẽ nói về một số định dạng để nhập và xuất. Sau đây là các dấu mô tả định dạng:\r\n<ul>\r\n 	<li>%c : Ký tự đơn</li>\r\n 	<li>%s : Chuỗi</li>\r\n 	<li>%d : Số nguyên hệ 10 có dấu</li>\r\n 	<li>%f : Số chấm động (VD 5.54 khi in sẽ ra 5.540000)</li>\r\n 	<li>%e : Số chấm động (ký hiệu có số mũ)</li>\r\n 	<li>%g : Số chấm động (VD 5.54 khi in sẽ in ra 5.54)</li>\r\n 	<li>%x : Số nguyên hex không dấu (hệ 16)</li>\r\n 	<li>%o : Số nguyên bát phân không dấu (hệ 8)</li>\r\n 	<li>l : Tiền tố dùng kèm với %d, %x, %o để chỉ số nguyên dài (ví dụ%ld)</li>\r\n</ul>\r\n<h2><span id=\"2_Xuat_du_lieu_dung_printf\">2. Xuất dữ liệu dùng printf</span></h2>\r\nChúng ta sử dụng hàm <strong>printf</strong> để xuất dữ liệu ra màn hình console (từ print có nghĩa là in). Kết hợp với các chuỗi định dạng ở trên, chúng ta xét một ví dụ đơn giản sau.\r\n<h3><span id=\"Vi_du_1\">Ví dụ 1:</span></h3>\r\n<div>\r\n<div id=\"highlighter_484990\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 12;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b = 13.5;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">c = </code><code class=\"cpp string\">\'Q\'</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">d = 3454;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">* s = </code><code class=\"cpp string\">\"nguyenvanquan7826\"</code><code class=\"cpp plain\">; </code><code class=\"cpp comments\">// khai bao kieu chuoi</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi du ve su dung lenh printf\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong cua %d va %f la %f \\n\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tich cua %d va %ld la %ld \\n\"</code><code class=\"cpp plain\">, a, d, a*d);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ky tu c la: %c \\n\"</code><code class=\"cpp plain\">, c);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Chuoi s la: %s \\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dinh dang so mu cua b la %e \\n\"</code><code class=\"cpp plain\">, b);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So he 16 va he 8 cua %d la %x va %o \\n\"</code><code class=\"cpp plain\">, a, a, a);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ma ASCII cua %c la %d\"</code><code class=\"cpp plain\">, c, c);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ trên mình có dùng một số ký tự điều khiển (\\n – xuống dòng) đã được đề cập ở bài trươc, các bạn có thể xem lại nếu không nhớ. Các bạn chạy chương trình và rút ra nhận xét cho riêng mình.\r\n\r\nMình giải thích 1 câu lệnh để làm rõ hơn việc xuất của chúng ta.\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/xuatdulieu.png\" alt=\"Xuất dữ liệu\" /></center><center><em>Câu lệnh printf để in các biến tương ứng</em></center>Chuỗi định dạng được đặt trong ngoặc kép: <strong>“”</strong>. Tương ứng với mỗi định dạng là một biến có kiểu tương ứng, nếu khác kiểu sẽ dẫn đến sai sót.\r\n\r\nCác bạn cũng chú ý là đối với số nguyên và ký tự có sự qua lại với nhau thông qua mã ASCII nên chúng ta có thể in mã của ký tự bằng định dạng %d và cũng có thể in ký tự có mã là số nào đó thông qua định dạng %c. Tuy nhiên bản chất của biến không thay đổi. Ở Vd trên câu lệnh in mã ASCII của c sẽ cho số nguyên nhưng bản chất c vẫn là một biến kiểu char.\r\n<h3><span id=\"Vi_du_2\">Ví dụ 2:</span></h3>\r\n<div>\r\n<div id=\"highlighter_922076\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 12;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b = 13.5;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">c = </code><code class=\"cpp string\">\'Q\'</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">d = 3454;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">s[] = </code><code class=\"cpp string\">\"nguyenvanquan7826\"</code><code class=\"cpp plain\">; </code><code class=\"cpp comments\">// khai bao kieu chuoi</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%6d %5.3f %.3f \\n\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5d %5ld %5ld \\n\"</code><code class=\"cpp plain\">, a, d, a*d);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%5c \\n\"</code><code class=\"cpp plain\">, c);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%30s \\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn thấy ví dụ này chúng ta dùng các định dạng %d, %f nhưng lại chèn thêm các số ở giữa thành %6d, %5.3f. Ý nghĩa của chúng như sau:\r\n<ul>\r\n 	<li>%5c : Xuất ký tự có bề rộng 5</li>\r\n 	<li>%5d : Số nguyên có bề rộng 5</li>\r\n 	<li>%20s : Xuất chuỗi có bề rộng 20</li>\r\n 	<li>%5.3f : Xuất số thực có bề rộng 5 trong đó có 3 số sau dấu phẩy</li>\r\n 	<li>%-5d : Số nguyên có bề rộng 5 nhưng căn lề trái</li>\r\n</ul>\r\nCác bạn chạy chương trình, xem kết quả để thấy rõ hơn. Trong TH nếu bề rộng của chúng ta có kích thước bé hơn độ dài của số thì sao? Ví dụ chúng ta có số int a = 1234 nhưng chỉ in là %2d, rõ ràng dành 2 phần trống là ít hơn số a có 4 chữ số nhưng kết quả là số vẫn được in đầy đủ. Các bạn có thể thử.\r\n<h3><span id=\"Vi_du_3\">Ví dụ 3:</span></h3>\r\nĐặt bài toán là giả sử chúng ta có các biến thể hiện ngày tháng năm sinh bất kỳ (ví dụ ngay = 12, thang = 8, nam = 1992). Hãy in ra theo định dạng là dd/mm/yyyy. Nghĩa là chúng ta phải in ra kết quả 12/08/1992.\r\n<div>\r\n<div id=\"highlighter_732568\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay = 12;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">thang = 8;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">nam = 1992;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"KQ: %02d/%02d/%04d\\n\"</code><code class=\"cpp plain\">, ngay, thang, nam);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ trên, các bạn chú ý chúng ta dùng <strong>%02d</strong> nghĩa là sao? Nhĩa là số in ra sẽ có 2 chữ số, nếu ban đầu số có ít hơn 2 thì sẽ thêm số 0 đằng trước để đủ 2 chữ số. Ví dụ số 8 sẽ thành 08. Nếu dùng %05d thì sẽ là 00008.\r\n<h2><span id=\"3_Nhap_du_lieu_dung_scanf\">3. Nhập dữ liệu dùng scanf</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nTrong các ví dụ trước, chúng ta chỉ khai báo biến và gán giá trị cho biến nhưng như thế làm chương trình không linh hoạt vì chỉ hoạt động với những giá trị đã định trước, muốn hoạt động với các dữ liệu khác nhau chúng ta lại phải sửa lại code, như vậy thì không phải một chương trình tốt. Một chương trình phần mềm làm ra là phải dành cho nhiều bộ giá trị khác nhau có thể dùng được.\r\n\r\nChính vì vậy dữ liệu sẽ được đưa vào trong quá trình phần mềm được dùng và cụ thể đơn giản là nhập dữ liệu vào từ bàn phím. Chúng ta sử dụng lệnh <strong>scanf</strong> để nhập dữ liệu từ bàn phím (từ scan có nghĩa là quét và chúng ta dùng để quét dữ lệu từ bàn phím).\r\n<h3><span id=\"Vi_du_1-2\">Ví dụ 1:</span></h3>\r\n<div>\r\n<div id=\"highlighter_891268\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so nguyen a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so thuc b = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f\"</code><code class=\"cpp plain\">, &amp;b);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"a = %d \\t b = %.3f\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nViệc sử dụng lệnh <strong>scanf</strong> kết hợp với chuỗi định dạng để nhập dữ liệu sẽ tương tự như khi xuất dữ liệu bằng lệnh <strong>printf</strong>.\r\n\r\n<strong>Chú ý đừng quên ký tự &amp; trước mỗi biến khi nhập. Nếu không sẽ sai.</strong>\r\n<h3><span id=\"Vi_du_2-2\">Ví dụ 2:</span></h3>\r\n<div>\r\n<div id=\"highlighter_78312\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">/* Tinh dien tich hinh chu nhat */</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, b;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap chieu dai, chieu rong: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d%d\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dien tich HCN: %d\\n\"</code><code class=\"cpp plain\">, a * b);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ ví dụ trên, các bạn thấy chúng ta có thể dùng 1 lệnh scanf để nhập dữ liệu cho nhiều biến, mỗi biến tương ứng với 1 định dạng nhất định.\r\n<h2><span id=\"4_Nhap_chuoi_trong_C\">4. Nhập chuỗi trong C</span></h2>\r\n<h3><span id=\"41_Loi_khi_nhap_chuoi_bang_scanf\">4.1 Lỗi khi nhập chuỗi bằng scanf</span></h3>\r\nNếu các bạn dùng hàm scanf để nhập chuỗi thì bạn sẽ thấy rằng không thể nhập được chuỗi có dấu cách hoặc nếu trước đó bạn nhập số thì sau đó không nhập được chuỗi nữa. Nếu không tin bạn có thể thử chạy với chương trình sau:\r\n<div>\r\n<div id=\"highlighter_212652\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tuoi = 0;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 30 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">ten[30], tenNguoiYeu[30];</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho va ten cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%s\"</code><code class=\"cpp plain\">, ten); </code><code class=\"cpp comments\">// nhap chuoi khong can dau &amp;</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban bao nhieu tuoi roi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;tuoi);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguoi yeu cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%s\"</code><code class=\"cpp plain\">, tenNguoiYeu);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n====\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\"</code><code class=\"cpp plain\">, ten, tuoi, tenNguoiYeu);</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả là bạn sẽ không nhập được tuổi và tên người yêu như hình sau.\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/Chap3_NhapChuoi.png?w=780&amp;ssl=1\" alt=\"Troi Lenh Trong C\" width=\"776\" height=\"171\" /></center><center><em>Kết quả khi dùng scanf để nhập chuỗi</em></center>Lý do là scanf chỉ đọc được dữ liệu không có khoảng trắng (đấu cách, dấu tab, enter, …) và các khoảng cách này sẽ được lưu vào bộ đệm bàn phím do đó bạn chỉ nhận được chuỗi đầu tiên trước đấu cách mà thôi (chữ <strong>Nguyen</strong>), sau mỗi dấu cách, các giá trị tiếp theo nếu phù hợp với kiểu dữ liệu của các biến tiếp theo thì nó sẽ gán luôn cho chúng và bạn sẽ không được nhập nữa. Do <strong>tuoi</strong> kiểu nguyên nên không nhận được, <strong>tenNguoiYeu</strong> sẽ nhận giá trị tiếp theo trong các giá trị nhận được là chữ <strong>Van</strong>.\r\n<h3><span id=\"42_Hien_tuong_troi_lenh\">4.2 Hiện tượng trôi lệnh</span></h3>\r\nHiện tượng như trên được gọi là hiện tượng trôi lệnh. Nếu bây giờ bạn thực hiện cho nhập số trước và chuỗi ngay sau đó thì hiện tượng này cũng xảy ra vì <strong>scanf</strong> chỉ đọc số theo đúng định dạng mà không đọc được phím enter khi bạn nhấn lúc nhập xong số (enter là ký tự hoặc cũng có thể coi là chuỗi), nó được lưu vào bộ đệm và khi đọc giá trị nhập cho chuỗi nó tìm trong bộ đệm thấy ký tự enter là kiểu chuỗi nên nó gán luôn cho chuỗi đó.\r\n\r\nĐể nhập được chuỗi có khoảng trắng (dấu cách) chúng ta sử dụng hàm gets.\r\n\r\nĐể không bị trôi lệnh khi nhập số trước và chuỗi sau ta cần xóa bộ đệm bàn phím bằng lệnh <strong>fflush(stdin);</strong> ngay sau khi nhập số.\r\n<div>\r\n<div id=\"highlighter_315767\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tuoi = 0;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 30 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">ten[30], tenNguoiYeu[30];</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho va ten cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(ten); </code><code class=\"cpp comments\">// nhap chuoi khong can dau &amp;</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban bao nhieu tuoi roi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;tuoi);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguoi yeu cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(tenNguoiYeu);</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n====\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\"</code><code class=\"cpp plain\">, ten, tuoi, tenNguoiYeu);</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nNếu bạn dùng Linux thì <strong>fflush(stdin);</strong> sẽ không hoạt động, bạn có thể khắc phục bằng cách nhập vào 1 chuỗi tạm ngay sau khi nhập số. Việc nhập chuỗi tạm này chỉ để xóa bỏ các ký tự, chuỗi ký tự thừa có trong bộ đệm như sau (cách này cũng dùng được khi bạn làm trên windows).\r\n<div>\r\n<div id=\"highlighter_6939\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tuoi = 0;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 30 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">ten[30], tenNguoiYeu[30], temp[255];</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho va ten cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(ten); </code><code class=\"cpp comments\">// nhap chuoi khong can dau &amp;</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban bao nhieu tuoi roi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;tuoi);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">//fflush(stdin);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(temp);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguoi yeu cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(tenNguoiYeu);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n====\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\"</code><code class=\"cpp plain\">, ten, tuoi, tenNguoiYeu);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"5_Giai_thich_mot_chut_ve_printf_scanf_va_stdioh\">5. Giải thích một chút về printf, scanf và stdio.h</span></h2>\r\n<h3><span id=\"51_Chu_f_trong_printf_va_scanf\">5.1 Chữ f trong printf và scanf</span></h3>\r\nNhư các bạn đã biết <strong>print</strong> nghĩa là <strong>in</strong>, <strong>scan</strong> là <strong>quét</strong> hay ta gọi trong này là để nhập. Vậy tại sao chúng lại có chữ <strong>f</strong>đằng sau để thành <strong>printf</strong> và <strong>scanf</strong> ?\r\n\r\nChữ <strong>f</strong> này có nghĩa là <strong>format</strong> (định dạng). Như các bạn thấy chúng ta nhập hoặc xuất các giá trị của các biến đều có định dạng % gì đó ví dụ %d là số nguyên, %f là số thực,… và chữ <strong>f</strong> này chính là có ý nghĩa như thế.\r\n<h3><span id=\"52_Thu_vien_stdioh\">5.2 Thư viện stdio.h ?</span></h3>\r\nTrong tất cả các chương trình từ trước tới giờ, chúng ta luôn có <code>#include &lt;stdio.h&gt;</code>, vậy nó là gì?\r\n\r\n<code>#include</code> nghĩa là bao gồm tức là chương trình của chúng ta sẽ khai báo sử dụng một cái gì đó, mà ở đây là sử dụng thư viện <code>stdio.h</code>\r\n\r\nVậy <strong>stdio.h</strong> là gì? <strong>std</strong> viết tắt của <strong>standard</strong> , <strong>i</strong> viết tắt của <strong>input</strong>, <strong>o</strong> viết tắt của <strong>output</strong>, <strong>h</strong> viết tắt của <strong>header</strong> (header – đầu, trên đầu – vì nó được khai báo ở trên đầu của các chương trình). Vậy nó có nghĩa là <strong>standard input output – nhập xuất chuẩn</strong>. Chúng ta hiểu nó là thư viện phục vụ cho việc nhập xuất chuẩn của chương trình. Nhập xuất chuẩn chính là nhập từ bàn phím và xuất ra màn hình. Có còn rất nhiều nguồn nhập xuất như nhập từ file, nhập từ con trỏ chuột,… xuất ra máy in, xuất ra file,… nhưng họ coi <strong>bàn phím và màn hình là hệ thống nhập xuất chuẩn</strong>.\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào một số a bất kỳ và in ra giá trị a<sup>2</sup>, a<sup>3</sup>, a<sup>4</sup></li>\r\n 	<li>Viết chương trình đọc từ bàn phím 3 số nguyên biểu diễn ngày, tháng, năm và xuất ra màn hình dưới dạng “dd/mm/yyyy”.</li>\r\n 	<li>Viết chương trình đọc và 2 số nguyên và in ra kết quả của phép (+), phép trừ (-), phép nhân (*), phép chia (/). Nhận xét kết quả chia 2 số nguyên.</li>\r\n 	<li>Viết chương trình nhập vào bán kính hình cầu, tính và in ra diện tích, thể tích của hình cầu đó.\r\nHướng dẫn: S = 4πR^2 và V = (4/3)πR^3.</li>\r\n 	<li>Nhập vào một số là số giây, đổi số giây này ra giờ phút giây và xuất theo dạng gio:phut:giay, mỗi thành phần có 2 chữ số. Ví dụ 3661 = 01:01:01.</li>\r\n</ol>\r\n</blockquote>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<div id=\"jp-relatedposts\" class=\"jp-relatedposts\"></div>', 'Lập trình C: Bài 3 – Nhập xuất trong c', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-3-nhap-xuat-trong-c', '', '', '2018-12-10 04:09:30', '2018-12-09 21:09:30', '', 0, 'http://localhost/web-teach-code/blog/?p=121', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(122, 1, '2018-12-09 14:06:00', '2018-12-09 14:06:00', '1. Giới thiệu về lập trình\r\nChắc hẳn bạn đã được tiếp xúc với máy tính, điện thoại dù ít hay nhiều và dùng các ứng dụng hoặc trò chơi trên đó ví như Word, Excel để làm việc văn phòng hoặc dùng Chrome, Firefox để vào Facebook, Google hay chính Facebook và Google là các phầm mềm.\r\n\r\nBạn tưởng tượng lập trình là quá trình bạn tạo ra các phần mềm, ứng dụng như thế. Bạn tạo ra ứng dụng cho người khác dùng, làm việc; bạn tạo ra game cho người khác chơi, làm ra website cho người khác truy cập vào. Nghĩ đến đây đã thấy hứng thú rồi 🙂\r\n\r\nĐể làm ra được phần mềm (hoặc game, website) thì chúng ta phải dạy cho máy tính cách làm việc hay nói cách khác là đưa các quy tắc mà chúng ta mong muốn để máy tính thực hiện như là khi ấn nút lên trên thì nhân vật phải nhảy lên, ấn nút sang trái thì nhân vật sẽ đi sang trái.\r\n\r\nGiống như dạy cho ai đó phải làm gì thì bạn phải nói cho họ nghe hoặc viết chữ để đưa cho họ đọc và từ đó họ mới hiểu được bạn nói gì. Việc đưa các quy tắc này vào máy tính để nó hiểu được bạn muốn làm gì mà thực hiện theo cũng vậy, bạn cần viết các yêu cầu đó theo một cú pháp cụ thể mà cái đó gọi là ngôn ngữ lập trình.\r\n\r\nNgôn ngữ lập trình cũng giống như tiếng Việt để người Việt giao tiếp và hiểu, tiếng Anh dùng cho người Anh, Mỹ và nhiều nước khác, … ngôn ngữ lập trình nó là ngôn ngữ để người nói cho máy tính hiểu. Hiện nay có nhiều ngôn ngữ lập trình khác nhau như C, C++, Java, C#, PHP, python,… mỗi ngôn ngữ có ưu nhược điểm riêng và có ứng dụng trong các lĩnh vực nhất định.\r\n\r\n2. Lập trình C\r\nLập trình C đơn giản là các bạn dùng Ngôn ngữ lập trình C để tạo ra các phần mềm.\r\n\r\nMỗi phần mềm hay gọi là chương trình (chương trình máy tính) sẽ được viết bởi ngôn ngữ C bằng một hay nhiền file với những quy tắc nhất định của ngôn ngữ mà chúng ta sẽ dần tìm hiểu.\r\n\r\n3. Cài đặt công cụ\r\n3.1 Cài đặt\r\nĐể có thể lập trình C thì các bạn cần cài bộ dịch gcc hoặc g++. Tuy nhiên để dễ dàng thì hiện tại có nhiều phần mềm tích hợp (hay gọi là môi trường phát triển – IDE) để chúng ta có thể dễ dàng.\r\n\r\nĐối với các bạn dùng Windows có thể download Dev-C++ hoặc Code::Blocks về cài đặt và chúng ta có thể dùng ngay để viết các chương trình đơn giản.\r\nĐối với các bạn dùng Linux (ubuntu, Linux Mint,…) có thể cài bằng cách mở terminal lên và chạy lệnh cài đặt sau:\r\n\r\nsudo apt-get install build-essential\r\n\r\nSau khi chạy lệnh trên, các bạn có thể mở bất cứ trình soạn thảo nào để code (như gedit, vim, hay sublime-text,…) sau đó dịch, chạy chương trình bằng terminal.\r\nHoặc các bạn cũng hoàn toàn có thể download và cài Code::Blocks trên Linux để dùng rất tiện, hoặc dùng lệnh cài:\r\n\r\nsudo apt-get install codeblocks\r\n\r\nCác bạn có thể xem thêm chi tiết về Lập trình C/C++ trên Ubuntu (Linux) tại blog của mình\r\n\r\nĐể dễ và thống nhất trong quá trình làm, mình sẽ dùng Dev-C++ nhé.\r\n\r\n3.2 Giới thiệu cơ bản về Dev-C++\r\nĐể tiện hình dung, các bạn mở Dev-C++ lên sẽ thấy giao diện như hình sau (Hiện tại bản mình đang dùng là 5.11, các bạn dùng bản khác có thể sẽ có một chút khác nhưng sẽ không đáng kể).\r\n\r\nDev-C++\r\nGiao diện Dev-C++ 5.11\r\nTrong hình trên, có một số phần chính mình đánh dấu bằng các số với ý nghĩa sau:\r\n1. Nút tạo file mới\r\n2. Nút mở một file đã có\r\n3. Nút biên dịch và chạy chương trình\r\n4. Vùng soạn thảo code (mã chương trình)\r\n5. Vùng hiển thị lỗi nếu có.\r\n\r\n4. Tạo chương trình đầu tiên\r\nBây giờ các bạn có thể viết chương trình phần mềm đầu tiên để thử nghiệm.\r\nB1: Tạo 1 file mới.\r\nB2: Gõ hoặc chép đoạn code sau vào vùng soạn thảo.\r\n\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n#include\r\n\r\nint main()\r\n{\r\nprintf(\"Welcome\");\r\nreturn 0;\r\n}\r\nB3: Lưu lại với tên file là Test.c hoặc Test.cpp\r\nB4: Click nút chạy chương trình và bạn sẽ thấy một màn hình màu đen hiện lên như sau:\r\n\r\nDev-C++\r\nChương trình C đầu tiên khi chạy\r\nTrong đó các bạn có thể thấy chữ Welcome hiện lên, đó chính là dòng chữ được in ra khi dùng lệnh printf. Phần dưới đường kẻ ngang là do Dev-C tự sinh ra.\r\n\r\nMình giải thích một chút về code:\r\n\r\nDòng 1: Chứa phát biểu tiền xử lý #include . Vì trong chương trình này ta sử dụng các lệnh trong thư viện của C là printf, do đó bạn cần phải có khai báo của hàm thư viện này để báo cho trình biên dịch C biết. Nếu không khai báo chương trình sẽ báo lỗi. Thư viện stdio.h viết tắt của standard input output (std – i – o) là thư viện nhập xuất chuẩn).\r\nDòng 3: ** int main() là thành phần chính của mọi chương trình C. Mọi chương trình C đều bắt đầu thi hành từ hàm **main. Cặp dấu ngoặc () cho biết đây là khối hàm (function). Hàm main() có từ khóa int đầu tiên cho biết hàm này trả về giá trị kiểu nguyên (int).\r\n\r\nDòng 4 và 7: cặp dấu ngoặc móc {} giới hạn thân của hàm. Thân hàm bắt đầu bằng dấu { và kết thúc bằng dấu }.\r\n\r\nDòng 5: printf (\"Welcome\");, chỉ thị cho máy in ra chuỗi ký tự nằm trong nháy kép \"\". Hàng này được gọi là một câu lệnh, kết thúc một câu lệnh trong C phải là dấu chấm phẩy( ; ).\r\n\r\nDòng 6: return 0; Trả về giá trị kiểu nguyên là 0 theo như đúng ban đầu là khai báo int main().\r\n\r\nLưu ý:\r\n\r\nTrong chương trình này mình không dùng thư viện conio.h vì trong chuẩn C không có thư viện này, và từ đó cũng không dùng được getch() để dừng màn hình mà mình đã thay bằng lệnh system(\"pause\"); trong thư viện stdlib.h\r\nKhi dùng return để trả về giá trị của hàm thì các bạn có thể bỏ qua lệnh này chương trình vẫn chạy nhưng về chuẩn là sai, trả về 1 cũng sai, tóm lại là trả về 0. Nếu trả về 1 số khác không thì hệ thống máy tính sẽ hiểu là chương trình này của bạn sau khi chạy phát sinh ra cần đó lỗi.\r\nBây giờ các bạn mở folder chứa file Test.c mà bạn vừa tạo ra, các bạn sẽ nhìn thấy một file có tên Test.exe (gọi tắt là file exe), đây chính là file chạy chương trình. Bây giờ nếu muốn bạn có thể click chuột vào file exe này là chạy được chương trình trên hoặc bạn có thể copy file exe này sang máy tính khác thì vẫn có thể chạy được, nó giống như bạn copy game từ máy này sang máy khác vậy.\r\n\r\nTừ đây ta có:\r\n\r\nFile Test.c là file chúng ta tạo ra và viết các lệnh để máy tính hiểu, file này gọi là file mã nguồn.\r\nFile Test.exe là file sinh ra khi chúng ta ấn nút Chạy chương trình, file này gọi là file thực thi.\r\nDev-C++\r\n\r\nFile mã nguồn và file thực thi\r\nLưu ý: Các chương trình sau này chúng ta làm sẽ chủ yếu chạy trên màn hình đen như trên (gọi là màn hình console – đọc là ‘con sâu’), tuy không có giao diện đẹp mắt nhưng đây là phần lõi của lập trình, học tốt phần này chúng ta mới có thể làm được các chương trình có giao diện đồ họa và các ngôn ngữ khác cũng hầu hết dựa vào phần lõi này.', '', '', 'inherit', 'closed', 'closed', '', '121-revision-v1', '', '', '2018-12-09 14:06:00', '2018-12-09 14:06:00', '', 121, 'http://localhost/web-teach-code/blog/2018/12/09/121-revision-v1/', 0, 'revision', '', 0),
(123, 1, '2018-12-09 14:06:32', '2018-12-09 14:06:32', '1. Giới thiệu về lập trình\r\nChắc hẳn bạn đã được tiếp xúc với máy tính, điện thoại dù ít hay nhiều và dùng các ứng dụng hoặc trò chơi trên đó ví như Word, Excel để làm việc văn phòng hoặc dùng Chrome, Firefox để vào Facebook, Google hay chính Facebook và Google là các phầm mềm.\r\n\r\nBạn tưởng tượng lập trình là quá trình bạn tạo ra các phần mềm, ứng dụng như thế. Bạn tạo ra ứng dụng cho người khác dùng, làm việc; bạn tạo ra game cho người khác chơi, làm ra website cho người khác truy cập vào. Nghĩ đến đây đã thấy hứng thú rồi 🙂\r\n\r\nĐể làm ra được phần mềm (hoặc game, website) thì chúng ta phải dạy cho máy tính cách làm việc hay nói cách khác là đưa các quy tắc mà chúng ta mong muốn để máy tính thực hiện như là khi ấn nút lên trên thì nhân vật phải nhảy lên, ấn nút sang trái thì nhân vật sẽ đi sang trái.\r\n\r\nGiống như dạy cho ai đó phải làm gì thì bạn phải nói cho họ nghe hoặc viết chữ để đưa cho họ đọc và từ đó họ mới hiểu được bạn nói gì. Việc đưa các quy tắc này vào máy tính để nó hiểu được bạn muốn làm gì mà thực hiện theo cũng vậy, bạn cần viết các yêu cầu đó theo một cú pháp cụ thể mà cái đó gọi là ngôn ngữ lập trình.\r\n\r\nNgôn ngữ lập trình cũng giống như tiếng Việt để người Việt giao tiếp và hiểu, tiếng Anh dùng cho người Anh, Mỹ và nhiều nước khác, … ngôn ngữ lập trình nó là ngôn ngữ để người nói cho máy tính hiểu. Hiện nay có nhiều ngôn ngữ lập trình khác nhau như C, C++, Java, C#, PHP, python,… mỗi ngôn ngữ có ưu nhược điểm riêng và có ứng dụng trong các lĩnh vực nhất định.\r\n\r\n2. Lập trình C\r\nLập trình C đơn giản là các bạn dùng Ngôn ngữ lập trình C để tạo ra các phần mềm.\r\n\r\nMỗi phần mềm hay gọi là chương trình (chương trình máy tính) sẽ được viết bởi ngôn ngữ C bằng một hay nhiền file với những quy tắc nhất định của ngôn ngữ mà chúng ta sẽ dần tìm hiểu.\r\n\r\n3. Cài đặt công cụ\r\n3.1 Cài đặt\r\nĐể có thể lập trình C thì các bạn cần cài bộ dịch gcc hoặc g++. Tuy nhiên để dễ dàng thì hiện tại có nhiều phần mềm tích hợp (hay gọi là môi trường phát triển – IDE) để chúng ta có thể dễ dàng.\r\n\r\nĐối với các bạn dùng Windows có thể download Dev-C++ hoặc Code::Blocks về cài đặt và chúng ta có thể dùng ngay để viết các chương trình đơn giản.\r\nĐối với các bạn dùng Linux (ubuntu, Linux Mint,…) có thể cài bằng cách mở terminal lên và chạy lệnh cài đặt sau:\r\n\r\nsudo apt-get install build-essential\r\n\r\nSau khi chạy lệnh trên, các bạn có thể mở bất cứ trình soạn thảo nào để code (như gedit, vim, hay sublime-text,…) sau đó dịch, chạy chương trình bằng terminal.\r\nHoặc các bạn cũng hoàn toàn có thể download và cài Code::Blocks trên Linux để dùng rất tiện, hoặc dùng lệnh cài:\r\n\r\nsudo apt-get install codeblocks\r\n\r\nCác bạn có thể xem thêm chi tiết về Lập trình C/C++ trên Ubuntu (Linux) tại blog của mình\r\n\r\nĐể dễ và thống nhất trong quá trình làm, mình sẽ dùng Dev-C++ nhé.\r\n\r\n3.2 Giới thiệu cơ bản về Dev-C++\r\nĐể tiện hình dung, các bạn mở Dev-C++ lên sẽ thấy giao diện như hình sau (Hiện tại bản mình đang dùng là 5.11, các bạn dùng bản khác có thể sẽ có một chút khác nhưng sẽ không đáng kể).\r\n\r\nDev-C++\r\nGiao diện Dev-C++ 5.11\r\nTrong hình trên, có một số phần chính mình đánh dấu bằng các số với ý nghĩa sau:\r\n1. Nút tạo file mới\r\n2. Nút mở một file đã có\r\n3. Nút biên dịch và chạy chương trình\r\n4. Vùng soạn thảo code (mã chương trình)\r\n5. Vùng hiển thị lỗi nếu có.\r\n\r\n4. Tạo chương trình đầu tiên\r\nBây giờ các bạn có thể viết chương trình phần mềm đầu tiên để thử nghiệm.\r\nB1: Tạo 1 file mới.\r\nB2: Gõ hoặc chép đoạn code sau vào vùng soạn thảo.\r\n\r\n<code>\r\n#include\r\n\r\nint main()\r\n{\r\nprintf(\"Welcome\");\r\nreturn 0;\r\n}\r\n</code>\r\nB3: Lưu lại với tên file là Test.c hoặc Test.cpp\r\nB4: Click nút chạy chương trình và bạn sẽ thấy một màn hình màu đen hiện lên như sau:\r\n\r\nDev-C++\r\nChương trình C đầu tiên khi chạy\r\nTrong đó các bạn có thể thấy chữ Welcome hiện lên, đó chính là dòng chữ được in ra khi dùng lệnh printf. Phần dưới đường kẻ ngang là do Dev-C tự sinh ra.\r\n\r\nMình giải thích một chút về code:\r\n\r\nDòng 1: Chứa phát biểu tiền xử lý #include . Vì trong chương trình này ta sử dụng các lệnh trong thư viện của C là printf, do đó bạn cần phải có khai báo của hàm thư viện này để báo cho trình biên dịch C biết. Nếu không khai báo chương trình sẽ báo lỗi. Thư viện stdio.h viết tắt của standard input output (std – i – o) là thư viện nhập xuất chuẩn).\r\nDòng 3: ** int main() là thành phần chính của mọi chương trình C. Mọi chương trình C đều bắt đầu thi hành từ hàm **main. Cặp dấu ngoặc () cho biết đây là khối hàm (function). Hàm main() có từ khóa int đầu tiên cho biết hàm này trả về giá trị kiểu nguyên (int).\r\n\r\nDòng 4 và 7: cặp dấu ngoặc móc {} giới hạn thân của hàm. Thân hàm bắt đầu bằng dấu { và kết thúc bằng dấu }.\r\n\r\nDòng 5: printf (\"Welcome\");, chỉ thị cho máy in ra chuỗi ký tự nằm trong nháy kép \"\". Hàng này được gọi là một câu lệnh, kết thúc một câu lệnh trong C phải là dấu chấm phẩy( ; ).\r\n\r\nDòng 6: return 0; Trả về giá trị kiểu nguyên là 0 theo như đúng ban đầu là khai báo int main().\r\n\r\nLưu ý:\r\n\r\nTrong chương trình này mình không dùng thư viện conio.h vì trong chuẩn C không có thư viện này, và từ đó cũng không dùng được getch() để dừng màn hình mà mình đã thay bằng lệnh system(\"pause\"); trong thư viện stdlib.h\r\nKhi dùng return để trả về giá trị của hàm thì các bạn có thể bỏ qua lệnh này chương trình vẫn chạy nhưng về chuẩn là sai, trả về 1 cũng sai, tóm lại là trả về 0. Nếu trả về 1 số khác không thì hệ thống máy tính sẽ hiểu là chương trình này của bạn sau khi chạy phát sinh ra cần đó lỗi.\r\nBây giờ các bạn mở folder chứa file Test.c mà bạn vừa tạo ra, các bạn sẽ nhìn thấy một file có tên Test.exe (gọi tắt là file exe), đây chính là file chạy chương trình. Bây giờ nếu muốn bạn có thể click chuột vào file exe này là chạy được chương trình trên hoặc bạn có thể copy file exe này sang máy tính khác thì vẫn có thể chạy được, nó giống như bạn copy game từ máy này sang máy khác vậy.\r\n\r\nTừ đây ta có:\r\n\r\nFile Test.c là file chúng ta tạo ra và viết các lệnh để máy tính hiểu, file này gọi là file mã nguồn.\r\nFile Test.exe là file sinh ra khi chúng ta ấn nút Chạy chương trình, file này gọi là file thực thi.\r\nDev-C++\r\n\r\nFile mã nguồn và file thực thi\r\nLưu ý: Các chương trình sau này chúng ta làm sẽ chủ yếu chạy trên màn hình đen như trên (gọi là màn hình console – đọc là ‘con sâu’), tuy không có giao diện đẹp mắt nhưng đây là phần lõi của lập trình, học tốt phần này chúng ta mới có thể làm được các chương trình có giao diện đồ họa và các ngôn ngữ khác cũng hầu hết dựa vào phần lõi này.', '', '', 'inherit', 'closed', 'closed', '', '121-revision-v1', '', '', '2018-12-09 14:06:32', '2018-12-09 14:06:32', '', 121, 'http://localhost/web-teach-code/blog/2018/12/09/121-revision-v1/', 0, 'revision', '', 0),
(124, 1, '2018-12-09 14:14:49', '2018-12-09 14:14:49', 'Ở các bài trước, chúng ta đã làm quen với một số chương trình mà in lên màn hình một số thông tin. Bài này chúng ta sẽ tìm hiểu kỹ hơn về cách nhập xuất trong C.\r\n\r\n1. Chuỗi định dạng dữ liệu\r\nTrước khi đến với phần nhập, xuất dữ liệu cho các biến mình sẽ nói về một số định dạng để nhập và xuất. Sau đây là các dấu mô tả định dạng:\r\n\r\n%c : Ký tự đơn\r\n%s : Chuỗi\r\n%d : Số nguyên hệ 10 có dấu\r\n%f : Số chấm động (VD 5.54 khi in sẽ ra 5.540000)\r\n%e : Số chấm động (ký hiệu có số mũ)\r\n%g : Số chấm động (VD 5.54 khi in sẽ in ra 5.54)\r\n%x : Số nguyên hex không dấu (hệ 16)\r\n%o : Số nguyên bát phân không dấu (hệ 8)\r\nl : Tiền tố dùng kèm với %d, %x, %o để chỉ số nguyên dài (ví dụ%ld)\r\n2. Xuất dữ liệu dùng printf\r\nChúng ta sử dụng hàm printf để xuất dữ liệu ra màn hình console (từ print có nghĩa là in). Kết hợp với các chuỗi định dạng ở trên, chúng ta xét một ví dụ đơn giản sau.\r\n\r\nVí dụ 1:\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a = 12;\r\n    float b = 13.5;\r\n    char c = \'Q\';\r\n    long d = 3454;\r\n    char* s = \"nguyenvanquan7826\"; // khai bao kieu chuoi\r\n \r\n    printf(\"Vi du ve su dung lenh printf\\n\");\r\n    printf(\"Tong cua %d va %f la %f \\n\", a, b, a+b);\r\n    printf(\"Tich cua %d va %ld la %ld \\n\", a, d, a*d);\r\n    printf(\"Ky tu c la: %c \\n\", c);\r\n    printf(\"Chuoi s la: %s \\n\", s);\r\n    printf(\"Dinh dang so mu cua b la %e \\n\", b);\r\n    printf(\"So he 16 va he 8 cua %d la %x va %o \\n\", a, a, a);\r\n    printf(\"Ma ASCII cua %c la %d\", c, c);\r\n \r\n    return 0;\r\n}\r\nỞ trên mình có dùng một số ký tự điều khiển (\\n – xuống dòng) đã được đề cập ở bài trươc, các bạn có thể xem lại nếu không nhớ. Các bạn chạy chương trình và rút ra nhận xét cho riêng mình.\r\n\r\nMình giải thích 1 câu lệnh để làm rõ hơn việc xuất của chúng ta.\r\n\r\nXuất dữ liệu\r\nCâu lệnh printf để in các biến tương ứng\r\nChuỗi định dạng được đặt trong ngoặc kép: “”. Tương ứng với mỗi định dạng là một biến có kiểu tương ứng, nếu khác kiểu sẽ dẫn đến sai sót.\r\n\r\nCác bạn cũng chú ý là đối với số nguyên và ký tự có sự qua lại với nhau thông qua mã ASCII nên chúng ta có thể in mã của ký tự bằng định dạng %d và cũng có thể in ký tự có mã là số nào đó thông qua định dạng %c. Tuy nhiên bản chất của biến không thay đổi. Ở Vd trên câu lệnh in mã ASCII của c sẽ cho số nguyên nhưng bản chất c vẫn là một biến kiểu char.\r\n\r\nVí dụ 2:\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a = 12;\r\n    float b = 13.5;\r\n    char c = \'Q\';\r\n    long d = 3454;\r\n    char s[] = \"nguyenvanquan7826\"; // khai bao kieu chuoi\r\n \r\n    printf(\"%6d %5.3f %.3f \\n\", a, b, a+b);\r\n    printf(\"%-5d %5ld %5ld \\n\", a, d, a*d);\r\n    printf(\"%5c \\n\", c);\r\n    printf(\"%30s \\n\", s);\r\n \r\n    return 0;\r\n}\r\nCác bạn thấy ví dụ này chúng ta dùng các định dạng %d, %f nhưng lại chèn thêm các số ở giữa thành %6d, %5.3f. Ý nghĩa của chúng như sau:\r\n\r\n%5c : Xuất ký tự có bề rộng 5\r\n%5d : Số nguyên có bề rộng 5\r\n%20s : Xuất chuỗi có bề rộng 20\r\n%5.3f : Xuất số thực có bề rộng 5 trong đó có 3 số sau dấu phẩy\r\n%-5d : Số nguyên có bề rộng 5 nhưng căn lề trái\r\nCác bạn chạy chương trình, xem kết quả để thấy rõ hơn. Trong TH nếu bề rộng của chúng ta có kích thước bé hơn độ dài của số thì sao? Ví dụ chúng ta có số int a = 1234 nhưng chỉ in là %2d, rõ ràng dành 2 phần trống là ít hơn số a có 4 chữ số nhưng kết quả là số vẫn được in đầy đủ. Các bạn có thể thử.\r\n\r\nVí dụ 3:\r\nĐặt bài toán là giả sử chúng ta có các biến thể hiện ngày tháng năm sinh bất kỳ (ví dụ ngay = 12, thang = 8, nam = 1992). Hãy in ra theo định dạng là dd/mm/yyyy. Nghĩa là chúng ta phải in ra kết quả 12/08/1992.\r\n\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int ngay = 12;\r\n    int thang = 8;\r\n    int nam = 1992;\r\n \r\n    printf(\"KQ: %02d/%02d/%04d\\n\", ngay, thang, nam);\r\n \r\n    return 0;\r\n}\r\nỞ trên, các bạn chú ý chúng ta dùng %02d nghĩa là sao? Nhĩa là số in ra sẽ có 2 chữ số, nếu ban đầu số có ít hơn 2 thì sẽ thêm số 0 đằng trước để đủ 2 chữ số. Ví dụ số 8 sẽ thành 08. Nếu dùng %05d thì sẽ là 00008.\r\n\r\n3. Nhập dữ liệu dùng scanf\r\nTrong các ví dụ trước, chúng ta chỉ khai báo biến và gán giá trị cho biến nhưng như thế làm chương trình không linh hoạt vì chỉ hoạt động với những giá trị đã định trước, muốn hoạt động với các dữ liệu khác nhau chúng ta lại phải sửa lại code, như vậy thì không phải một chương trình tốt. Một chương trình phần mềm làm ra là phải dành cho nhiều bộ giá trị khác nhau có thể dùng được.\r\n\r\nChính vì vậy dữ liệu sẽ được đưa vào trong quá trình phần mềm được dùng và cụ thể đơn giản là nhập dữ liệu vào từ bàn phím. Chúng ta sử dụng lệnh scanf để nhập dữ liệu từ bàn phím (từ scan có nghĩa là quét và chúng ta dùng để quét dữ lệu từ bàn phím).\r\n\r\nVí dụ 1:\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a;\r\n    float b;\r\n \r\n    printf(\"Nhap so nguyen a = \");\r\n    scanf(\"%d\", &a);\r\n \r\n    printf(\"Nhap so thuc b = \");\r\n    scanf(\"%f\", &b);\r\n \r\n    printf(\"a = %d \\t b = %.3f\", a, b);\r\n \r\n    return 0;\r\n}\r\nViệc sử dụng lệnh scanf kết hợp với chuỗi định dạng để nhập dữ liệu sẽ tương tự như khi xuất dữ liệu bằng lệnh printf.\r\n\r\nChú ý đừng quên ký tự & trước mỗi biến khi nhập. Nếu không sẽ sai.\r\n\r\nVí dụ 2:\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n13\r\n/* Tinh dien tich hinh chu nhat */\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a, b;\r\n    printf(\"Nhap chieu dai, chieu rong: \\n\");\r\n    scanf(\"%d%d\", &a, &b);\r\n \r\n    printf(\"Dien tich HCN: %d\\n\", a * b);\r\n \r\n    return 0;\r\n}\r\nỞ ví dụ trên, các bạn thấy chúng ta có thể dùng 1 lệnh scanf để nhập dữ liệu cho nhiều biến, mỗi biến tương ứng với 1 định dạng nhất định.\r\n\r\n4. Nhập chuỗi trong C\r\n4.1 Lỗi khi nhập chuỗi bằng scanf\r\nNếu các bạn dùng hàm scanf để nhập chuỗi thì bạn sẽ thấy rằng không thể nhập được chuỗi có dấu cách hoặc nếu trước đó bạn nhập số thì sau đó không nhập được chuỗi nữa. Nếu không tin bạn có thể thử chạy với chương trình sau:\r\n\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    scanf(\"%s\", ten); // nhap chuoi khong can dau &\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &tuoi);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    scanf(\"%s\", tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\nKết quả là bạn sẽ không nhập được tuổi và tên người yêu như hình sau.\r\n\r\nTroi Lenh Trong C\r\nKết quả khi dùng scanf để nhập chuỗi\r\nLý do là scanf chỉ đọc được dữ liệu không có khoảng trắng (đấu cách, dấu tab, enter, …) và các khoảng cách này sẽ được lưu vào bộ đệm bàn phím do đó bạn chỉ nhận được chuỗi đầu tiên trước đấu cách mà thôi (chữ Nguyen), sau mỗi dấu cách, các giá trị tiếp theo nếu phù hợp với kiểu dữ liệu của các biến tiếp theo thì nó sẽ gán luôn cho chúng và bạn sẽ không được nhập nữa. Do tuoi kiểu nguyên nên không nhận được, tenNguoiYeu sẽ nhận giá trị tiếp theo trong các giá trị nhận được là chữ Van.\r\n\r\n4.2 Hiện tượng trôi lệnh\r\nHiện tượng như trên được gọi là hiện tượng trôi lệnh. Nếu bây giờ bạn thực hiện cho nhập số trước và chuỗi ngay sau đó thì hiện tượng này cũng xảy ra vì scanf chỉ đọc số theo đúng định dạng mà không đọc được phím enter khi bạn nhấn lúc nhập xong số (enter là ký tự hoặc cũng có thể coi là chuỗi), nó được lưu vào bộ đệm và khi đọc giá trị nhập cho chuỗi nó tìm trong bộ đệm thấy ký tự enter là kiểu chuỗi nên nó gán luôn cho chuỗi đó.\r\n\r\nĐể nhập được chuỗi có khoảng trắng (dấu cách) chúng ta sử dụng hàm gets.\r\n\r\nĐể không bị trôi lệnh khi nhập số trước và chuỗi sau ta cần xóa bộ đệm bàn phím bằng lệnh fflush(stdin); ngay sau khi nhập số.\r\n\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    gets(ten); // nhap chuoi khong can dau &\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &tuoi);\r\n    fflush(stdin);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    gets(tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nNếu bạn dùng Linux thì fflush(stdin); sẽ không hoạt động, bạn có thể khắc phục bằng cách nhập vào 1 chuỗi tạm ngay sau khi nhập số. Việc nhập chuỗi tạm này chỉ để xóa bỏ các ký tự, chuỗi ký tự thừa có trong bộ đệm như sau (cách này cũng dùng được khi bạn làm trên windows).\r\n\r\n01\r\n02\r\n03\r\n04\r\n05\r\n06\r\n07\r\n08\r\n09\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30], temp[255];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    gets(ten); // nhap chuoi khong can dau &\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &tuoi);\r\n    //fflush(stdin);\r\n    gets(temp);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    gets(tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n5. Giải thích một chút về printf, scanf và stdio.h\r\n5.1 Chữ f trong printf và scanf\r\nNhư các bạn đã biết print nghĩa là in, scan là quét hay ta gọi trong này là để nhập. Vậy tại sao chúng lại có chữ f đằng sau để thành printf và scanf ?\r\n\r\nChữ f này có nghĩa là format (định dạng). Như các bạn thấy chúng ta nhập hoặc xuất các giá trị của các biến đều có định dạng % gì đó ví dụ %d là số nguyên, %f là số thực,… và chữ f này chính là có ý nghĩa như thế.\r\n\r\n5.2 Thư viện stdio.h ?\r\nTrong tất cả các chương trình từ trước tới giờ, chúng ta luôn có #include <stdio.h>, vậy nó là gì?\r\n\r\n#include nghĩa là bao gồm tức là chương trình của chúng ta sẽ khai báo sử dụng một cái gì đó, mà ở đây là sử dụng thư viện stdio.h\r\n\r\nVậy stdio.h là gì? std viết tắt của standard , i viết tắt của input, o viết tắt của output, h viết tắt của header (header – đầu, trên đầu – vì nó được khai báo ở trên đầu của các chương trình). Vậy nó có nghĩa là standard input output – nhập xuất chuẩn. Chúng ta hiểu nó là thư viện phục vụ cho việc nhập xuất chuẩn của chương trình. Nhập xuất chuẩn chính là nhập từ bàn phím và xuất ra màn hình. Có còn rất nhiều nguồn nhập xuất như nhập từ file, nhập từ con trỏ chuột,… xuất ra máy in, xuất ra file,… nhưng họ coi bàn phím và màn hình là hệ thống nhập xuất chuẩn.\r\n\r\nBài tập\r\n\r\nViết chương trình nhập vào một số a bất kỳ và in ra giá trị a2, a3, a4\r\nViết chương trình đọc từ bàn phím 3 số nguyên biểu diễn ngày, tháng, năm và xuất ra màn hình dưới dạng “dd/mm/yyyy”.\r\nViết chương trình đọc và 2 số nguyên và in ra kết quả của phép (+), phép trừ (-), phép nhân (*), phép chia (/). Nhận xét kết quả chia 2 số nguyên.\r\nViết chương trình nhập vào bán kính hình cầu, tính và in ra diện tích, thể tích của hình cầu đó.\r\nHướng dẫn: S = 4πR^2 và V = (4/3)πR^3.\r\nNhập vào một số là số giây, đổi số giây này ra giờ phút giây và xuất theo dạng gio:phut:giay, mỗi thành phần có 2 chữ số. Ví dụ 3661 = 01:01:01.', '', '', 'inherit', 'closed', 'closed', '', '121-revision-v1', '', '', '2018-12-09 14:14:49', '2018-12-09 14:14:49', '', 121, 'http://localhost/web-teach-code/blog/2018/12/09/121-revision-v1/', 0, 'revision', '', 0),
(125, 1, '2018-12-09 14:17:44', '2018-12-09 14:17:44', 'Ở các bài trước, chúng ta đã làm quen với một số chương trình mà in lên màn hình một số thông tin. Bài này chúng ta sẽ tìm hiểu kỹ hơn về cách nhập xuất trong C.\r\n\r\n1. Chuỗi định dạng dữ liệu\r\nTrước khi đến với phần nhập, xuất dữ liệu cho các biến mình sẽ nói về một số định dạng để nhập và xuất. Sau đây là các dấu mô tả định dạng:\r\n\r\n%c : Ký tự đơn\r\n%s : Chuỗi\r\n%d : Số nguyên hệ 10 có dấu\r\n%f : Số chấm động (VD 5.54 khi in sẽ ra 5.540000)\r\n%e : Số chấm động (ký hiệu có số mũ)\r\n%g : Số chấm động (VD 5.54 khi in sẽ in ra 5.54)\r\n%x : Số nguyên hex không dấu (hệ 16)\r\n%o : Số nguyên bát phân không dấu (hệ 8)\r\nl : Tiền tố dùng kèm với %d, %x, %o để chỉ số nguyên dài (ví dụ%ld)\r\n2. Xuất dữ liệu dùng printf\r\nChúng ta sử dụng hàm printf để xuất dữ liệu ra màn hình console (từ print có nghĩa là in). Kết hợp với các chuỗi định dạng ở trên, chúng ta xét một ví dụ đơn giản sau.\r\n\r\nVí dụ 1:\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a = 12;\r\n    float b = 13.5;\r\n    char c = \'Q\';\r\n    long d = 3454;\r\n    char* s = \"nguyenvanquan7826\"; // khai bao kieu chuoi\r\n \r\n    printf(\"Vi du ve su dung lenh printf\\n\");\r\n    printf(\"Tong cua %d va %f la %f \\n\", a, b, a+b);\r\n    printf(\"Tich cua %d va %ld la %ld \\n\", a, d, a*d);\r\n    printf(\"Ky tu c la: %c \\n\", c);\r\n    printf(\"Chuoi s la: %s \\n\", s);\r\n    printf(\"Dinh dang so mu cua b la %e \\n\", b);\r\n    printf(\"So he 16 va he 8 cua %d la %x va %o \\n\", a, a, a);\r\n    printf(\"Ma ASCII cua %c la %d\", c, c);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nỞ trên mình có dùng một số ký tự điều khiển (\\n – xuống dòng) đã được đề cập ở bài trươc, các bạn có thể xem lại nếu không nhớ. Các bạn chạy chương trình và rút ra nhận xét cho riêng mình.\r\n\r\nMình giải thích 1 câu lệnh để làm rõ hơn việc xuất của chúng ta.\r\n\r\nXuất dữ liệu\r\nCâu lệnh printf để in các biến tương ứng\r\nChuỗi định dạng được đặt trong ngoặc kép: “”. Tương ứng với mỗi định dạng là một biến có kiểu tương ứng, nếu khác kiểu sẽ dẫn đến sai sót.\r\n\r\nCác bạn cũng chú ý là đối với số nguyên và ký tự có sự qua lại với nhau thông qua mã ASCII nên chúng ta có thể in mã của ký tự bằng định dạng %d và cũng có thể in ký tự có mã là số nào đó thông qua định dạng %c. Tuy nhiên bản chất của biến không thay đổi. Ở Vd trên câu lệnh in mã ASCII của c sẽ cho số nguyên nhưng bản chất c vẫn là một biến kiểu char.\r\n\r\nVí dụ 2:\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a = 12;\r\n    float b = 13.5;\r\n    char c = \'Q\';\r\n    long d = 3454;\r\n    char s[] = \"nguyenvanquan7826\"; // khai bao kieu chuoi\r\n \r\n    printf(\"%6d %5.3f %.3f \\n\", a, b, a+b);\r\n    printf(\"%-5d %5ld %5ld \\n\", a, d, a*d);\r\n    printf(\"%5c \\n\", c);\r\n    printf(\"%30s \\n\", s);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nCác bạn thấy ví dụ này chúng ta dùng các định dạng %d, %f nhưng lại chèn thêm các số ở giữa thành %6d, %5.3f. Ý nghĩa của chúng như sau:\r\n\r\n%5c : Xuất ký tự có bề rộng 5\r\n%5d : Số nguyên có bề rộng 5\r\n%20s : Xuất chuỗi có bề rộng 20\r\n%5.3f : Xuất số thực có bề rộng 5 trong đó có 3 số sau dấu phẩy\r\n%-5d : Số nguyên có bề rộng 5 nhưng căn lề trái\r\nCác bạn chạy chương trình, xem kết quả để thấy rõ hơn. Trong TH nếu bề rộng của chúng ta có kích thước bé hơn độ dài của số thì sao? Ví dụ chúng ta có số int a = 1234 nhưng chỉ in là %2d, rõ ràng dành 2 phần trống là ít hơn số a có 4 chữ số nhưng kết quả là số vẫn được in đầy đủ. Các bạn có thể thử.\r\n\r\nVí dụ 3:\r\nĐặt bài toán là giả sử chúng ta có các biến thể hiện ngày tháng năm sinh bất kỳ (ví dụ ngay = 12, thang = 8, nam = 1992). Hãy in ra theo định dạng là dd/mm/yyyy. Nghĩa là chúng ta phải in ra kết quả 12/08/1992.\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int ngay = 12;\r\n    int thang = 8;\r\n    int nam = 1992;\r\n \r\n    printf(\"KQ: %02d/%02d/%04d\\n\", ngay, thang, nam);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nỞ trên, các bạn chú ý chúng ta dùng %02d nghĩa là sao? Nhĩa là số in ra sẽ có 2 chữ số, nếu ban đầu số có ít hơn 2 thì sẽ thêm số 0 đằng trước để đủ 2 chữ số. Ví dụ số 8 sẽ thành 08. Nếu dùng %05d thì sẽ là 00008.\r\n\r\n3. Nhập dữ liệu dùng scanf\r\nTrong các ví dụ trước, chúng ta chỉ khai báo biến và gán giá trị cho biến nhưng như thế làm chương trình không linh hoạt vì chỉ hoạt động với những giá trị đã định trước, muốn hoạt động với các dữ liệu khác nhau chúng ta lại phải sửa lại code, như vậy thì không phải một chương trình tốt. Một chương trình phần mềm làm ra là phải dành cho nhiều bộ giá trị khác nhau có thể dùng được.\r\n\r\nChính vì vậy dữ liệu sẽ được đưa vào trong quá trình phần mềm được dùng và cụ thể đơn giản là nhập dữ liệu vào từ bàn phím. Chúng ta sử dụng lệnh scanf để nhập dữ liệu từ bàn phím (từ scan có nghĩa là quét và chúng ta dùng để quét dữ lệu từ bàn phím).\r\n\r\nVí dụ 1:\r\n01\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a;\r\n    float b;\r\n \r\n    printf(\"Nhap so nguyen a = \");\r\n    scanf(\"%d\", &a);\r\n \r\n    printf(\"Nhap so thuc b = \");\r\n    scanf(\"%f\", &b);\r\n \r\n    printf(\"a = %d \\t b = %.3f\", a, b);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nViệc sử dụng lệnh scanf kết hợp với chuỗi định dạng để nhập dữ liệu sẽ tương tự như khi xuất dữ liệu bằng lệnh printf.\r\n\r\nChú ý đừng quên ký tự & trước mỗi biến khi nhập. Nếu không sẽ sai.\r\n\r\nVí dụ 2:\r\n/* Tinh dien tich hinh chu nhat */\r\n</pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int a, b;\r\n    printf(\"Nhap chieu dai, chieu rong: \\n\");\r\n    scanf(\"%d%d\", &a, &b);\r\n \r\n    printf(\"Dien tich HCN: %d\\n\", a * b);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nỞ ví dụ trên, các bạn thấy chúng ta có thể dùng 1 lệnh scanf để nhập dữ liệu cho nhiều biến, mỗi biến tương ứng với 1 định dạng nhất định.\r\n\r\n4. Nhập chuỗi trong C\r\n4.1 Lỗi khi nhập chuỗi bằng scanf\r\nNếu các bạn dùng hàm scanf để nhập chuỗi thì bạn sẽ thấy rằng không thể nhập được chuỗi có dấu cách hoặc nếu trước đó bạn nhập số thì sau đó không nhập được chuỗi nữa. Nếu không tin bạn có thể thử chạy với chương trình sau:\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    scanf(\"%s\", ten); // nhap chuoi khong can dau &\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &tuoi);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    scanf(\"%s\", tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nKết quả là bạn sẽ không nhập được tuổi và tên người yêu như hình sau.\r\n\r\nTroi Lenh Trong C\r\nKết quả khi dùng scanf để nhập chuỗi\r\nLý do là scanf chỉ đọc được dữ liệu không có khoảng trắng (đấu cách, dấu tab, enter, …) và các khoảng cách này sẽ được lưu vào bộ đệm bàn phím do đó bạn chỉ nhận được chuỗi đầu tiên trước đấu cách mà thôi (chữ Nguyen), sau mỗi dấu cách, các giá trị tiếp theo nếu phù hợp với kiểu dữ liệu của các biến tiếp theo thì nó sẽ gán luôn cho chúng và bạn sẽ không được nhập nữa. Do tuoi kiểu nguyên nên không nhận được, tenNguoiYeu sẽ nhận giá trị tiếp theo trong các giá trị nhận được là chữ Van.\r\n\r\n4.2 Hiện tượng trôi lệnh\r\nHiện tượng như trên được gọi là hiện tượng trôi lệnh. Nếu bây giờ bạn thực hiện cho nhập số trước và chuỗi ngay sau đó thì hiện tượng này cũng xảy ra vì scanf chỉ đọc số theo đúng định dạng mà không đọc được phím enter khi bạn nhấn lúc nhập xong số (enter là ký tự hoặc cũng có thể coi là chuỗi), nó được lưu vào bộ đệm và khi đọc giá trị nhập cho chuỗi nó tìm trong bộ đệm thấy ký tự enter là kiểu chuỗi nên nó gán luôn cho chuỗi đó.\r\n\r\nĐể nhập được chuỗi có khoảng trắng (dấu cách) chúng ta sử dụng hàm gets.\r\n\r\nĐể không bị trôi lệnh khi nhập số trước và chuỗi sau ta cần xóa bộ đệm bàn phím bằng lệnh fflush(stdin); ngay sau khi nhập số.\r\n\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    gets(ten); // nhap chuoi khong can dau &\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &tuoi);\r\n    fflush(stdin);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    gets(tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nNếu bạn dùng Linux thì fflush(stdin); sẽ không hoạt động, bạn có thể khắc phục bằng cách nhập vào 1 chuỗi tạm ngay sau khi nhập số. Việc nhập chuỗi tạm này chỉ để xóa bỏ các ký tự, chuỗi ký tự thừa có trong bộ đệm như sau (cách này cũng dùng được khi bạn làm trên windows).\r\n\r\n<pre>\r\n#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30], temp[255];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    gets(ten); // nhap chuoi khong can dau &\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &tuoi);\r\n    //fflush(stdin);\r\n    gets(temp);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    gets(tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\n5. Giải thích một chút về printf, scanf và stdio.h\r\n5.1 Chữ f trong printf và scanf\r\nNhư các bạn đã biết print nghĩa là in, scan là quét hay ta gọi trong này là để nhập. Vậy tại sao chúng lại có chữ f đằng sau để thành printf và scanf ?\r\n\r\nChữ f này có nghĩa là format (định dạng). Như các bạn thấy chúng ta nhập hoặc xuất các giá trị của các biến đều có định dạng % gì đó ví dụ %d là số nguyên, %f là số thực,… và chữ f này chính là có ý nghĩa như thế.\r\n\r\n5.2 Thư viện stdio.h ?\r\nTrong tất cả các chương trình từ trước tới giờ, chúng ta luôn có #include <stdio.h>, vậy nó là gì?\r\n\r\n#include nghĩa là bao gồm tức là chương trình của chúng ta sẽ khai báo sử dụng một cái gì đó, mà ở đây là sử dụng thư viện stdio.h\r\n\r\nVậy stdio.h là gì? std viết tắt của standard , i viết tắt của input, o viết tắt của output, h viết tắt của header (header – đầu, trên đầu – vì nó được khai báo ở trên đầu của các chương trình). Vậy nó có nghĩa là standard input output – nhập xuất chuẩn. Chúng ta hiểu nó là thư viện phục vụ cho việc nhập xuất chuẩn của chương trình. Nhập xuất chuẩn chính là nhập từ bàn phím và xuất ra màn hình. Có còn rất nhiều nguồn nhập xuất như nhập từ file, nhập từ con trỏ chuột,… xuất ra máy in, xuất ra file,… nhưng họ coi bàn phím và màn hình là hệ thống nhập xuất chuẩn.\r\n\r\nBài tập\r\n\r\nViết chương trình nhập vào một số a bất kỳ và in ra giá trị a2, a3, a4\r\nViết chương trình đọc từ bàn phím 3 số nguyên biểu diễn ngày, tháng, năm và xuất ra màn hình dưới dạng “dd/mm/yyyy”.\r\nViết chương trình đọc và 2 số nguyên và in ra kết quả của phép (+), phép trừ (-), phép nhân (*), phép chia (/). Nhận xét kết quả chia 2 số nguyên.\r\nViết chương trình nhập vào bán kính hình cầu, tính và in ra diện tích, thể tích của hình cầu đó.\r\nHướng dẫn: S = 4πR^2 và V = (4/3)πR^3.\r\nNhập vào một số là số giây, đổi số giây này ra giờ phút giây và xuất theo dạng gio:phut:giay, mỗi thành phần có 2 chữ số. Ví dụ 3661 = 01:01:01.', 'Lập trình C: Bài 3 – Nhập xuất trong c', '', 'inherit', 'closed', 'closed', '', '121-revision-v1', '', '', '2018-12-09 14:17:44', '2018-12-09 14:17:44', '', 121, 'http://localhost/web-teach-code/blog/2018/12/09/121-revision-v1/', 0, 'revision', '', 0),
(126, 1, '2018-12-09 14:35:25', '2018-12-09 14:35:25', '{\n    \"ribbon-lite::header_textcolor\": {\n        \"value\": \"blank\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 14:35:25\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'f9824991-bff5-4815-ad4b-c683f6499557', '', '', '2018-12-09 14:35:25', '2018-12-09 14:35:25', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/f9824991-bff5-4815-ad4b-c683f6499557/', 0, 'customize_changeset', '', 0),
(127, 1, '2018-12-09 14:35:36', '2018-12-09 14:35:36', '{\n    \"ribbon-lite::header_textcolor\": {\n        \"value\": \"#4d4d4d\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 14:35:36\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '538c4914-b9a0-412e-ad86-164121164f7c', '', '', '2018-12-09 14:35:36', '2018-12-09 14:35:36', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/538c4914-b9a0-412e-ad86-164121164f7c/', 0, 'customize_changeset', '', 0),
(128, 1, '2018-12-09 14:35:49', '2018-12-09 14:35:49', '{\n    \"ribbon-lite::background_color\": {\n        \"value\": \"#ffffff\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 14:35:49\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'cddd6df7-5077-4f05-9c3c-610bd67fb4c4', '', '', '2018-12-09 14:35:49', '2018-12-09 14:35:49', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/cddd6df7-5077-4f05-9c3c-610bd67fb4c4/', 0, 'customize_changeset', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(129, 1, '2018-12-09 14:37:23', '2018-12-09 14:37:23', 'Ở các bài trước, chúng ta đã làm quen với một số chương trình mà in lên màn hình một số thông tin. Bài này chúng ta sẽ tìm hiểu kỹ hơn về cách nhập xuất trong C.\r\n\r\n<!--more-->\r\n\r\n1. Chuỗi định dạng dữ liệu\r\nTrước khi đến với phần nhập, xuất dữ liệu cho các biến mình sẽ nói về một số định dạng để nhập và xuất. Sau đây là các dấu mô tả định dạng:\r\n\r\n%c : Ký tự đơn\r\n%s : Chuỗi\r\n%d : Số nguyên hệ 10 có dấu\r\n%f : Số chấm động (VD 5.54 khi in sẽ ra 5.540000)\r\n%e : Số chấm động (ký hiệu có số mũ)\r\n%g : Số chấm động (VD 5.54 khi in sẽ in ra 5.54)\r\n%x : Số nguyên hex không dấu (hệ 16)\r\n%o : Số nguyên bát phân không dấu (hệ 8)\r\nl : Tiền tố dùng kèm với %d, %x, %o để chỉ số nguyên dài (ví dụ%ld)\r\n2. Xuất dữ liệu dùng printf\r\nChúng ta sử dụng hàm printf để xuất dữ liệu ra màn hình console (từ print có nghĩa là in). Kết hợp với các chuỗi định dạng ở trên, chúng ta xét một ví dụ đơn giản sau.\r\n\r\nVí dụ 1:\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int a = 12;\r\n    float b = 13.5;\r\n    char c = \'Q\';\r\n    long d = 3454;\r\n    char* s = \"nguyenvanquan7826\"; // khai bao kieu chuoi\r\n \r\n    printf(\"Vi du ve su dung lenh printf\\n\");\r\n    printf(\"Tong cua %d va %f la %f \\n\", a, b, a+b);\r\n    printf(\"Tich cua %d va %ld la %ld \\n\", a, d, a*d);\r\n    printf(\"Ky tu c la: %c \\n\", c);\r\n    printf(\"Chuoi s la: %s \\n\", s);\r\n    printf(\"Dinh dang so mu cua b la %e \\n\", b);\r\n    printf(\"So he 16 va he 8 cua %d la %x va %o \\n\", a, a, a);\r\n    printf(\"Ma ASCII cua %c la %d\", c, c);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nỞ trên mình có dùng một số ký tự điều khiển (\\n – xuống dòng) đã được đề cập ở bài trươc, các bạn có thể xem lại nếu không nhớ. Các bạn chạy chương trình và rút ra nhận xét cho riêng mình.\r\n\r\nMình giải thích 1 câu lệnh để làm rõ hơn việc xuất của chúng ta.\r\n\r\nXuất dữ liệu\r\nCâu lệnh printf để in các biến tương ứng\r\nChuỗi định dạng được đặt trong ngoặc kép: “”. Tương ứng với mỗi định dạng là một biến có kiểu tương ứng, nếu khác kiểu sẽ dẫn đến sai sót.\r\n\r\nCác bạn cũng chú ý là đối với số nguyên và ký tự có sự qua lại với nhau thông qua mã ASCII nên chúng ta có thể in mã của ký tự bằng định dạng %d và cũng có thể in ký tự có mã là số nào đó thông qua định dạng %c. Tuy nhiên bản chất của biến không thay đổi. Ở Vd trên câu lệnh in mã ASCII của c sẽ cho số nguyên nhưng bản chất c vẫn là một biến kiểu char.\r\n\r\nVí dụ 2:\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int a = 12;\r\n    float b = 13.5;\r\n    char c = \'Q\';\r\n    long d = 3454;\r\n    char s[] = \"nguyenvanquan7826\"; // khai bao kieu chuoi\r\n \r\n    printf(\"%6d %5.3f %.3f \\n\", a, b, a+b);\r\n    printf(\"%-5d %5ld %5ld \\n\", a, d, a*d);\r\n    printf(\"%5c \\n\", c);\r\n    printf(\"%30s \\n\", s);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nCác bạn thấy ví dụ này chúng ta dùng các định dạng %d, %f nhưng lại chèn thêm các số ở giữa thành %6d, %5.3f. Ý nghĩa của chúng như sau:\r\n\r\n%5c : Xuất ký tự có bề rộng 5\r\n%5d : Số nguyên có bề rộng 5\r\n%20s : Xuất chuỗi có bề rộng 20\r\n%5.3f : Xuất số thực có bề rộng 5 trong đó có 3 số sau dấu phẩy\r\n%-5d : Số nguyên có bề rộng 5 nhưng căn lề trái\r\nCác bạn chạy chương trình, xem kết quả để thấy rõ hơn. Trong TH nếu bề rộng của chúng ta có kích thước bé hơn độ dài của số thì sao? Ví dụ chúng ta có số int a = 1234 nhưng chỉ in là %2d, rõ ràng dành 2 phần trống là ít hơn số a có 4 chữ số nhưng kết quả là số vẫn được in đầy đủ. Các bạn có thể thử.\r\n\r\nVí dụ 3:\r\nĐặt bài toán là giả sử chúng ta có các biến thể hiện ngày tháng năm sinh bất kỳ (ví dụ ngay = 12, thang = 8, nam = 1992). Hãy in ra theo định dạng là dd/mm/yyyy. Nghĩa là chúng ta phải in ra kết quả 12/08/1992.\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int ngay = 12;\r\n    int thang = 8;\r\n    int nam = 1992;\r\n \r\n    printf(\"KQ: %02d/%02d/%04d\\n\", ngay, thang, nam);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nỞ trên, các bạn chú ý chúng ta dùng %02d nghĩa là sao? Nhĩa là số in ra sẽ có 2 chữ số, nếu ban đầu số có ít hơn 2 thì sẽ thêm số 0 đằng trước để đủ 2 chữ số. Ví dụ số 8 sẽ thành 08. Nếu dùng %05d thì sẽ là 00008.\r\n\r\n3. Nhập dữ liệu dùng scanf\r\nTrong các ví dụ trước, chúng ta chỉ khai báo biến và gán giá trị cho biến nhưng như thế làm chương trình không linh hoạt vì chỉ hoạt động với những giá trị đã định trước, muốn hoạt động với các dữ liệu khác nhau chúng ta lại phải sửa lại code, như vậy thì không phải một chương trình tốt. Một chương trình phần mềm làm ra là phải dành cho nhiều bộ giá trị khác nhau có thể dùng được.\r\n\r\nChính vì vậy dữ liệu sẽ được đưa vào trong quá trình phần mềm được dùng và cụ thể đơn giản là nhập dữ liệu vào từ bàn phím. Chúng ta sử dụng lệnh scanf để nhập dữ liệu từ bàn phím (từ scan có nghĩa là quét và chúng ta dùng để quét dữ lệu từ bàn phím).\r\n\r\nVí dụ 1:\r\n01\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int a;\r\n    float b;\r\n \r\n    printf(\"Nhap so nguyen a = \");\r\n    scanf(\"%d\", &amp;a);\r\n \r\n    printf(\"Nhap so thuc b = \");\r\n    scanf(\"%f\", &amp;b);\r\n \r\n    printf(\"a = %d \\t b = %.3f\", a, b);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nViệc sử dụng lệnh scanf kết hợp với chuỗi định dạng để nhập dữ liệu sẽ tương tự như khi xuất dữ liệu bằng lệnh printf.\r\n\r\nChú ý đừng quên ký tự &amp; trước mỗi biến khi nhập. Nếu không sẽ sai.\r\n\r\nVí dụ 2:\r\n/* Tinh dien tich hinh chu nhat */\r\n\r\n#include\r\n\r\nint main()\r\n{\r\nint a, b;\r\nprintf(\"Nhap chieu dai, chieu rong: \\n\");\r\nscanf(\"%d%d\", &amp;a, &amp;b);\r\n\r\nprintf(\"Dien tich HCN: %d\\n\", a * b);\r\n\r\nreturn 0;\r\n}\r\n\r\nỞ ví dụ trên, các bạn thấy chúng ta có thể dùng 1 lệnh scanf để nhập dữ liệu cho nhiều biến, mỗi biến tương ứng với 1 định dạng nhất định.\r\n\r\n4. Nhập chuỗi trong C\r\n4.1 Lỗi khi nhập chuỗi bằng scanf\r\nNếu các bạn dùng hàm scanf để nhập chuỗi thì bạn sẽ thấy rằng không thể nhập được chuỗi có dấu cách hoặc nếu trước đó bạn nhập số thì sau đó không nhập được chuỗi nữa. Nếu không tin bạn có thể thử chạy với chương trình sau:\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    scanf(\"%s\", ten); // nhap chuoi khong can dau &amp;\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &amp;tuoi);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    scanf(\"%s\", tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nKết quả là bạn sẽ không nhập được tuổi và tên người yêu như hình sau.\r\n\r\nTroi Lenh Trong C\r\nKết quả khi dùng scanf để nhập chuỗi\r\nLý do là scanf chỉ đọc được dữ liệu không có khoảng trắng (đấu cách, dấu tab, enter, …) và các khoảng cách này sẽ được lưu vào bộ đệm bàn phím do đó bạn chỉ nhận được chuỗi đầu tiên trước đấu cách mà thôi (chữ Nguyen), sau mỗi dấu cách, các giá trị tiếp theo nếu phù hợp với kiểu dữ liệu của các biến tiếp theo thì nó sẽ gán luôn cho chúng và bạn sẽ không được nhập nữa. Do tuoi kiểu nguyên nên không nhận được, tenNguoiYeu sẽ nhận giá trị tiếp theo trong các giá trị nhận được là chữ Van.\r\n\r\n4.2 Hiện tượng trôi lệnh\r\nHiện tượng như trên được gọi là hiện tượng trôi lệnh. Nếu bây giờ bạn thực hiện cho nhập số trước và chuỗi ngay sau đó thì hiện tượng này cũng xảy ra vì scanf chỉ đọc số theo đúng định dạng mà không đọc được phím enter khi bạn nhấn lúc nhập xong số (enter là ký tự hoặc cũng có thể coi là chuỗi), nó được lưu vào bộ đệm và khi đọc giá trị nhập cho chuỗi nó tìm trong bộ đệm thấy ký tự enter là kiểu chuỗi nên nó gán luôn cho chuỗi đó.\r\n\r\nĐể nhập được chuỗi có khoảng trắng (dấu cách) chúng ta sử dụng hàm gets.\r\n\r\nĐể không bị trôi lệnh khi nhập số trước và chuỗi sau ta cần xóa bộ đệm bàn phím bằng lệnh fflush(stdin); ngay sau khi nhập số.\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    gets(ten); // nhap chuoi khong can dau &amp;\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &amp;tuoi);\r\n    fflush(stdin);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    gets(tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\nNếu bạn dùng Linux thì fflush(stdin); sẽ không hoạt động, bạn có thể khắc phục bằng cách nhập vào 1 chuỗi tạm ngay sau khi nhập số. Việc nhập chuỗi tạm này chỉ để xóa bỏ các ký tự, chuỗi ký tự thừa có trong bộ đệm như sau (cách này cũng dùng được khi bạn làm trên windows).\r\n<pre>#include \r\n \r\nint main()\r\n{\r\n    int tuoi = 0;\r\n    // khai bao chuoi co toi da 30 ky tu\r\n    char ten[30], tenNguoiYeu[30], temp[255];\r\n \r\n    printf(\"Ho va ten cua ban ten la gi? \");\r\n    gets(ten); // nhap chuoi khong can dau &amp;\r\n \r\n    printf(\"Ban bao nhieu tuoi roi? \");\r\n    scanf(\"%d\", &amp;tuoi);\r\n    //fflush(stdin);\r\n    gets(temp);\r\n \r\n    printf(\"Nguoi yeu cua ban ten la gi? \");\r\n    gets(tenNguoiYeu);\r\n \r\n    printf(\"\\n====\\n\");\r\n    printf(\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\", ten, tuoi, tenNguoiYeu);\r\n \r\n    return 0;\r\n}\r\n</pre>\r\n5. Giải thích một chút về printf, scanf và stdio.h\r\n5.1 Chữ f trong printf và scanf\r\nNhư các bạn đã biết print nghĩa là in, scan là quét hay ta gọi trong này là để nhập. Vậy tại sao chúng lại có chữ f đằng sau để thành printf và scanf ?\r\n\r\nChữ f này có nghĩa là format (định dạng). Như các bạn thấy chúng ta nhập hoặc xuất các giá trị của các biến đều có định dạng % gì đó ví dụ %d là số nguyên, %f là số thực,… và chữ f này chính là có ý nghĩa như thế.\r\n\r\n5.2 Thư viện stdio.h ?\r\nTrong tất cả các chương trình từ trước tới giờ, chúng ta luôn có #include , vậy nó là gì?\r\n\r\n#include nghĩa là bao gồm tức là chương trình của chúng ta sẽ khai báo sử dụng một cái gì đó, mà ở đây là sử dụng thư viện stdio.h\r\n\r\nVậy stdio.h là gì? std viết tắt của standard , i viết tắt của input, o viết tắt của output, h viết tắt của header (header – đầu, trên đầu – vì nó được khai báo ở trên đầu của các chương trình). Vậy nó có nghĩa là standard input output – nhập xuất chuẩn. Chúng ta hiểu nó là thư viện phục vụ cho việc nhập xuất chuẩn của chương trình. Nhập xuất chuẩn chính là nhập từ bàn phím và xuất ra màn hình. Có còn rất nhiều nguồn nhập xuất như nhập từ file, nhập từ con trỏ chuột,… xuất ra máy in, xuất ra file,… nhưng họ coi bàn phím và màn hình là hệ thống nhập xuất chuẩn.\r\n\r\nBài tập\r\n\r\nViết chương trình nhập vào một số a bất kỳ và in ra giá trị a2, a3, a4\r\nViết chương trình đọc từ bàn phím 3 số nguyên biểu diễn ngày, tháng, năm và xuất ra màn hình dưới dạng “dd/mm/yyyy”.\r\nViết chương trình đọc và 2 số nguyên và in ra kết quả của phép (+), phép trừ (-), phép nhân (*), phép chia (/). Nhận xét kết quả chia 2 số nguyên.\r\nViết chương trình nhập vào bán kính hình cầu, tính và in ra diện tích, thể tích của hình cầu đó.\r\nHướng dẫn: S = 4πR^2 và V = (4/3)πR^3.\r\nNhập vào một số là số giây, đổi số giây này ra giờ phút giây và xuất theo dạng gio:phut:giay, mỗi thành phần có 2 chữ số. Ví dụ 3661 = 01:01:01.', 'Lập trình C: Bài 3 – Nhập xuất trong c', '', 'inherit', 'closed', 'closed', '', '121-revision-v1', '', '', '2018-12-09 14:37:23', '2018-12-09 14:37:23', '', 121, 'http://localhost/web-teach-code/blog/2018/12/09/121-revision-v1/', 0, 'revision', '', 0),
(130, 1, '2018-12-09 14:38:00', '2018-12-09 14:38:00', 'dsdsds\r\n\r\n<!--more-->\r\n\r\nfdf', 'dsd', '', 'trash', 'open', 'open', '', 'dsd__trashed', '', '', '2018-12-09 15:33:39', '2018-12-09 15:33:39', '', 0, 'http://localhost/web-teach-code/blog/?p=130', 0, 'post', '', 0),
(131, 1, '2018-12-09 14:38:00', '2018-12-09 14:38:00', 'dsdsds\r\n\r\n<!--more-->\r\n\r\nfdf', 'dsd', '', 'inherit', 'closed', 'closed', '', '130-revision-v1', '', '', '2018-12-09 14:38:00', '2018-12-09 14:38:00', '', 130, 'http://localhost/web-teach-code/blog/2018/12/09/130-revision-v1/', 0, 'revision', '', 0),
(132, 1, '2018-12-09 14:41:17', '2018-12-09 14:41:17', '{\n    \"old_sidebars_widgets_data\": {\n        \"value\": {\n            \"wp_inactive_widgets\": [\n                \"recent-posts-2\",\n                \"recent-comments-2\",\n                \"archives-2\",\n                \"categories-2\",\n                \"meta-2\"\n            ],\n            \"sidebar\": [\n                \"search-2\"\n            ],\n            \"widget-header\": [],\n            \"footer-first\": [],\n            \"footer-second\": [],\n            \"footer-third\": []\n        },\n        \"type\": \"global_variable\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 14:41:16\"\n    },\n    \"twentyfifteen::nav_menu_locations[primary]\": {\n        \"value\": 2,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 14:41:16\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'a205cecb-ce3b-4ba4-b4e9-3f741195652e', '', '', '2018-12-09 14:41:17', '2018-12-09 14:41:17', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/a205cecb-ce3b-4ba4-b4e9-3f741195652e/', 0, 'customize_changeset', '', 0),
(133, 1, '2018-12-09 15:22:22', '2018-12-09 15:22:22', '{\n    \"nav_menu_item[80]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/cuc-de/\",\n            \"title\": \"C\\u1ef1c d\\u1ec5 \",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 1,\n            \"status\": \"publish\",\n            \"original_title\": \"C\\u1ef1c d\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:22:22\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'e204b668-9d95-42ad-adda-de52f68f7351', '', '', '2018-12-09 15:22:22', '2018-12-09 15:22:22', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/e204b668-9d95-42ad-adda-de52f68f7351/', 0, 'customize_changeset', '', 0),
(134, 1, '2018-12-09 15:22:52', '2018-12-09 15:22:52', '{\n    \"nav_menu_item[80]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/cuc-de/\",\n            \"title\": \"C\\u1ef1c d\\u1ec5 \",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 2,\n            \"status\": \"publish\",\n            \"original_title\": \"C\\u1ef1c d\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:22:52\"\n    },\n    \"nav_menu_item[81]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/de/\",\n            \"title\": \"D\\u1ec5\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 3,\n            \"status\": \"publish\",\n            \"original_title\": \"D\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:22:52\"\n    },\n    \"nav_menu_item[82]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/trung-binh/\",\n            \"title\": \"Trung b\\u00ecnh\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 4,\n            \"status\": \"publish\",\n            \"original_title\": \"Trung b\\u00ecnh\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:22:52\"\n    },\n    \"nav_menu_item[86]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/kho/\",\n            \"title\": \"Kh\\u00f3\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 5,\n            \"status\": \"publish\",\n            \"original_title\": \"Kh\\u00f3\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:22:52\"\n    },\n    \"nav_menu_item[-8975138909644997000]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 1,\n            \"type\": \"custom\",\n            \"title\": \"Trang ch\\u1ee7 \",\n            \"url\": \"http://localhost/web-teach-code/blog\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Home\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:22:52\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'f8ff0318-ad83-409a-b678-2dad3fdf28f1', '', '', '2018-12-09 15:22:52', '2018-12-09 15:22:52', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/f8ff0318-ad83-409a-b678-2dad3fdf28f1/', 0, 'customize_changeset', '', 0),
(135, 1, '2018-12-09 15:22:53', '2018-12-09 15:22:53', '', 'Trang chủ', '', 'publish', 'closed', 'closed', '', 'trang-chu', '', '', '2018-12-09 15:22:53', '2018-12-09 15:22:53', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/trang-chu/', 1, 'nav_menu_item', '', 0),
(136, 1, '2018-12-09 15:23:10', '2018-12-09 15:23:10', '{\n    \"nav_menu_item[80]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/cuc-de/\",\n            \"title\": \"C\\u1ef1c d\\u1ec5 \",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 3,\n            \"status\": \"publish\",\n            \"original_title\": \"C\\u1ef1c d\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:23:10\"\n    },\n    \"nav_menu_item[81]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/de/\",\n            \"title\": \"D\\u1ec5\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 4,\n            \"status\": \"publish\",\n            \"original_title\": \"D\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:23:10\"\n    },\n    \"nav_menu_item[82]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/trung-binh/\",\n            \"title\": \"Trung b\\u00ecnh\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 5,\n            \"status\": \"publish\",\n            \"original_title\": \"Trung b\\u00ecnh\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:23:10\"\n    },\n    \"nav_menu_item[86]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/kho/\",\n            \"title\": \"Kh\\u00f3\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 6,\n            \"status\": \"publish\",\n            \"original_title\": \"Kh\\u00f3\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:23:10\"\n    },\n    \"nav_menu_item[-6755762182262159000]\": {\n        \"value\": {\n            \"object_id\": 6,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"taxonomy\",\n            \"title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/huong-dan/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:23:10\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '5869a4ef-7152-45d0-b3c9-a69d95001b5a', '', '', '2018-12-09 15:23:10', '2018-12-09 15:23:10', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/5869a4ef-7152-45d0-b3c9-a69d95001b5a/', 0, 'customize_changeset', '', 0),
(138, 1, '2018-12-09 15:25:23', '2018-12-09 15:25:23', '{\n    \"nav_menu_item[80]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:25:23\"\n    },\n    \"nav_menu_item[81]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:25:23\"\n    },\n    \"nav_menu_item[82]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:25:23\"\n    },\n    \"nav_menu_item[86]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:25:23\"\n    },\n    \"nav_menu_item[-4540725286645928000]\": {\n        \"value\": {\n            \"object_id\": 7,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 3,\n            \"type\": \"taxonomy\",\n            \"title\": \"B\\u00e0i t\\u1eadp\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"B\\u00e0i t\\u1eadp\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:25:23\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '752d2815-2d6f-479d-aaca-be0abaa30f15', '', '', '2018-12-09 15:25:23', '2018-12-09 15:25:23', '', 0, 'http://localhost/web-teach-code/blog/2018/12/09/752d2815-2d6f-479d-aaca-be0abaa30f15/', 0, 'customize_changeset', '', 0),
(140, 1, '2018-12-09 15:27:52', '2018-12-09 15:27:52', '{\n    \"nav_menu[2]\": {\n        \"value\": {\n            \"name\": \"menu1\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": false\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:26:45\"\n    },\n    \"nav_menu_item[137]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:26:45\"\n    },\n    \"nav_menu_item[139]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:26:45\"\n    },\n    \"nav_menu_item[-3690409466425035000]\": {\n        \"value\": {\n            \"object_id\": 6,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"taxonomy\",\n            \"title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/huong-dan/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:26:45\"\n    },\n    \"nav_menu_item[-6807883782564377000]\": {\n        \"value\": {\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"menu_item_parent\": -6496115162444284000,\n            \"position\": 2,\n            \"type\": \"taxonomy\",\n            \"title\": \"D\\u1ec5\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/de/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"D\\u1ec5\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:27:44\"\n    },\n    \"nav_menu_item[-7232023422333282000]\": {\n        \"value\": {\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"menu_item_parent\": -6496115162444284000,\n            \"position\": 3,\n            \"type\": \"taxonomy\",\n            \"title\": \"Trung b\\u00ecnh\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/trung-binh/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Trung b\\u00ecnh\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:27:52\"\n    },\n    \"nav_menu_item[-8778460048611746000]\": {\n        \"value\": {\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"menu_item_parent\": -6496115162444284000,\n            \"position\": 1,\n            \"type\": \"taxonomy\",\n            \"title\": \"C\\u1ef1c d\\u1ec5\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/cuc-de/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"C\\u1ef1c d\\u1ec5\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:27:44\"\n    },\n    \"nav_menu_item[-3069562941669112000]\": {\n        \"value\": {\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"menu_item_parent\": -6496115162444284000,\n            \"position\": 4,\n            \"type\": \"taxonomy\",\n            \"title\": \"Kh\\u00f3\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/kho/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Kh\\u00f3\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:27:52\"\n    },\n    \"nav_menu_item[-6496115162444284000]\": {\n        \"value\": {\n            \"object_id\": 7,\n            \"object\": \"category\",\n            \"menu_item_parent\": 0,\n            \"position\": 7,\n            \"type\": \"taxonomy\",\n            \"title\": \"B\\u00e0i t\\u1eadp\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"B\\u00e0i t\\u1eadp\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:27:52\"\n    },\n    \"nav_menu_item[-2519523024894902300]\": {\n        \"value\": {\n            \"object_id\": 8,\n            \"object\": \"category\",\n            \"menu_item_parent\": -3690409466425035000,\n            \"position\": 1,\n            \"type\": \"taxonomy\",\n            \"title\": \"C\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/huong-dan/c/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"C\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Category\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:27:44\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '3bc254b4-22bf-4cf3-926e-2fb35c9e084c', '', '', '2018-12-09 15:27:52', '2018-12-09 15:27:52', '', 0, 'http://localhost/web-teach-code/blog/?p=140', 0, 'customize_changeset', '', 0),
(143, 1, '2018-12-09 15:27:55', '2018-12-09 15:27:55', ' ', '', '', 'publish', 'closed', 'closed', '', '143', '', '', '2018-12-10 01:29:15', '2018-12-09 18:29:15', '', 7, 'http://localhost/web-teach-code/blog/2018/12/09/143/', 2, 'nav_menu_item', '', 0),
(144, 1, '2018-12-09 15:27:56', '2018-12-09 15:27:56', ' ', '', '', 'publish', 'closed', 'closed', '', '144', '', '', '2018-12-10 01:29:16', '2018-12-09 18:29:16', '', 7, 'http://localhost/web-teach-code/blog/2018/12/09/144/', 3, 'nav_menu_item', '', 0),
(145, 1, '2018-12-09 15:27:57', '2018-12-09 15:27:57', ' ', '', '', 'publish', 'closed', 'closed', '', '145', '', '', '2018-12-10 01:29:14', '2018-12-09 18:29:14', '', 7, 'http://localhost/web-teach-code/blog/2018/12/09/145/', 1, 'nav_menu_item', '', 0),
(146, 1, '2018-12-09 15:27:57', '2018-12-09 15:27:57', ' ', '', '', 'publish', 'closed', 'closed', '', '146', '', '', '2018-12-10 01:29:16', '2018-12-09 18:29:16', '', 7, 'http://localhost/web-teach-code/blog/2018/12/09/146/', 4, 'nav_menu_item', '', 0),
(147, 1, '2018-12-09 15:27:58', '2018-12-09 15:27:58', ' ', '', '', 'publish', 'closed', 'closed', '', '147', '', '', '2018-12-10 01:29:15', '2018-12-09 18:29:15', '', 6, 'http://localhost/web-teach-code/blog/2018/12/09/147/', 3, 'nav_menu_item', '', 0),
(148, 1, '2018-12-09 15:29:10', '2018-12-09 15:29:10', '{\n    \"sidebars_widgets[sidebar]\": {\n        \"value\": [\n            \"search-2\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:29:10\"\n    },\n    \"widget_archives[4]\": {\n        \"value\": [],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 15:29:00\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'd72e6753-a1ae-440a-8a58-bd5843c3bb35', '', '', '2018-12-09 15:29:10', '2018-12-09 15:29:10', '', 0, 'http://localhost/web-teach-code/blog/?p=148', 0, 'customize_changeset', '', 0),
(149, 1, '2018-12-10 01:13:45', '2018-12-09 18:13:45', '<h2><span id=\"1_Gioi_thieu_ve_lap_trinh\">1. Giới thiệu về lập trình</span></h2>\r\nChắc hẳn bạn đã được tiếp xúc với máy tính, điện thoại dù ít hay nhiều và dùng các ứng dụng hoặc trò chơi trên đó ví như Word, Excel để làm việc văn phòng hoặc dùng Chrome, Firefox để vào Facebook, Google hay chính Facebook và Google là các phầm mềm.\r\n\r\nBạn tưởng tượng lập trình là quá trình bạn tạo ra các phần mềm, ứng dụng như thế. Bạn tạo ra ứng dụng cho người khác dùng, làm việc; bạn tạo ra game cho người khác chơi, làm ra website cho người khác truy cập vào. Nghĩ đến đây đã thấy hứng thú rồi 🙂\r\n\r\nĐể làm ra được phần mềm (hoặc game, website) thì chúng ta phải dạy cho máy tính cách làm việc hay nói cách khác là đưa các quy tắc mà chúng ta mong muốn để máy tính thực hiện như là khi ấn nút lên trên thì nhân vật phải nhảy lên, ấn nút sang trái thì nhân vật sẽ đi sang trái.\r\n\r\nGiống như dạy cho ai đó phải làm gì thì bạn phải nói cho họ nghe hoặc viết chữ để đưa cho họ đọc và từ đó họ mới hiểu được bạn nói gì. Việc đưa các quy tắc này vào máy tính để nó hiểu được bạn muốn làm gì mà thực hiện theo cũng vậy, bạn cần viết các yêu cầu đó theo một cú pháp cụ thể mà cái đó gọi là <strong>ngôn ngữ lập trình</strong>.\r\n\r\n<strong>Ngôn ngữ lập trình</strong> cũng giống như tiếng Việt để người Việt giao tiếp và hiểu, tiếng Anh dùng cho người Anh, Mỹ và nhiều nước khác, … <strong>ngôn ngữ lập trình</strong> nó là ngôn ngữ để người nói cho máy tính hiểu. Hiện nay có nhiều ngôn ngữ lập trình khác nhau như C, C++, Java, C#, PHP, python,… mỗi ngôn ngữ có ưu nhược điểm riêng và có ứng dụng trong các lĩnh vực nhất định.\r\n<h2><span id=\"2_Lap_trinh_C\">2. Lập trình C</span></h2>\r\nLập trình C đơn giản là các bạn dùng <strong>Ngôn ngữ lập trình C</strong> để tạo ra các phần mềm.\r\n\r\nMỗi phần mềm hay gọi là chương trình (chương trình máy tính) sẽ được viết bởi ngôn ngữ C bằng một hay nhiền file với những quy tắc nhất định của ngôn ngữ mà chúng ta sẽ dần tìm hiểu.\r\n<h2><span id=\"3_Cai_dat_cong_cu\">3. Cài đặt công cụ</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"31_Cai_dat\">3.1 Cài đặt</span></h3>\r\nĐể có thể lập trình C thì các bạn cần cài bộ dịch gcc hoặc g++. Tuy nhiên để dễ dàng thì hiện tại có nhiều phần mềm tích hợp (hay gọi là môi trường phát triển – IDE) để chúng ta có thể dễ dàng.\r\n<ul>\r\n 	<li>Đối với các bạn dùng Windows có thể download <a href=\"https://sourceforge.net/projects/orwelldevcpp/\">Dev-C++</a> hoặc <a href=\"http://www.codeblocks.org/downloads/binaries\">Code::Blocks</a> về cài đặt và chúng ta có thể dùng ngay để viết các chương trình đơn giản.</li>\r\n 	<li>Đối với các bạn dùng Linux (ubuntu, Linux Mint,…) có thể cài bằng cách mở terminal lên và chạy lệnh cài đặt sau:<code>sudo apt-get install build-essential</code>\r\n\r\nSau khi chạy lệnh trên, các bạn có thể mở bất cứ trình soạn thảo nào để code (như gedit, vim, hay sublime-text,…) sau đó dịch, chạy chương trình bằng terminal.\r\nHoặc các bạn cũng hoàn toàn có thể download và cài <a href=\"http://www.codeblocks.org/downloads/binaries\">Code::Blocks</a> trên Linux để dùng rất tiện, hoặc dùng lệnh cài:\r\n\r\n<code>sudo apt-get install codeblocks</code>\r\n\r\nCác bạn có thể xem thêm chi tiết về <a href=\"https://nguyenvanquan7826.com/2014/05/21/linux-cc-lap-trinh-cc-tren-ubuntu-linux/\">Lập trình C/C++ trên Ubuntu (Linux) tại blog của mình</a></li>\r\n</ul>\r\nĐể dễ và thống nhất trong quá trình làm, mình sẽ dùng Dev-C++ nhé.\r\n<h3><span id=\"32_Gioi_thieu_co_ban_ve_Dev-C\">3.2 Giới thiệu cơ bản về Dev-C++</span></h3>\r\nĐể tiện hình dung, các bạn mở Dev-C++ lên sẽ thấy giao diện như hình sau (<em>Hiện tại bản mình đang dùng là 5.11, các bạn dùng bản khác có thể sẽ có một chút khác nhưng sẽ không đáng kể)</em>.\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"776\" height=\"651\" /></center><center><em>Giao diện Dev-C++ 5.11</em></center>Trong hình trên, có một số phần chính mình đánh dấu bằng các số với ý nghĩa sau:\r\n1. Nút tạo file mới\r\n2. Nút mở một file đã có\r\n3. Nút biên dịch và chạy chương trình\r\n4. Vùng soạn thảo code (mã chương trình)\r\n5. Vùng hiển thị lỗi nếu có.\r\n<h2><span id=\"4_Tao_chuong_trinh_dau_tien\">4. Tạo chương trình đầu tiên</span></h2>\r\nBây giờ các bạn có thể viết chương trình phần mềm đầu tiên để thử nghiệm.\r\nB1: Tạo 1 file mới.\r\nB2: Gõ hoặc chép đoạn code sau vào vùng soạn thảo.\r\n<div>\r\n<div id=\"highlighter_879025\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Welcome\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nB3: Lưu lại với tên file là <strong>Test.c</strong> hoặc <strong>Test.cpp</strong>\r\nB4: Click nút chạy chương trình và bạn sẽ thấy một màn hình màu đen hiện lên như sau:\r\n\r\n<center><img title=\"Title\" src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c-welcome.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"674\" height=\"336\" /></center><center><em>Chương trình C đầu tiên khi chạy</em></center>Trong đó các bạn có thể thấy chữ <strong><em>Welcome</em></strong> hiện lên, đó chính là dòng chữ được in ra khi dùng lệnh <strong>printf</strong>. Phần dưới đường kẻ ngang là do Dev-C tự sinh ra.\r\n\r\n<strong>Mình giải thích một chút về code:</strong>\r\n<ul>\r\n 	<li><strong>Dòng 1:</strong> Chứa phát biểu tiền xử lý <code>#include &lt;stdio.h&gt;</code> . Vì trong chương trình này ta sử dụng các lệnh trong thư viện của C là printf, do đó bạn cần phải có khai báo của hàm thư viện này để báo cho trình biên dịch C biết. Nếu không khai báo chương trình sẽ báo lỗi. Thư viện <strong>stdio.h</strong> viết tắt của <strong>standard input output</strong> (std – i – o) là thư viện nhập xuất chuẩn).</li>\r\n 	<li><strong>Dòng 3: ** <code>int main()</code> là thành phần chính của mọi chương trình C. Mọi chương trình C đều bắt đầu thi hành từ hàm **main</strong>. Cặp dấu ngoặc <code>()</code> cho biết đây là khối hàm (function). Hàm main() có từ khóa <code>int</code> đầu tiên cho biết hàm này trả về giá trị kiểu nguyên (int).</li>\r\n 	<li><strong>Dòng 4 và 7:</strong> cặp dấu ngoặc móc <code>{}</code> giới hạn thân của hàm. Thân hàm bắt đầu bằng dấu { và kết thúc bằng dấu }.</li>\r\n 	<li><strong>Dòng 5:</strong> <code>printf (\"Welcome\");</code>, chỉ thị cho máy in ra chuỗi ký tự nằm trong nháy kép <code>\"\"</code>. Hàng này được gọi là một câu lệnh, kết thúc một câu lệnh trong C phải là dấu chấm phẩy( ; ).</li>\r\n 	<li><strong>Dòng 6:</strong> <code>return 0;</code> Trả về giá trị kiểu nguyên là 0 theo như đúng ban đầu là khai báo int main().</li>\r\n</ul>\r\n<strong>Lưu ý:</strong>\r\n<ol>\r\n 	<li>Trong chương trình này mình <strong>không dùng thư viện conio.h</strong> vì trong chuẩn C không có thư viện này, và từ đó cũng không dùng được getch() để dừng màn hình mà mình đã thay bằng lệnh <code>system(\"pause\");</code> trong thư viện <strong>stdlib.h</strong></li>\r\n 	<li>Khi dùng <code>return</code> để trả về giá trị của hàm thì các bạn có thể bỏ qua lệnh này chương trình vẫn chạy nhưng về chuẩn là sai, trả về 1 cũng sai, tóm lại là trả về 0. Nếu trả về 1 số khác không thì hệ thống máy tính sẽ hiểu là chương trình này của bạn sau khi chạy phát sinh ra cần đó lỗi.</li>\r\n</ol>\r\nBây giờ các bạn mở folder chứa file <strong>Test.c</strong> mà bạn vừa tạo ra, các bạn sẽ nhìn thấy một file có tên <strong>Test.exe</strong> (gọi tắt là file exe), đây chính là file chạy chương trình. Bây giờ nếu muốn bạn có thể click chuột vào file exe này là chạy được chương trình trên hoặc bạn có thể copy file exe này sang máy tính khác thì vẫn có thể chạy được, nó giống như bạn copy game từ máy này sang máy khác vậy.\r\n\r\nTừ đây ta có:\r\n<ul>\r\n 	<li>File <strong>Test.c</strong> là file chúng ta tạo ra và viết các lệnh để máy tính hiểu, file này gọi là <strong>file mã nguồn</strong>.</li>\r\n 	<li>File <strong>Test.exe</strong> là file sinh ra khi chúng ta ấn nút Chạy chương trình, file này gọi là <strong>file thực thi</strong>.</li>\r\n</ul>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c-file.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"144\" height=\"91\" /></center>&nbsp;\r\n\r\n<center><em>File mã nguồn và file thực thi</em></center><strong><em>Lưu ý: Các chương trình sau này chúng ta làm sẽ chủ yếu chạy trên màn hình đen như trên (gọi là màn hình console – đọc là ‘con sâu’), tuy không có giao diện đẹp mắt nhưng đây là phần lõi của lập trình, học tốt phần này chúng ta mới có thể làm được các chương trình có giao diện đồ họa và các ngôn ngữ khác cũng hầu hết dựa vào phần lõi này.</em></strong>', 'Lập trình C: Bài 1 – Hello World', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-1-hello-world', '', '', '2018-12-10 04:09:52', '2018-12-09 21:09:52', '', 0, 'http://localhost/web-teach-code/blog/?p=149', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(150, 1, '2018-12-10 01:13:31', '2018-12-09 18:13:31', '<h2><span id=\"1_Gioi_thieu_ve_lap_trinh\">1. Giới thiệu về lập trình</span></h2>\r\nChắc hẳn bạn đã được tiếp xúc với máy tính, điện thoại dù ít hay nhiều và dùng các ứng dụng hoặc trò chơi trên đó ví như Word, Excel để làm việc văn phòng hoặc dùng Chrome, Firefox để vào Facebook, Google hay chính Facebook và Google là các phầm mềm.\r\n\r\nBạn tưởng tượng lập trình là quá trình bạn tạo ra các phần mềm, ứng dụng như thế. Bạn tạo ra ứng dụng cho người khác dùng, làm việc; bạn tạo ra game cho người khác chơi, làm ra website cho người khác truy cập vào. Nghĩ đến đây đã thấy hứng thú rồi 🙂\r\n\r\nĐể làm ra được phần mềm (hoặc game, website) thì chúng ta phải dạy cho máy tính cách làm việc hay nói cách khác là đưa các quy tắc mà chúng ta mong muốn để máy tính thực hiện như là khi ấn nút lên trên thì nhân vật phải nhảy lên, ấn nút sang trái thì nhân vật sẽ đi sang trái.\r\n\r\nGiống như dạy cho ai đó phải làm gì thì bạn phải nói cho họ nghe hoặc viết chữ để đưa cho họ đọc và từ đó họ mới hiểu được bạn nói gì. Việc đưa các quy tắc này vào máy tính để nó hiểu được bạn muốn làm gì mà thực hiện theo cũng vậy, bạn cần viết các yêu cầu đó theo một cú pháp cụ thể mà cái đó gọi là <strong>ngôn ngữ lập trình</strong>.\r\n\r\n<strong>Ngôn ngữ lập trình</strong> cũng giống như tiếng Việt để người Việt giao tiếp và hiểu, tiếng Anh dùng cho người Anh, Mỹ và nhiều nước khác, … <strong>ngôn ngữ lập trình</strong> nó là ngôn ngữ để người nói cho máy tính hiểu. Hiện nay có nhiều ngôn ngữ lập trình khác nhau như C, C++, Java, C#, PHP, python,… mỗi ngôn ngữ có ưu nhược điểm riêng và có ứng dụng trong các lĩnh vực nhất định.\r\n<h2><span id=\"2_Lap_trinh_C\">2. Lập trình C</span></h2>\r\nLập trình C đơn giản là các bạn dùng <strong>Ngôn ngữ lập trình C</strong> để tạo ra các phần mềm.\r\n\r\nMỗi phần mềm hay gọi là chương trình (chương trình máy tính) sẽ được viết bởi ngôn ngữ C bằng một hay nhiền file với những quy tắc nhất định của ngôn ngữ mà chúng ta sẽ dần tìm hiểu.\r\n<h2><span id=\"3_Cai_dat_cong_cu\">3. Cài đặt công cụ</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"31_Cai_dat\">3.1 Cài đặt</span></h3>\r\nĐể có thể lập trình C thì các bạn cần cài bộ dịch gcc hoặc g++. Tuy nhiên để dễ dàng thì hiện tại có nhiều phần mềm tích hợp (hay gọi là môi trường phát triển – IDE) để chúng ta có thể dễ dàng.\r\n<ul>\r\n 	<li>Đối với các bạn dùng Windows có thể download <a href=\"https://sourceforge.net/projects/orwelldevcpp/\">Dev-C++</a> hoặc <a href=\"http://www.codeblocks.org/downloads/binaries\">Code::Blocks</a> về cài đặt và chúng ta có thể dùng ngay để viết các chương trình đơn giản.</li>\r\n 	<li>Đối với các bạn dùng Linux (ubuntu, Linux Mint,…) có thể cài bằng cách mở terminal lên và chạy lệnh cài đặt sau:\r\n\r\n<code>sudo apt-get install build-essential</code>\r\n\r\nSau khi chạy lệnh trên, các bạn có thể mở bất cứ trình soạn thảo nào để code (như gedit, vim, hay sublime-text,…) sau đó dịch, chạy chương trình bằng terminal.\r\nHoặc các bạn cũng hoàn toàn có thể download và cài <a href=\"http://www.codeblocks.org/downloads/binaries\">Code::Blocks</a> trên Linux để dùng rất tiện, hoặc dùng lệnh cài:\r\n\r\n<code>sudo apt-get install codeblocks</code>\r\n\r\nCác bạn có thể xem thêm chi tiết về <a href=\"https://nguyenvanquan7826.com/2014/05/21/linux-cc-lap-trinh-cc-tren-ubuntu-linux/\">Lập trình C/C++ trên Ubuntu (Linux) tại blog của mình</a></li>\r\n</ul>\r\nĐể dễ và thống nhất trong quá trình làm, mình sẽ dùng Dev-C++ nhé.\r\n<h3><span id=\"32_Gioi_thieu_co_ban_ve_Dev-C\">3.2 Giới thiệu cơ bản về Dev-C++</span></h3>\r\nĐể tiện hình dung, các bạn mở Dev-C++ lên sẽ thấy giao diện như hình sau (<em>Hiện tại bản mình đang dùng là 5.11, các bạn dùng bản khác có thể sẽ có một chút khác nhưng sẽ không đáng kể)</em>.\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"776\" height=\"651\" /></center><center><em>Giao diện Dev-C++ 5.11</em></center>Trong hình trên, có một số phần chính mình đánh dấu bằng các số với ý nghĩa sau:\r\n1. Nút tạo file mới\r\n2. Nút mở một file đã có\r\n3. Nút biên dịch và chạy chương trình\r\n4. Vùng soạn thảo code (mã chương trình)\r\n5. Vùng hiển thị lỗi nếu có.\r\n<h2><span id=\"4_Tao_chuong_trinh_dau_tien\">4. Tạo chương trình đầu tiên</span></h2>\r\nBây giờ các bạn có thể viết chương trình phần mềm đầu tiên để thử nghiệm.\r\nB1: Tạo 1 file mới.\r\nB2: Gõ hoặc chép đoạn code sau vào vùng soạn thảo.\r\n<div>\r\n<div id=\"highlighter_879025\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Welcome\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nB3: Lưu lại với tên file là <strong>Test.c</strong> hoặc <strong>Test.cpp</strong>\r\nB4: Click nút chạy chương trình và bạn sẽ thấy một màn hình màu đen hiện lên như sau:\r\n\r\n<center><img title=\"Title\" src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c-welcome.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"674\" height=\"336\" /></center><center><em>Chương trình C đầu tiên khi chạy</em></center>Trong đó các bạn có thể thấy chữ <strong><em>Welcome</em></strong> hiện lên, đó chính là dòng chữ được in ra khi dùng lệnh <strong>printf</strong>. Phần dưới đường kẻ ngang là do Dev-C tự sinh ra.\r\n\r\n<strong>Mình giải thích một chút về code:</strong>\r\n<ul>\r\n 	<li><strong>Dòng 1:</strong> Chứa phát biểu tiền xử lý <code>#include &lt;stdio.h&gt;</code> . Vì trong chương trình này ta sử dụng các lệnh trong thư viện của C là printf, do đó bạn cần phải có khai báo của hàm thư viện này để báo cho trình biên dịch C biết. Nếu không khai báo chương trình sẽ báo lỗi. Thư viện <strong>stdio.h</strong> viết tắt của <strong>standard input output</strong> (std – i – o) là thư viện nhập xuất chuẩn).</li>\r\n 	<li><strong>Dòng 3: ** <code>int main()</code> là thành phần chính của mọi chương trình C. Mọi chương trình C đều bắt đầu thi hành từ hàm **main</strong>. Cặp dấu ngoặc <code>()</code> cho biết đây là khối hàm (function). Hàm main() có từ khóa <code>int</code> đầu tiên cho biết hàm này trả về giá trị kiểu nguyên (int).</li>\r\n 	<li><strong>Dòng 4 và 7:</strong> cặp dấu ngoặc móc <code>{}</code> giới hạn thân của hàm. Thân hàm bắt đầu bằng dấu { và kết thúc bằng dấu }.</li>\r\n 	<li><strong>Dòng 5:</strong> <code>printf (\"Welcome\");</code>, chỉ thị cho máy in ra chuỗi ký tự nằm trong nháy kép <code>\"\"</code>. Hàng này được gọi là một câu lệnh, kết thúc một câu lệnh trong C phải là dấu chấm phẩy( ; ).</li>\r\n 	<li><strong>Dòng 6:</strong> <code>return 0;</code> Trả về giá trị kiểu nguyên là 0 theo như đúng ban đầu là khai báo int main().</li>\r\n</ul>\r\n<strong>Lưu ý:</strong>\r\n<ol>\r\n 	<li>Trong chương trình này mình <strong>không dùng thư viện conio.h</strong> vì trong chuẩn C không có thư viện này, và từ đó cũng không dùng được getch() để dừng màn hình mà mình đã thay bằng lệnh <code>system(\"pause\");</code> trong thư viện <strong>stdlib.h</strong></li>\r\n 	<li>Khi dùng <code>return</code> để trả về giá trị của hàm thì các bạn có thể bỏ qua lệnh này chương trình vẫn chạy nhưng về chuẩn là sai, trả về 1 cũng sai, tóm lại là trả về 0. Nếu trả về 1 số khác không thì hệ thống máy tính sẽ hiểu là chương trình này của bạn sau khi chạy phát sinh ra cần đó lỗi.</li>\r\n</ol>\r\nBây giờ các bạn mở folder chứa file <strong>Test.c</strong> mà bạn vừa tạo ra, các bạn sẽ nhìn thấy một file có tên <strong>Test.exe</strong> (gọi tắt là file exe), đây chính là file chạy chương trình. Bây giờ nếu muốn bạn có thể click chuột vào file exe này là chạy được chương trình trên hoặc bạn có thể copy file exe này sang máy tính khác thì vẫn có thể chạy được, nó giống như bạn copy game từ máy này sang máy khác vậy.\r\n\r\nTừ đây ta có:\r\n<ul>\r\n 	<li>File <strong>Test.c</strong> là file chúng ta tạo ra và viết các lệnh để máy tính hiểu, file này gọi là <strong>file mã nguồn</strong>.</li>\r\n 	<li>File <strong>Test.exe</strong> là file sinh ra khi chúng ta ấn nút Chạy chương trình, file này gọi là <strong>file thực thi</strong>.</li>\r\n</ul>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c-file.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"144\" height=\"91\" /></center>&nbsp;\r\n\r\n<center><em>File mã nguồn và file thực thi</em></center><strong><em>Lưu ý: Các chương trình sau này chúng ta làm sẽ chủ yếu chạy trên màn hình đen như trên (gọi là màn hình console – đọc là ‘con sâu’), tuy không có giao diện đẹp mắt nhưng đây là phần lõi của lập trình, học tốt phần này chúng ta mới có thể làm được các chương trình có giao diện đồ họa và các ngôn ngữ khác cũng hầu hết dựa vào phần lõi này.</em></strong>', 'Lập trình C: Bài 1 – Hello World', '', 'inherit', 'closed', 'closed', '', '149-revision-v1', '', '', '2018-12-10 01:13:31', '2018-12-09 18:13:31', '', 149, 'http://localhost/web-teach-code/blog/2018/12/10/149-revision-v1/', 0, 'revision', '', 0),
(151, 1, '2018-12-10 01:14:14', '2018-12-09 18:14:14', '<h2><span id=\"1_Cac_ky_tu_dieu_khien\">1. Các ký tự điều khiển</span></h2>\r\n<ul>\r\n 	<li>\\n : Nhảy xuống dòng kế tiếp canh về cột đầu tiên.</li>\r\n 	<li>\\t : Tab ngang.</li>\r\n 	<li>\\r : Nhảy về đầu hàng, không xuống hàng.</li>\r\n 	<li>\\a : Tiếng kêu bip.</li>\r\n 	<li>\\\\ : In ra dấu \\</li>\r\n 	<li>\\” : In ra dấu “</li>\r\n 	<li>\\’ : In ra dấu ‘</li>\r\n 	<li>%%: In ra dấu %</li>\r\n</ul>\r\nĐây chỉ là một số ký tự điểu khiển quen thuộc, hay dùng, ngoài ra còn một só ký tự điều khiển khác các bạn có thể xem thêm trong các tài liệu khác. Để hiểu rõ về các ký tự điều khiển các bạn hãy chạy thử chương trình sau và tự rút ra nhận xét cho riêng mình.\r\n<div>\r\n<div id=\"highlighter_760085\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\a\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hinh nhu vua co tieng gi keu @@\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban dang o dong thu 2\\nBay gio xuong dong 3 roi ne ^^\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\tDong nay cach ra 1 tab thi phai?\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\t\\t\\t\\t\\t\\tCach ra nhieu tab qua \\rVe dau dong thoi\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dau \\\\ \\nDau \\\'\\nDau \\\" \\nDau %%\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// day la mot dong ghi chu va chi co tac dung chu thich khi viet code cho de hieu</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/*</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">      </code><code class=\"cpp comments\">Day la mot doan ghi chu</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">      </code><code class=\"cpp comments\">Doan ghi chu nay co 2 dong</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"2_Bo_chu_viet\">2. Bộ chữ viết</span></h2>\r\nBộ chữ viết trong ngôn ngữ C bao gồm những ký tự, ký hiệu sau: (phân biệt chữ in hoa và in thường):\r\n<ul>\r\n 	<li>26 chữ cái latinh hoa A,B,C…Z</li>\r\n 	<li>26 chữ cái latinh thường a,b,c …z.</li>\r\n 	<li>10 chữ số thập phân 0,1,2…9.</li>\r\n 	<li>Các ký hiệu toán học: +, -, *, /, =, &lt;, &gt;, (, )</li>\r\n 	<li>Các ký hiệu đặc biệt: :. , ; ” ‘ _ @ # $ ! ^ [ ] { } …</li>\r\n 	<li>Dấu cách hay khoảng trống, xuống hàng (\\n) và tab (\\t)</li>\r\n</ul>\r\n<h2><span id=\"3_Tu_khoa\">3. Từ khóa</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nLà các từ mà ngôn ngữ C đã xây dựng sẵn và có những chức năng nhất định, sau này làm nhiều các bạn sẽ biết dần dần. Chúng ta không nên định nghĩa lại những từ khóa này.\r\n<blockquote><strong><em>asm • auto • break • case • cdecl • char • class • const • continue • _cs • default • delete • do double • _ds • else • enum • _es • extern • _export • far • _fastcall • float • for •friend • goto • huge • if • inline • int • interrupt • _loadds • long • near • new • operator • pascal • private • protected • public • register • return • _saveregs • _seg • short •signed • sizeof • _ss • static • struct • switch • template • this • typedef • union • unsigned • virtual • void • volatile • while</em></strong></blockquote>\r\n<h2><span id=\"4_Kieu_du_lieu\">4. Kiểu dữ liệu</span></h2>\r\nTrong cuộc sống có nhiều loại vật dụng để chứa đựng các thứ khác nhau như Rổ để đựng rau, Cốc (ca) để đựng nước. Cũng giống vậy, trong lập trình có các kiểu dữ liệu để có thể biểu diễn (lưu trữ) các thành phần tương ứng.\r\n\r\nMỗi kiểu dữ liệu sẽ có kích thước (chiếm diện tích), loại giá trị và miền giá trị khác nhau trong bộ nhớ máy tính khi sử dụng. Dưới đây là một số kiểu dữ liệu cơ bản hay dùng trong C.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Loại dữ liệu</th>\r\n<th>Kiểu dữ liệu</th>\r\n<th align=\"center\">Kích thước (byte)</th>\r\n<th>Miền giá trị</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Kiểu Ký tự</td>\r\n<td>char</td>\r\n<td align=\"center\">1</td>\r\n<td>-128 đến 127</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>unsigned char</td>\r\n<td align=\"center\">1</td>\r\n<td>0 đến 255</td>\r\n</tr>\r\n<tr>\r\n<td>Kiểu Số nguyên</td>\r\n<td>short</td>\r\n<td align=\"center\">2</td>\r\n<td>-32768 đến 32767</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>int</td>\r\n<td align=\"center\">4</td>\r\n<td>-2147483648 đến 2147483647</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>long</td>\r\n<td align=\"center\">4</td>\r\n<td>-2147483648 đến 2147483647</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>long long</td>\r\n<td align=\"center\">8</td>\r\n<td>-9223372036854775808 đến 9223372036854775807</td>\r\n</tr>\r\n<tr>\r\n<td>Kiểu Số thực</td>\r\n<td>float</td>\r\n<td align=\"center\">4</td>\r\n<td>1.175494<sup>-38</sup> đến 3.402823<sup>38</sup></td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>double</td>\r\n<td align=\"center\">8</td>\r\n<td>2.225074<sup>308</sup> đến 1.797693<sup>308</sup></td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>long double</td>\r\n<td align=\"center\">12</td>\r\n<td>3.362103<sup>-4932</sup> đến 1.189731<sup>4932</sup></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Lưu ý:</strong>\r\n<ul>\r\n 	<li>Trên đây là bảng thông tin của một số kiểu dữ liệu thông dụng hay dùng. Còn khá nhiều kiểu dữ liệu khác nhưng tôi không đưa vào, các bạn có thể tham khảo tại <a href=\"http://www.cplusplus.com/reference/climits/\">đây cho Kiểu số nguyên</a>, <a href=\"http://www.cplusplus.com/reference/cfloat/\">đây cho kiểu số thực</a></li>\r\n 	<li>Do C (hoặc C++) có nhiều phiên bản khác nhau và dùng trên các hệ điều hành khác nhau nên có thể giá trị và kích thức các kiểu dữ liệu cũng khác nhau. Bảng trên là tôi kiểm tra trên <em>win 7, Dev-C 5.11</em>.</li>\r\n</ul>\r\nCác bạn có thể dùng chương trình sau chạy và kiểm tra kết quả:\r\n<div>\r\n<div id=\"highlighter_96103\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;limits.h&gt;  // limits for interger</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;float.h&gt;   // limits for float</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"TYPE                %6s %20s %20s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"SIZE\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MIN VALUE\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MAX VALUE\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"char:          %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">), CHAR_MIN, CHAR_MAX);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"unsigned char: %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(unsigned </code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">), 0, UCHAR_MAX);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"short:         %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">short</code><code class=\"cpp plain\">), SHRT_MIN, SHRT_MAX);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"int:           %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">), INT_MIN, INT_MAX);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long:          %6ld byte %20ld %20ld\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code><code class=\"cpp plain\">), LONG_MIN, LONG_MAX);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long long:     %6ld byte %20lld %20lld\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp color1 bold\">long</code><code class=\"cpp plain\">), LLONG_MIN, LLONG_MAX);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"float:         %6ld byte %20e %20e\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">float</code><code class=\"cpp plain\">), FLT_MIN, FLT_MAX);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"double:        %6ld byte %20e %20e\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">), DBL_MIN, DBL_MAX);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long double:   %6ld byte %20Le %20Le\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">), LDBL_MIN, LDBL_MAX);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"5_Ten\">5. Tên</span></h2>\r\nMỗi chúng ta ai cũng có tên, do vậy trong lập trình C các thành phần cũng sẽ có tên. Ví dụ như tên hàm, tên biến, tên hằng số, tên nhãn,…\r\n<blockquote><strong><em>Tên hợp lệ là một chuỗi liên tiếp gồm ký tự chữ, số hoặc dấu gạch dưới. Tên phân biệt chữ hoa chữ thường và không trùng với từ khóa.</em></strong></blockquote>\r\n<ul>\r\n 	<li>Tên phân biệt chữ hóa chữ thường nên: <strong>a</strong> khác <strong>A</strong>, <strong>quan</strong> khác <strong>Quan</strong>.</li>\r\n 	<li><strong>VD Các tên đúng:</strong> a, quan, nguyenvanquan7826, quan_7826, _7826, _nhung, _123huong.</li>\r\n 	<li>**VD Các tên sai: **</li>\r\n</ul>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Tên sai</th>\r\n<th>Nguyên nhân</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>Bắt đầu bằng số</td>\r\n</tr>\r\n<tr>\r\n<td>1a</td>\r\n<td>Bắt đầu bằng số</td>\r\n</tr>\r\n<tr>\r\n<td>quan 7826</td>\r\n<td>Chứa dấu cách</td>\r\n</tr>\r\n<tr>\r\n<td>quan-7826</td>\r\n<td>Chứa dấu gạch ngang</td>\r\n</tr>\r\n<tr>\r\n<td>f(x)</td>\r\n<td>Chứa dấu ngoặc nhọn</td>\r\n</tr>\r\n<tr>\r\n<td>int</td>\r\n<td>Trùng với từ khóa</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2><span id=\"6_Bien\">6. Biến</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nTương ứng với mỗi kiểu dữ liệu chúng ta có các biến thuộc các kiểu đó và có miền giá trị tương ứng như trên dùng để lưu giá trị. Các bạn cần phân biệt kiểu và biến.\r\n\r\nVD cái rổ A để đựng rau muống, cái rổ B để đựng rau cần và chúng cùng là rổ, thì tương ứng biến a lưu giá trị số 5, còn biến b lưu giá trị số 9 mặc dù chúng cùng kiểu số nguyên.\r\n\r\nBiến có thể thay đổi giá trị trong quá trình chạy chương trình.\r\n<h3><span id=\"61_Khai_bao_bien\">6.1 Khai báo biến</span></h3>\r\nĐể khai báo biến ta dùng cú pháp:\r\n\r\n<strong>Kiểu_dữ_liệu Danh_sách_tên_biến;</strong>\r\n\r\nLý thuyết thì hơi dài, các bạn xem và chạy chương trình sau sẽ thấy cụ thể hơn:\r\n<div>\r\n<div id=\"highlighter_867030\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, b; </code><code class=\"cpp comments\">// khai bao 2 bien kieu so nguyen</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">c; </code><code class=\"cpp comments\">// khai bao 1 bien kieu so thuc</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// Gan gia tri cho cac bien</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">a = 1;      </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">b = 2;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">c = 3.4;</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// vua khai bao bien vua gan gia tri</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">e = 4, f = 6;</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"a = %d; b = %d\\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"c = %f\\n\"</code><code class=\"cpp plain\">, c);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"e = %d; f = %d\\n\"</code><code class=\"cpp plain\">, e, f);</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nNhư trên các bạn thấy cấu trúc khai báo rồi đó. Còn về lệnh xuất ra màn hình các giá trị thì có một số điều khác đó là cách sử dụng %d, %f . Cái này mình sẽ nói cụ thể ở phần sau, đến đây các bạn cứ viết theo để thấy được cách khai báo biến là ok roài. !\r\n<h3><span id=\"62_Pham_vi_cua_bien\">6.2 Phạm vi của biến</span></h3>\r\nKhi lập trình, bạn phải nắm rõ phạm vi của biến. Nếu khai báo và sử dụng không đúng, không rõ ràng sẽ dẫn đến sai sót khó kiểm soát được, vì vậy bạn cần phải xác định đúng vị trí, phạm vi sử dụng biến trước khi sử dụng biến.\r\n\r\nMỗi biến được khai báo ở đâu thì sẽ được dùng và có phạm vi hoạt động tương ứng từ nơi nó khai báo đến dấu đóng ngoặc nhọn <strong>}</strong> ngang cấp với nó.\r\n\r\nVí dụ chương trình sau.\r\n<div>\r\n<div id=\"highlighter_831812\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 1, b = 5; </code><code class=\"cpp comments\">// khai bao bien toan cuc, no se duoc dung o bat ky dau ke tu dong nay.</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao 2 bien trong ham main, no se duoc dung trong toan bo ham main ke tu dong nay</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c = 4, d = 6; </code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(c &lt; d)</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">e = 6, d = 8;  </code><code class=\"cpp comments\">// khai bao bien e va d, no duoc dung trong doan nay.</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">c = 7;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"gia tri cac bien trong khoi:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"e = %d \\t d = %d \\t c = %d\\n\"</code><code class=\"cpp plain\">, e, d, c);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp comments\">// den day bien e, d vua khai bao khong con hoat dong nua.</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// printf(\"gia tri bien e = %d\\n\", e);  // lenh nay sai vi bien e khong con ton tai nua</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"gia tri cac bien trong ham main:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"c = %d \\t d = %d\\n\"</code><code class=\"cpp plain\">, c, d);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"gia tri cac bien toan cuc:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"a = %d \\t b = %d\\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number25 index24 alt2\"></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chạy chương trình, xem kết quả và tự rút ra nhận xét nhá.\r\n\r\nTrong này có một lời giải thích nhỏ với các bạn sau khi chạy chương trình là chúng ta có <strong>khai báo 2 biến d</strong>, và 2 biến <strong>d</strong> này do nằm trong 2 khối lệnh khác nhau (1 cái nằm trong hàm main, 1 cái nằm trong đoạn lệnh if ) nên chúng hoàn toàn khác nhau, không ảnh hưởng gì đến nhau. Nhưng biến c thì chỉ khai báo 1 lần, nên khi dùng c trong đoạn lệnh if thì chính là dùng biến c của hàm main đã khai báo và biến c đã được thay đổi giá trị.\r\n<h2><span id=\"7_Hang\">7. Hằng</span></h2>\r\nHằng cũng giống như biến nhưng không thể thay đổi giá trị. Nếu bạn cố tình gán giá trị mới cho hằng thì sẽ bị sai.\r\n\r\nTên hằng thường viết in hoa để dễ nhận biết và phân biệt với biến.\r\n\r\nCú pháp khai báo hằng: <strong>#define TÊN_HẰNG giá_trị</strong> (Lưu ý không có dấu chấm phẩy ở cuối).\r\n\r\nCác bạn chạy và xem kết quả của ví dụ sau:\r\n<div>\r\n<div id=\"highlighter_223979\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#define AGE_MAX 150     // hang so</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp preprocessor\">#define C \'a\'            // hang ky tu</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp preprocessor\">#define NICK_NAME \"nguyenvanquan7826\" // hang chuoi</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"hang AGE_MAX = %d\\n\"</code><code class=\"cpp plain\">, AGE_MAX);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"hang C = %c\\n\"</code><code class=\"cpp plain\">, C);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"hang NICK_NAME = %s\\n\"</code><code class=\"cpp plain\">, NICK_NAME);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// AGE_MAX = 10; // lenh nay sai vi hang khong the thay doi duoc gia tri</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 2 – Các thành phần trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-2-cac-thanh-phan-trong-c', '', '', '2018-12-10 04:09:41', '2018-12-09 21:09:41', '', 0, 'http://localhost/web-teach-code/blog/?p=151', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(152, 1, '2018-12-10 01:14:14', '2018-12-09 18:14:14', '<h2><span id=\"1_Cac_ky_tu_dieu_khien\">1. Các ký tự điều khiển</span></h2>\r\n<ul>\r\n 	<li>\\n : Nhảy xuống dòng kế tiếp canh về cột đầu tiên.</li>\r\n 	<li>\\t : Tab ngang.</li>\r\n 	<li>\\r : Nhảy về đầu hàng, không xuống hàng.</li>\r\n 	<li>\\a : Tiếng kêu bip.</li>\r\n 	<li>\\\\ : In ra dấu \\</li>\r\n 	<li>\\” : In ra dấu “</li>\r\n 	<li>\\’ : In ra dấu ‘</li>\r\n 	<li>%%: In ra dấu %</li>\r\n</ul>\r\nĐây chỉ là một số ký tự điểu khiển quen thuộc, hay dùng, ngoài ra còn một só ký tự điều khiển khác các bạn có thể xem thêm trong các tài liệu khác. Để hiểu rõ về các ký tự điều khiển các bạn hãy chạy thử chương trình sau và tự rút ra nhận xét cho riêng mình.\r\n<div>\r\n<div id=\"highlighter_760085\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\a\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hinh nhu vua co tieng gi keu @@\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban dang o dong thu 2\\nBay gio xuong dong 3 roi ne ^^\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\tDong nay cach ra 1 tab thi phai?\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\t\\t\\t\\t\\t\\tCach ra nhieu tab qua \\rVe dau dong thoi\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dau \\\\ \\nDau \\\'\\nDau \\\" \\nDau %%\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// day la mot dong ghi chu va chi co tac dung chu thich khi viet code cho de hieu</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/*</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">      </code><code class=\"cpp comments\">Day la mot doan ghi chu</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">      </code><code class=\"cpp comments\">Doan ghi chu nay co 2 dong</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"2_Bo_chu_viet\">2. Bộ chữ viết</span></h2>\r\nBộ chữ viết trong ngôn ngữ C bao gồm những ký tự, ký hiệu sau: (phân biệt chữ in hoa và in thường):\r\n<ul>\r\n 	<li>26 chữ cái latinh hoa A,B,C…Z</li>\r\n 	<li>26 chữ cái latinh thường a,b,c …z.</li>\r\n 	<li>10 chữ số thập phân 0,1,2…9.</li>\r\n 	<li>Các ký hiệu toán học: +, -, *, /, =, &lt;, &gt;, (, )</li>\r\n 	<li>Các ký hiệu đặc biệt: :. , ; ” ‘ _ @ # $ ! ^ [ ] { } …</li>\r\n 	<li>Dấu cách hay khoảng trống, xuống hàng (\\n) và tab (\\t)</li>\r\n</ul>\r\n<h2><span id=\"3_Tu_khoa\">3. Từ khóa</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nLà các từ mà ngôn ngữ C đã xây dựng sẵn và có những chức năng nhất định, sau này làm nhiều các bạn sẽ biết dần dần. Chúng ta không nên định nghĩa lại những từ khóa này.\r\n<blockquote><strong><em>asm • auto • break • case • cdecl • char • class • const • continue • _cs • default • delete • do double • _ds • else • enum • _es • extern • _export • far • _fastcall • float • for •friend • goto • huge • if • inline • int • interrupt • _loadds • long • near • new • operator • pascal • private • protected • public • register • return • _saveregs • _seg • short •signed • sizeof • _ss • static • struct • switch • template • this • typedef • union • unsigned • virtual • void • volatile • while</em></strong></blockquote>\r\n<h2><span id=\"4_Kieu_du_lieu\">4. Kiểu dữ liệu</span></h2>\r\nTrong cuộc sống có nhiều loại vật dụng để chứa đựng các thứ khác nhau như Rổ để đựng rau, Cốc (ca) để đựng nước. Cũng giống vậy, trong lập trình có các kiểu dữ liệu để có thể biểu diễn (lưu trữ) các thành phần tương ứng.\r\n\r\nMỗi kiểu dữ liệu sẽ có kích thước (chiếm diện tích), loại giá trị và miền giá trị khác nhau trong bộ nhớ máy tính khi sử dụng. Dưới đây là một số kiểu dữ liệu cơ bản hay dùng trong C.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Loại dữ liệu</th>\r\n<th>Kiểu dữ liệu</th>\r\n<th align=\"center\">Kích thước (byte)</th>\r\n<th>Miền giá trị</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Kiểu Ký tự</td>\r\n<td>char</td>\r\n<td align=\"center\">1</td>\r\n<td>-128 đến 127</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>unsigned char</td>\r\n<td align=\"center\">1</td>\r\n<td>0 đến 255</td>\r\n</tr>\r\n<tr>\r\n<td>Kiểu Số nguyên</td>\r\n<td>short</td>\r\n<td align=\"center\">2</td>\r\n<td>-32768 đến 32767</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>int</td>\r\n<td align=\"center\">4</td>\r\n<td>-2147483648 đến 2147483647</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>long</td>\r\n<td align=\"center\">4</td>\r\n<td>-2147483648 đến 2147483647</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>long long</td>\r\n<td align=\"center\">8</td>\r\n<td>-9223372036854775808 đến 9223372036854775807</td>\r\n</tr>\r\n<tr>\r\n<td>Kiểu Số thực</td>\r\n<td>float</td>\r\n<td align=\"center\">4</td>\r\n<td>1.175494<sup>-38</sup> đến 3.402823<sup>38</sup></td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>double</td>\r\n<td align=\"center\">8</td>\r\n<td>2.225074<sup>308</sup> đến 1.797693<sup>308</sup></td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>long double</td>\r\n<td align=\"center\">12</td>\r\n<td>3.362103<sup>-4932</sup> đến 1.189731<sup>4932</sup></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<strong>Lưu ý:</strong>\r\n<ul>\r\n 	<li>Trên đây là bảng thông tin của một số kiểu dữ liệu thông dụng hay dùng. Còn khá nhiều kiểu dữ liệu khác nhưng tôi không đưa vào, các bạn có thể tham khảo tại <a href=\"http://www.cplusplus.com/reference/climits/\">đây cho Kiểu số nguyên</a>, <a href=\"http://www.cplusplus.com/reference/cfloat/\">đây cho kiểu số thực</a></li>\r\n 	<li>Do C (hoặc C++) có nhiều phiên bản khác nhau và dùng trên các hệ điều hành khác nhau nên có thể giá trị và kích thức các kiểu dữ liệu cũng khác nhau. Bảng trên là tôi kiểm tra trên <em>win 7, Dev-C 5.11</em>.</li>\r\n</ul>\r\nCác bạn có thể dùng chương trình sau chạy và kiểm tra kết quả:\r\n<div>\r\n<div id=\"highlighter_96103\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;limits.h&gt;  // limits for interger</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;float.h&gt;   // limits for float</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"TYPE                %6s %20s %20s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"SIZE\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MIN VALUE\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MAX VALUE\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"char:          %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">), CHAR_MIN, CHAR_MAX);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"unsigned char: %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(unsigned </code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">), 0, UCHAR_MAX);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"short:         %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">short</code><code class=\"cpp plain\">), SHRT_MIN, SHRT_MAX);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"int:           %6ld byte %20d %20d\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">), INT_MIN, INT_MAX);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long:          %6ld byte %20ld %20ld\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code><code class=\"cpp plain\">), LONG_MIN, LONG_MAX);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long long:     %6ld byte %20lld %20lld\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp color1 bold\">long</code><code class=\"cpp plain\">), LLONG_MIN, LLONG_MAX);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"float:         %6ld byte %20e %20e\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">float</code><code class=\"cpp plain\">), FLT_MIN, FLT_MAX);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"double:        %6ld byte %20e %20e\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">), DBL_MIN, DBL_MAX);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long double:   %6ld byte %20Le %20Le\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">), LDBL_MIN, LDBL_MAX);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"5_Ten\">5. Tên</span></h2>\r\nMỗi chúng ta ai cũng có tên, do vậy trong lập trình C các thành phần cũng sẽ có tên. Ví dụ như tên hàm, tên biến, tên hằng số, tên nhãn,…\r\n<blockquote><strong><em>Tên hợp lệ là một chuỗi liên tiếp gồm ký tự chữ, số hoặc dấu gạch dưới. Tên phân biệt chữ hoa chữ thường và không trùng với từ khóa.</em></strong></blockquote>\r\n<ul>\r\n 	<li>Tên phân biệt chữ hóa chữ thường nên: <strong>a</strong> khác <strong>A</strong>, <strong>quan</strong> khác <strong>Quan</strong>.</li>\r\n 	<li><strong>VD Các tên đúng:</strong> a, quan, nguyenvanquan7826, quan_7826, _7826, _nhung, _123huong.</li>\r\n 	<li>**VD Các tên sai: **</li>\r\n</ul>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Tên sai</th>\r\n<th>Nguyên nhân</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>Bắt đầu bằng số</td>\r\n</tr>\r\n<tr>\r\n<td>1a</td>\r\n<td>Bắt đầu bằng số</td>\r\n</tr>\r\n<tr>\r\n<td>quan 7826</td>\r\n<td>Chứa dấu cách</td>\r\n</tr>\r\n<tr>\r\n<td>quan-7826</td>\r\n<td>Chứa dấu gạch ngang</td>\r\n</tr>\r\n<tr>\r\n<td>f(x)</td>\r\n<td>Chứa dấu ngoặc nhọn</td>\r\n</tr>\r\n<tr>\r\n<td>int</td>\r\n<td>Trùng với từ khóa</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2><span id=\"6_Bien\">6. Biến</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nTương ứng với mỗi kiểu dữ liệu chúng ta có các biến thuộc các kiểu đó và có miền giá trị tương ứng như trên dùng để lưu giá trị. Các bạn cần phân biệt kiểu và biến.\r\n\r\nVD cái rổ A để đựng rau muống, cái rổ B để đựng rau cần và chúng cùng là rổ, thì tương ứng biến a lưu giá trị số 5, còn biến b lưu giá trị số 9 mặc dù chúng cùng kiểu số nguyên.\r\n\r\nBiến có thể thay đổi giá trị trong quá trình chạy chương trình.\r\n<h3><span id=\"61_Khai_bao_bien\">6.1 Khai báo biến</span></h3>\r\nĐể khai báo biến ta dùng cú pháp:\r\n\r\n<strong>Kiểu_dữ_liệu Danh_sách_tên_biến;</strong>\r\n\r\nLý thuyết thì hơi dài, các bạn xem và chạy chương trình sau sẽ thấy cụ thể hơn:\r\n<div>\r\n<div id=\"highlighter_867030\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, b; </code><code class=\"cpp comments\">// khai bao 2 bien kieu so nguyen</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">c; </code><code class=\"cpp comments\">// khai bao 1 bien kieu so thuc</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// Gan gia tri cho cac bien</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">a = 1;      </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">b = 2;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">c = 3.4;</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// vua khai bao bien vua gan gia tri</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">e = 4, f = 6;</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"a = %d; b = %d\\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"c = %f\\n\"</code><code class=\"cpp plain\">, c);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"e = %d; f = %d\\n\"</code><code class=\"cpp plain\">, e, f);</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nNhư trên các bạn thấy cấu trúc khai báo rồi đó. Còn về lệnh xuất ra màn hình các giá trị thì có một số điều khác đó là cách sử dụng %d, %f . Cái này mình sẽ nói cụ thể ở phần sau, đến đây các bạn cứ viết theo để thấy được cách khai báo biến là ok roài. !\r\n<h3><span id=\"62_Pham_vi_cua_bien\">6.2 Phạm vi của biến</span></h3>\r\nKhi lập trình, bạn phải nắm rõ phạm vi của biến. Nếu khai báo và sử dụng không đúng, không rõ ràng sẽ dẫn đến sai sót khó kiểm soát được, vì vậy bạn cần phải xác định đúng vị trí, phạm vi sử dụng biến trước khi sử dụng biến.\r\n\r\nMỗi biến được khai báo ở đâu thì sẽ được dùng và có phạm vi hoạt động tương ứng từ nơi nó khai báo đến dấu đóng ngoặc nhọn <strong>}</strong> ngang cấp với nó.\r\n\r\nVí dụ chương trình sau.\r\n<div>\r\n<div id=\"highlighter_831812\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 1, b = 5; </code><code class=\"cpp comments\">// khai bao bien toan cuc, no se duoc dung o bat ky dau ke tu dong nay.</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao 2 bien trong ham main, no se duoc dung trong toan bo ham main ke tu dong nay</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c = 4, d = 6; </code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(c &lt; d)</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">e = 6, d = 8;  </code><code class=\"cpp comments\">// khai bao bien e va d, no duoc dung trong doan nay.</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">c = 7;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"gia tri cac bien trong khoi:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"e = %d \\t d = %d \\t c = %d\\n\"</code><code class=\"cpp plain\">, e, d, c);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp comments\">// den day bien e, d vua khai bao khong con hoat dong nua.</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// printf(\"gia tri bien e = %d\\n\", e);  // lenh nay sai vi bien e khong con ton tai nua</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"gia tri cac bien trong ham main:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"c = %d \\t d = %d\\n\"</code><code class=\"cpp plain\">, c, d);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"gia tri cac bien toan cuc:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"a = %d \\t b = %d\\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number25 index24 alt2\"></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chạy chương trình, xem kết quả và tự rút ra nhận xét nhá.\r\n\r\nTrong này có một lời giải thích nhỏ với các bạn sau khi chạy chương trình là chúng ta có <strong>khai báo 2 biến d</strong>, và 2 biến <strong>d</strong> này do nằm trong 2 khối lệnh khác nhau (1 cái nằm trong hàm main, 1 cái nằm trong đoạn lệnh if ) nên chúng hoàn toàn khác nhau, không ảnh hưởng gì đến nhau. Nhưng biến c thì chỉ khai báo 1 lần, nên khi dùng c trong đoạn lệnh if thì chính là dùng biến c của hàm main đã khai báo và biến c đã được thay đổi giá trị.\r\n<h2><span id=\"7_Hang\">7. Hằng</span></h2>\r\nHằng cũng giống như biến nhưng không thể thay đổi giá trị. Nếu bạn cố tình gán giá trị mới cho hằng thì sẽ bị sai.\r\n\r\nTên hằng thường viết in hoa để dễ nhận biết và phân biệt với biến.\r\n\r\nCú pháp khai báo hằng: <strong>#define TÊN_HẰNG giá_trị</strong> (Lưu ý không có dấu chấm phẩy ở cuối).\r\n\r\nCác bạn chạy và xem kết quả của ví dụ sau:\r\n<div>\r\n<div id=\"highlighter_223979\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#define AGE_MAX 150     // hang so</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp preprocessor\">#define C \'a\'            // hang ky tu</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp preprocessor\">#define NICK_NAME \"nguyenvanquan7826\" // hang chuoi</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"hang AGE_MAX = %d\\n\"</code><code class=\"cpp plain\">, AGE_MAX);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"hang C = %c\\n\"</code><code class=\"cpp plain\">, C);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"hang NICK_NAME = %s\\n\"</code><code class=\"cpp plain\">, NICK_NAME);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// AGE_MAX = 10; // lenh nay sai vi hang khong the thay doi duoc gia tri</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 2 – Các thành phần trong C', '', 'inherit', 'closed', 'closed', '', '151-revision-v1', '', '', '2018-12-10 01:14:14', '2018-12-09 18:14:14', '', 151, 'http://localhost/web-teach-code/blog/2018/12/10/151-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(153, 1, '2018-12-10 01:14:48', '2018-12-09 18:14:48', 'Ở các bài trước, chúng ta đã làm quen với một số chương trình mà in lên màn hình một số thông tin. Bài này chúng ta sẽ tìm hiểu kỹ hơn về cách nhập xuất trong C.\r\n<h2><span id=\"1_Chuoi_dinh_dang_du_lieu\">1. Chuỗi định dạng dữ liệu</span></h2>\r\nTrước khi đến với phần nhập, xuất dữ liệu cho các biến mình sẽ nói về một số định dạng để nhập và xuất. Sau đây là các dấu mô tả định dạng:\r\n<ul>\r\n 	<li>%c : Ký tự đơn</li>\r\n 	<li>%s : Chuỗi</li>\r\n 	<li>%d : Số nguyên hệ 10 có dấu</li>\r\n 	<li>%f : Số chấm động (VD 5.54 khi in sẽ ra 5.540000)</li>\r\n 	<li>%e : Số chấm động (ký hiệu có số mũ)</li>\r\n 	<li>%g : Số chấm động (VD 5.54 khi in sẽ in ra 5.54)</li>\r\n 	<li>%x : Số nguyên hex không dấu (hệ 16)</li>\r\n 	<li>%o : Số nguyên bát phân không dấu (hệ 8)</li>\r\n 	<li>l : Tiền tố dùng kèm với %d, %x, %o để chỉ số nguyên dài (ví dụ%ld)</li>\r\n</ul>\r\n<h2><span id=\"2_Xuat_du_lieu_dung_printf\">2. Xuất dữ liệu dùng printf</span></h2>\r\nChúng ta sử dụng hàm <strong>printf</strong> để xuất dữ liệu ra màn hình console (từ print có nghĩa là in). Kết hợp với các chuỗi định dạng ở trên, chúng ta xét một ví dụ đơn giản sau.\r\n<h3><span id=\"Vi_du_1\">Ví dụ 1:</span></h3>\r\n<div>\r\n<div id=\"highlighter_484990\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 12;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b = 13.5;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">c = </code><code class=\"cpp string\">\'Q\'</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">d = 3454;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">* s = </code><code class=\"cpp string\">\"nguyenvanquan7826\"</code><code class=\"cpp plain\">; </code><code class=\"cpp comments\">// khai bao kieu chuoi</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi du ve su dung lenh printf\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong cua %d va %f la %f \\n\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tich cua %d va %ld la %ld \\n\"</code><code class=\"cpp plain\">, a, d, a*d);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ky tu c la: %c \\n\"</code><code class=\"cpp plain\">, c);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Chuoi s la: %s \\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dinh dang so mu cua b la %e \\n\"</code><code class=\"cpp plain\">, b);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So he 16 va he 8 cua %d la %x va %o \\n\"</code><code class=\"cpp plain\">, a, a, a);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ma ASCII cua %c la %d\"</code><code class=\"cpp plain\">, c, c);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ trên mình có dùng một số ký tự điều khiển (\\n – xuống dòng) đã được đề cập ở bài trươc, các bạn có thể xem lại nếu không nhớ. Các bạn chạy chương trình và rút ra nhận xét cho riêng mình.\r\n\r\nMình giải thích 1 câu lệnh để làm rõ hơn việc xuất của chúng ta.\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/xuatdulieu.png\" alt=\"Xuất dữ liệu\" /></center><center><em>Câu lệnh printf để in các biến tương ứng</em></center>Chuỗi định dạng được đặt trong ngoặc kép: <strong>“”</strong>. Tương ứng với mỗi định dạng là một biến có kiểu tương ứng, nếu khác kiểu sẽ dẫn đến sai sót.\r\n\r\nCác bạn cũng chú ý là đối với số nguyên và ký tự có sự qua lại với nhau thông qua mã ASCII nên chúng ta có thể in mã của ký tự bằng định dạng %d và cũng có thể in ký tự có mã là số nào đó thông qua định dạng %c. Tuy nhiên bản chất của biến không thay đổi. Ở Vd trên câu lệnh in mã ASCII của c sẽ cho số nguyên nhưng bản chất c vẫn là một biến kiểu char.\r\n<h3><span id=\"Vi_du_2\">Ví dụ 2:</span></h3>\r\n<div>\r\n<div id=\"highlighter_922076\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 12;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b = 13.5;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">c = </code><code class=\"cpp string\">\'Q\'</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">d = 3454;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">s[] = </code><code class=\"cpp string\">\"nguyenvanquan7826\"</code><code class=\"cpp plain\">; </code><code class=\"cpp comments\">// khai bao kieu chuoi</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%6d %5.3f %.3f \\n\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5d %5ld %5ld \\n\"</code><code class=\"cpp plain\">, a, d, a*d);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%5c \\n\"</code><code class=\"cpp plain\">, c);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%30s \\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn thấy ví dụ này chúng ta dùng các định dạng %d, %f nhưng lại chèn thêm các số ở giữa thành %6d, %5.3f. Ý nghĩa của chúng như sau:\r\n<ul>\r\n 	<li>%5c : Xuất ký tự có bề rộng 5</li>\r\n 	<li>%5d : Số nguyên có bề rộng 5</li>\r\n 	<li>%20s : Xuất chuỗi có bề rộng 20</li>\r\n 	<li>%5.3f : Xuất số thực có bề rộng 5 trong đó có 3 số sau dấu phẩy</li>\r\n 	<li>%-5d : Số nguyên có bề rộng 5 nhưng căn lề trái</li>\r\n</ul>\r\nCác bạn chạy chương trình, xem kết quả để thấy rõ hơn. Trong TH nếu bề rộng của chúng ta có kích thước bé hơn độ dài của số thì sao? Ví dụ chúng ta có số int a = 1234 nhưng chỉ in là %2d, rõ ràng dành 2 phần trống là ít hơn số a có 4 chữ số nhưng kết quả là số vẫn được in đầy đủ. Các bạn có thể thử.\r\n<h3><span id=\"Vi_du_3\">Ví dụ 3:</span></h3>\r\nĐặt bài toán là giả sử chúng ta có các biến thể hiện ngày tháng năm sinh bất kỳ (ví dụ ngay = 12, thang = 8, nam = 1992). Hãy in ra theo định dạng là dd/mm/yyyy. Nghĩa là chúng ta phải in ra kết quả 12/08/1992.\r\n<div>\r\n<div id=\"highlighter_732568\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay = 12;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">thang = 8;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">nam = 1992;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"KQ: %02d/%02d/%04d\\n\"</code><code class=\"cpp plain\">, ngay, thang, nam);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ trên, các bạn chú ý chúng ta dùng <strong>%02d</strong> nghĩa là sao? Nhĩa là số in ra sẽ có 2 chữ số, nếu ban đầu số có ít hơn 2 thì sẽ thêm số 0 đằng trước để đủ 2 chữ số. Ví dụ số 8 sẽ thành 08. Nếu dùng %05d thì sẽ là 00008.\r\n<h2><span id=\"3_Nhap_du_lieu_dung_scanf\">3. Nhập dữ liệu dùng scanf</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nTrong các ví dụ trước, chúng ta chỉ khai báo biến và gán giá trị cho biến nhưng như thế làm chương trình không linh hoạt vì chỉ hoạt động với những giá trị đã định trước, muốn hoạt động với các dữ liệu khác nhau chúng ta lại phải sửa lại code, như vậy thì không phải một chương trình tốt. Một chương trình phần mềm làm ra là phải dành cho nhiều bộ giá trị khác nhau có thể dùng được.\r\n\r\nChính vì vậy dữ liệu sẽ được đưa vào trong quá trình phần mềm được dùng và cụ thể đơn giản là nhập dữ liệu vào từ bàn phím. Chúng ta sử dụng lệnh <strong>scanf</strong> để nhập dữ liệu từ bàn phím (từ scan có nghĩa là quét và chúng ta dùng để quét dữ lệu từ bàn phím).\r\n<h3><span id=\"Vi_du_1-2\">Ví dụ 1:</span></h3>\r\n<div>\r\n<div id=\"highlighter_891268\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so nguyen a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so thuc b = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f\"</code><code class=\"cpp plain\">, &amp;b);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"a = %d \\t b = %.3f\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nViệc sử dụng lệnh <strong>scanf</strong> kết hợp với chuỗi định dạng để nhập dữ liệu sẽ tương tự như khi xuất dữ liệu bằng lệnh <strong>printf</strong>.\r\n\r\n<strong>Chú ý đừng quên ký tự &amp; trước mỗi biến khi nhập. Nếu không sẽ sai.</strong>\r\n<h3><span id=\"Vi_du_2-2\">Ví dụ 2:</span></h3>\r\n<div>\r\n<div id=\"highlighter_78312\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">/* Tinh dien tich hinh chu nhat */</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, b;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap chieu dai, chieu rong: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d%d\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dien tich HCN: %d\\n\"</code><code class=\"cpp plain\">, a * b);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ ví dụ trên, các bạn thấy chúng ta có thể dùng 1 lệnh scanf để nhập dữ liệu cho nhiều biến, mỗi biến tương ứng với 1 định dạng nhất định.\r\n<h2><span id=\"4_Nhap_chuoi_trong_C\">4. Nhập chuỗi trong C</span></h2>\r\n<h3><span id=\"41_Loi_khi_nhap_chuoi_bang_scanf\">4.1 Lỗi khi nhập chuỗi bằng scanf</span></h3>\r\nNếu các bạn dùng hàm scanf để nhập chuỗi thì bạn sẽ thấy rằng không thể nhập được chuỗi có dấu cách hoặc nếu trước đó bạn nhập số thì sau đó không nhập được chuỗi nữa. Nếu không tin bạn có thể thử chạy với chương trình sau:\r\n<div>\r\n<div id=\"highlighter_212652\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tuoi = 0;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 30 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">ten[30], tenNguoiYeu[30];</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho va ten cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%s\"</code><code class=\"cpp plain\">, ten); </code><code class=\"cpp comments\">// nhap chuoi khong can dau &amp;</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban bao nhieu tuoi roi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;tuoi);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguoi yeu cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%s\"</code><code class=\"cpp plain\">, tenNguoiYeu);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n====\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\"</code><code class=\"cpp plain\">, ten, tuoi, tenNguoiYeu);</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả là bạn sẽ không nhập được tuổi và tên người yêu như hình sau.\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/Chap3_NhapChuoi.png?w=780&amp;ssl=1\" alt=\"Troi Lenh Trong C\" width=\"776\" height=\"171\" /></center><center><em>Kết quả khi dùng scanf để nhập chuỗi</em></center>Lý do là scanf chỉ đọc được dữ liệu không có khoảng trắng (đấu cách, dấu tab, enter, …) và các khoảng cách này sẽ được lưu vào bộ đệm bàn phím do đó bạn chỉ nhận được chuỗi đầu tiên trước đấu cách mà thôi (chữ <strong>Nguyen</strong>), sau mỗi dấu cách, các giá trị tiếp theo nếu phù hợp với kiểu dữ liệu của các biến tiếp theo thì nó sẽ gán luôn cho chúng và bạn sẽ không được nhập nữa. Do <strong>tuoi</strong> kiểu nguyên nên không nhận được, <strong>tenNguoiYeu</strong> sẽ nhận giá trị tiếp theo trong các giá trị nhận được là chữ <strong>Van</strong>.\r\n<h3><span id=\"42_Hien_tuong_troi_lenh\">4.2 Hiện tượng trôi lệnh</span></h3>\r\nHiện tượng như trên được gọi là hiện tượng trôi lệnh. Nếu bây giờ bạn thực hiện cho nhập số trước và chuỗi ngay sau đó thì hiện tượng này cũng xảy ra vì <strong>scanf</strong> chỉ đọc số theo đúng định dạng mà không đọc được phím enter khi bạn nhấn lúc nhập xong số (enter là ký tự hoặc cũng có thể coi là chuỗi), nó được lưu vào bộ đệm và khi đọc giá trị nhập cho chuỗi nó tìm trong bộ đệm thấy ký tự enter là kiểu chuỗi nên nó gán luôn cho chuỗi đó.\r\n\r\nĐể nhập được chuỗi có khoảng trắng (dấu cách) chúng ta sử dụng hàm gets.\r\n\r\nĐể không bị trôi lệnh khi nhập số trước và chuỗi sau ta cần xóa bộ đệm bàn phím bằng lệnh <strong>fflush(stdin);</strong> ngay sau khi nhập số.\r\n<div>\r\n<div id=\"highlighter_315767\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tuoi = 0;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 30 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">ten[30], tenNguoiYeu[30];</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho va ten cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(ten); </code><code class=\"cpp comments\">// nhap chuoi khong can dau &amp;</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban bao nhieu tuoi roi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;tuoi);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguoi yeu cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(tenNguoiYeu);</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n====\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\"</code><code class=\"cpp plain\">, ten, tuoi, tenNguoiYeu);</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nNếu bạn dùng Linux thì <strong>fflush(stdin);</strong> sẽ không hoạt động, bạn có thể khắc phục bằng cách nhập vào 1 chuỗi tạm ngay sau khi nhập số. Việc nhập chuỗi tạm này chỉ để xóa bỏ các ký tự, chuỗi ký tự thừa có trong bộ đệm như sau (cách này cũng dùng được khi bạn làm trên windows).\r\n<div>\r\n<div id=\"highlighter_6939\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tuoi = 0;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 30 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">ten[30], tenNguoiYeu[30], temp[255];</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho va ten cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(ten); </code><code class=\"cpp comments\">// nhap chuoi khong can dau &amp;</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban bao nhieu tuoi roi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;tuoi);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">//fflush(stdin);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(temp);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguoi yeu cua ban ten la gi? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(tenNguoiYeu);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n====\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ten: %s \\nTuoi:%d \\nNY:%s \\n\"</code><code class=\"cpp plain\">, ten, tuoi, tenNguoiYeu);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"5_Giai_thich_mot_chut_ve_printf_scanf_va_stdioh\">5. Giải thích một chút về printf, scanf và stdio.h</span></h2>\r\n<h3><span id=\"51_Chu_f_trong_printf_va_scanf\">5.1 Chữ f trong printf và scanf</span></h3>\r\nNhư các bạn đã biết <strong>print</strong> nghĩa là <strong>in</strong>, <strong>scan</strong> là <strong>quét</strong> hay ta gọi trong này là để nhập. Vậy tại sao chúng lại có chữ <strong>f</strong>đằng sau để thành <strong>printf</strong> và <strong>scanf</strong> ?\r\n\r\nChữ <strong>f</strong> này có nghĩa là <strong>format</strong> (định dạng). Như các bạn thấy chúng ta nhập hoặc xuất các giá trị của các biến đều có định dạng % gì đó ví dụ %d là số nguyên, %f là số thực,… và chữ <strong>f</strong> này chính là có ý nghĩa như thế.\r\n<h3><span id=\"52_Thu_vien_stdioh\">5.2 Thư viện stdio.h ?</span></h3>\r\nTrong tất cả các chương trình từ trước tới giờ, chúng ta luôn có <code>#include &lt;stdio.h&gt;</code>, vậy nó là gì?\r\n\r\n<code>#include</code> nghĩa là bao gồm tức là chương trình của chúng ta sẽ khai báo sử dụng một cái gì đó, mà ở đây là sử dụng thư viện <code>stdio.h</code>\r\n\r\nVậy <strong>stdio.h</strong> là gì? <strong>std</strong> viết tắt của <strong>standard</strong> , <strong>i</strong> viết tắt của <strong>input</strong>, <strong>o</strong> viết tắt của <strong>output</strong>, <strong>h</strong> viết tắt của <strong>header</strong> (header – đầu, trên đầu – vì nó được khai báo ở trên đầu của các chương trình). Vậy nó có nghĩa là <strong>standard input output – nhập xuất chuẩn</strong>. Chúng ta hiểu nó là thư viện phục vụ cho việc nhập xuất chuẩn của chương trình. Nhập xuất chuẩn chính là nhập từ bàn phím và xuất ra màn hình. Có còn rất nhiều nguồn nhập xuất như nhập từ file, nhập từ con trỏ chuột,… xuất ra máy in, xuất ra file,… nhưng họ coi <strong>bàn phím và màn hình là hệ thống nhập xuất chuẩn</strong>.\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào một số a bất kỳ và in ra giá trị a<sup>2</sup>, a<sup>3</sup>, a<sup>4</sup></li>\r\n 	<li>Viết chương trình đọc từ bàn phím 3 số nguyên biểu diễn ngày, tháng, năm và xuất ra màn hình dưới dạng “dd/mm/yyyy”.</li>\r\n 	<li>Viết chương trình đọc và 2 số nguyên và in ra kết quả của phép (+), phép trừ (-), phép nhân (*), phép chia (/). Nhận xét kết quả chia 2 số nguyên.</li>\r\n 	<li>Viết chương trình nhập vào bán kính hình cầu, tính và in ra diện tích, thể tích của hình cầu đó.\r\nHướng dẫn: S = 4πR^2 và V = (4/3)πR^3.</li>\r\n 	<li>Nhập vào một số là số giây, đổi số giây này ra giờ phút giây và xuất theo dạng gio:phut:giay, mỗi thành phần có 2 chữ số. Ví dụ 3661 = 01:01:01.</li>\r\n</ol>\r\n</blockquote>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<div id=\"jp-relatedposts\" class=\"jp-relatedposts\"></div>', 'Lập trình C: Bài 3 – Nhập xuất trong c', '', 'inherit', 'closed', 'closed', '', '121-revision-v1', '', '', '2018-12-10 01:14:48', '2018-12-09 18:14:48', '', 121, 'http://localhost/web-teach-code/blog/2018/12/10/121-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(154, 1, '2018-12-10 01:16:05', '2018-12-09 18:16:05', '<h2><span id=\"1_Toan_tu_toan_hoc\">1. Toán tử toán học</span></h2>\r\nNgôn ngữ C cung cấp 5 toán tử toán học cơ bản\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>STT</th>\r\n<th>Toán tử</th>\r\n<th>Tên</th>\r\n<th>Ví dụ</th>\r\n<th>Kết quả</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>+</td>\r\n<td>Cộng</td>\r\n<td>3 + 4</td>\r\n<td>7</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>–</td>\r\n<td>Trừ</td>\r\n<td>10.5 – 3</td>\r\n<td>7.5</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>*</td>\r\n<td>Nhân</td>\r\n<td>3 * 2</td>\r\n<td>6</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>/</td>\r\n<td>Chia</td>\r\n<td>6 / 3</td>\r\n<td>2</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>%</td>\r\n<td>Chia lấy dư</td>\r\n<td>8 % 3</td>\r\n<td>2</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nOk. Giờ thử làm ví dụ:\r\n<div>\r\n<div id=\"highlighter_914204\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 5, b = 7;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">c = 4.5, d = 6;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d + %f = %f \\n\"</code><code class=\"cpp plain\">, a, c, a + c);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d - %d = %d \\n\"</code><code class=\"cpp plain\">, a, b, a - b);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d * %f = %f \\n\"</code><code class=\"cpp plain\">, b, d, b * d);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Luu y phep chia nhe*/</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %d \\n\"</code><code class=\"cpp plain\">, b, a, b / a);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f / %d = %f \\n\"</code><code class=\"cpp plain\">, c, a, c / a);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f / %f = %f \\n\"</code><code class=\"cpp plain\">, c, d, c / d);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %% %d = %d \\n\"</code><code class=\"cpp plain\">, b, a, b % a);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>5 + 4.500000 = 9.500000\r\n5 – 7 = -2\r\n7 * 6.000000 = 42.000000\r\n7 / 5 = 1\r\n4.500000 / 5 = 0.900000\r\n4.500000 / 6.000000 = 0.750000\r\n7 % 5 = 2</blockquote>\r\nToán tử lấy phần dư (%) yêu cầu cả hai toán hạng là số nguyên. Nó trả về phần dư còn lại của phép chia. Ví dụ 7 % 5 được tính toán bằng cách chia số nguyên 7 cho 5 để được 1 và phần dư là 2; vì thế kết quả là 2.\r\n\r\n<strong>Thông thường, nếu cả hai toán hạng là số nguyên sau đó kết quả sẽ là một số nguyên</strong>. Tuy nhiên, một hoặc cả hai toán hạng là số thực thì sau đó kết quả sẽ là một số thực.\r\n\r\nKhi cả hai toán hạng của toán tử chia là số nguyên thì sau đó phép chia được thực hiện như là một phép chia số nguyên và không phải là phép chia thông thường mà chúng ta sử dụng. Phép chia số nguyên luôn cho kết quả là phần nguyên của thương. Ví dụ: 7 / 5 = 1 chứ không phải 7 / 5 = 1.4. Để khắc phục lỗi này thì ta có thể chuyển một số hoặc cả 2 số sang kiểu thực rồi thực hiện phép chia. Cách chuyển kiểu (hay ép kiểu) ta như sau:\r\n<blockquote>(kiểu cần chuyển) biến.\r\nVD: (float) a;</blockquote>\r\n<strong>Lưu ý</strong> khi ép kiểu thế này thì kiểu của các biến ban đầu không thay đổi mà chỉ là giá trị tức thời (tại thời điểm đó thay đổi sang kiểu mới). Để lưu lại giá trị tức thời này bạn cần khai báo thêm một biến mới có kiểu cần chuyển và gán giá trị đó lại. Ví dụ cho dễ.\r\n<div>\r\n<div id=\"highlighter_140756\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 5, b = 7;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">c;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %d \\n\"</code><code class=\"cpp plain\">, b, a, b / a);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Chuyen gia tri tuc thoi cua b sang kieu so thuc*/</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %f \\n\"</code><code class=\"cpp plain\">, b, a, (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">)b / a);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Chuyen gia tri tuc thoi cua a sang kieu so thuc*/</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %f \\n\"</code><code class=\"cpp plain\">, b, a, b / (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">)a);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Neu lam the nay thi van khong dung, vi b/a duoc so nguyen</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* sau do chung ta moi ep kieu so nguyen do sang so thuc</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %f \\n\"</code><code class=\"cpp plain\">, b, a, (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">)(b / a));</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>7 / 5 = 1\r\n7 / 5 = 1.400000\r\n7 / 5 = 1.400000\r\n7 / 5 = 1.000000</blockquote>\r\n<h2><span id=\"2_Toan_tu_quan_he\">2. Toán tử quan hệ</span></h2>\r\nNgôn ngữ C cung cấp 6 toán tử quan hệ để so sánh các số. Các toán tử quan hệ có giá trị <strong>1 (khi kết quả đúng) hoặc 0 (khi kết quả sai)</strong>.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>STT</th>\r\n<th>Toán tử</th>\r\n<th>Tên</th>\r\n<th>Ví dụ</th>\r\n<th>Kết quả</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>==</td>\r\n<td>So sánh bằng</td>\r\n<td>5 == 5</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>!=</td>\r\n<td>So sánh khác</td>\r\n<td>5 != 5</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>&gt;</td>\r\n<td>So sánh lớn hơn</td>\r\n<td>5 &gt; 4</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>&lt;</td>\r\n<td>So sánh nhỏ hơn</td>\r\n<td>5 &lt; 4</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>&gt;=</td>\r\n<td>So sánh lơn hơn hoặc bằng</td>\r\n<td>5 &gt;= 4</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<td>6</td>\r\n<td>&lt;=</td>\r\n<td>So sánh nhỏ hơn hoặc bằng</td>\r\n<td>5 &lt;= 5</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nChúng ta sử dụng các toán tử này để so sánh các giá trị, các ký tự,… tuy nhiên <strong>không so sánh các xâu với nhau</strong> vì điều này sẽ dẫn đến các địa chỉ của chuỗi được so sánh chứ không phải là nội dung chuỗi. Chúng ta có các hàm so sánh xâu ở thư viện string và sẽ tìm hiểu sau. Khi so sánh các ký tự với nhau thì bản chất ta có thể hiểu là máy so sánh các mã ASCII của các ký tự với nhau. VD. ‘A’ &gt;’B’ sẽ trả về giá trị 0 vì ‘A’ có mã ASCII là 65 còn ‘B’ là 66.\r\n<h2><span id=\"3_Toan_tu_luan_ly\">3. Toán tử luận lý</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nC cung cấp 3 toán tử luận lý cho việc kết nối các biểu thức luận lý. Giống như các toán tử quan hệ, các toán tử luận lý có giá trị là 1 hoặc 0.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>STT</th>\r\n<th>Toán tử</th>\r\n<th>Tên</th>\r\n<th>Ví dụ</th>\r\n<th>Kết quả</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>!</td>\r\n<td>Phủ định</td>\r\n<td>! (5 &gt; 4)</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>&amp;&amp;</td>\r\n<td>Và</td>\r\n<td>5 &gt; 4 &amp;&amp; 5 &gt; 6</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>||</td>\r\n<td>Hoặc</td>\r\n<td>5 &gt; 4 || 5 &gt; 6</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2><span id=\"4_Toan_tu_tang_giam\">4. Toán tử tăng giảm</span></h2>\r\nCác toán tử tăng một (++) và giảm một (- -) cung cấp các tiện lợi tương ứng cho việc cộng thêm 1 vào một biến số hay trừ đi 1 từ một biến số.\r\n<div>\r\n<div id=\"highlighter_456653\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, k;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = i++;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = ++i;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = i--;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = --i;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>i = 6, k = 5\r\ni = 6, k = 6\r\ni = 4, k = 5\r\ni = 4, k = 4</blockquote>\r\n<strong>Tức là ta có:</strong>\r\n<blockquote>++i và –i thì i được tính trước sau đó sẽ lấy kết quả để thực hiện biểu thức\r\ni++ và i– thì i được đưa vào thực hiện biểu thức trước sau đó mới tính i</blockquote>\r\n<h2><span id=\"5_Toan_tu_gan\">5. Toán tử gán</span></h2>\r\nToán tử gán được sử dụng để lưu trữ giá trị cho 1 biến nào đó.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Toán tử</th>\r\n<th>Ví dụ</th>\r\n<th>Tương đương với</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>=</td>\r\n<td>x = 5</td>\r\n<td>Gán 5 cho x</td>\r\n</tr>\r\n<tr>\r\n<td>+=</td>\r\n<td>x += 5</td>\r\n<td>x = x + 5</td>\r\n</tr>\r\n<tr>\r\n<td>-=</td>\r\n<td>x -= 5</td>\r\n<td>x = x – 5</td>\r\n</tr>\r\n<tr>\r\n<td>*=</td>\r\n<td>x *= 5</td>\r\n<td>x = x * 5</td>\r\n</tr>\r\n<tr>\r\n<td>/=</td>\r\n<td>x /= 5</td>\r\n<td>x = x / 5</td>\r\n</tr>\r\n<tr>\r\n<td>%=</td>\r\n<td>x %= 5</td>\r\n<td>x = x % 5</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nChạy test thử nhé.\r\n<div>\r\n<div id=\"highlighter_283634\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = 5;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x = 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x += 5;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x += 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x -= 5;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x -= 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x *= 5;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x *= 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x /= 5;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x /= 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>x = 5 =&gt; x = 5\r\nx += 5 =&gt; x = 10\r\nx -= 5 =&gt; x = 5\r\nx *= 5 =&gt; x = 25\r\nx /= 5 =&gt; x = 5</blockquote>\r\n<h2><span id=\"6_Mot_so_toan_tu_khac\">6. Một số toán tử khác</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"61_Toan_tu_phay\">6.1 Toán tử phẩy</span></h3>\r\nNhiều biểu thức có thể được kết nối vào cùng một biểu thức sử dụng toán tử phẩy. Toán tử phẩy yêu cầu 2 toán hạng. Đầu tiên nó ước lượng toán hạng trái sau đó là toán hạng phải, và trả về giá trị của toán hạng phải như là kết quả sau cùng.\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_904534\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">m, t;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">m = (t =2, t*5 + 10);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"t = %d, m = %d\\n\"</code><code class=\"cpp plain\">, t, m);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>t = 2, m = 20</blockquote>\r\n<h3><span id=\"62_Toan_tu_lay_kich_thuoc\">6.2 Toán tử lấy kích thước</span></h3>\r\nC cung cấp toán tử hữu dụng, sizeof, để tính toán kích thước của bất kỳ hạng mục dữ liệu hay kiểu dữ liệu nào. Nó yêu cầu một toán hạng duy nhất có thể là tên kiểu (ví dụ, int) hay một biểu thức (ví dụ, 100) và trả về kích thước của những thực thể đã chỉ định theo byte. Chạy thử ví dụ nhá. Toán tử này chúng ta đã làm quen ở phần Kiểu dữ liệu rồi.\r\n\r\nChạy ví dụ test thử:\r\n<div>\r\n<div id=\"highlighter_310993\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"char size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"short size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">short</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"int size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"float size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">float</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"double size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"1.55 size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(1.55));</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\\"Hello\\\" size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hello\"</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>char size = 1 byte\r\nshort size = 2 byte\r\nint size = 4 byte\r\nlong size = 8 byte\r\nfloat size = 4 byte\r\ndouble size = 8 byte\r\n1.55 size = 8 byte\r\n“Hello” size = 6 byte</blockquote>\r\n<h2><span id=\"7_Do_uu_tien_cua_cac_toan_tu\">7. Độ ưu tiên của các toán tử</span></h2>\r\nĐộ ưu tiên các toán tử được thực hiện từ trên xuống dưới theo bảng sau. Trong mỗi hàng lại có độ ưu tiên như ở cột thứ 3.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Loại</th>\r\n<th>Toán tử</th>\r\n<th>Thứ tự ưu tiên</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Postfix</td>\r\n<td>() [] -&gt; . ++ – –</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Unary</td>\r\n<td>+ – ! ~ ++ – – (type)* &amp; sizeof</td>\r\n<td>Phải sang trái</td>\r\n</tr>\r\n<tr>\r\n<td>Tính nhân</td>\r\n<td>* / %</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Tính cộng</td>\r\n<td>+ –</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Dịch chuyển</td>\r\n<td>&lt;&lt; &gt;&gt;</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Quan hệ</td>\r\n<td>&lt; &lt;= &gt; &gt;=</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Cân bằng</td>\r\n<td>== !=</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép AND bit</td>\r\n<td>&amp;</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép XOR bit</td>\r\n<td>^</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép OR bit</td>\r\n<td>|</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép AND logic</td>\r\n<td>&amp;&amp;</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép OR logic</td>\r\n<td>||</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Điều kiện</td>\r\n<td>?:</td>\r\n<td>Phải sang trái</td>\r\n</tr>\r\n<tr>\r\n<td>Gán</td>\r\n<td>= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^= |=</td>\r\n<td>Phải sang trái</td>\r\n</tr>\r\n<tr>\r\n<td>Dấu phảy</td>\r\n<td>,</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào số giây, đổi số giây nhập vào thành dạng “gio:phut:giay”, mỗi thành phần là một số nguyên có 2 chữ số. VD nhập vào 7826 thì in ra 02:10:26</li>\r\n 	<li>Cho biến x = 3; Không chạy chương trình, đoán xem giá trị của x sau khi thực hiện lệnh:\r\n<strong>x = ++x – 3 + x;</strong>\r\nSau khi đoán xong thì thử viết chương trình để kiểm tra kết quả.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 4 – Phép toán, toán tử trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-4-phep-toan-toan-tu-trong-c', '', '', '2018-12-10 04:09:21', '2018-12-09 21:09:21', '', 0, 'http://localhost/web-teach-code/blog/?p=154', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(155, 1, '2018-12-10 01:16:05', '2018-12-09 18:16:05', '<h2><span id=\"1_Toan_tu_toan_hoc\">1. Toán tử toán học</span></h2>\r\nNgôn ngữ C cung cấp 5 toán tử toán học cơ bản\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>STT</th>\r\n<th>Toán tử</th>\r\n<th>Tên</th>\r\n<th>Ví dụ</th>\r\n<th>Kết quả</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>+</td>\r\n<td>Cộng</td>\r\n<td>3 + 4</td>\r\n<td>7</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>–</td>\r\n<td>Trừ</td>\r\n<td>10.5 – 3</td>\r\n<td>7.5</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>*</td>\r\n<td>Nhân</td>\r\n<td>3 * 2</td>\r\n<td>6</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>/</td>\r\n<td>Chia</td>\r\n<td>6 / 3</td>\r\n<td>2</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>%</td>\r\n<td>Chia lấy dư</td>\r\n<td>8 % 3</td>\r\n<td>2</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nOk. Giờ thử làm ví dụ:\r\n<div>\r\n<div id=\"highlighter_914204\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 5, b = 7;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">c = 4.5, d = 6;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d + %f = %f \\n\"</code><code class=\"cpp plain\">, a, c, a + c);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d - %d = %d \\n\"</code><code class=\"cpp plain\">, a, b, a - b);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d * %f = %f \\n\"</code><code class=\"cpp plain\">, b, d, b * d);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Luu y phep chia nhe*/</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %d \\n\"</code><code class=\"cpp plain\">, b, a, b / a);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f / %d = %f \\n\"</code><code class=\"cpp plain\">, c, a, c / a);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f / %f = %f \\n\"</code><code class=\"cpp plain\">, c, d, c / d);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %% %d = %d \\n\"</code><code class=\"cpp plain\">, b, a, b % a);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>5 + 4.500000 = 9.500000\r\n5 – 7 = -2\r\n7 * 6.000000 = 42.000000\r\n7 / 5 = 1\r\n4.500000 / 5 = 0.900000\r\n4.500000 / 6.000000 = 0.750000\r\n7 % 5 = 2</blockquote>\r\nToán tử lấy phần dư (%) yêu cầu cả hai toán hạng là số nguyên. Nó trả về phần dư còn lại của phép chia. Ví dụ 7 % 5 được tính toán bằng cách chia số nguyên 7 cho 5 để được 1 và phần dư là 2; vì thế kết quả là 2.\r\n\r\n<strong>Thông thường, nếu cả hai toán hạng là số nguyên sau đó kết quả sẽ là một số nguyên</strong>. Tuy nhiên, một hoặc cả hai toán hạng là số thực thì sau đó kết quả sẽ là một số thực.\r\n\r\nKhi cả hai toán hạng của toán tử chia là số nguyên thì sau đó phép chia được thực hiện như là một phép chia số nguyên và không phải là phép chia thông thường mà chúng ta sử dụng. Phép chia số nguyên luôn cho kết quả là phần nguyên của thương. Ví dụ: 7 / 5 = 1 chứ không phải 7 / 5 = 1.4. Để khắc phục lỗi này thì ta có thể chuyển một số hoặc cả 2 số sang kiểu thực rồi thực hiện phép chia. Cách chuyển kiểu (hay ép kiểu) ta như sau:\r\n<blockquote>(kiểu cần chuyển) biến.\r\nVD: (float) a;</blockquote>\r\n<strong>Lưu ý</strong> khi ép kiểu thế này thì kiểu của các biến ban đầu không thay đổi mà chỉ là giá trị tức thời (tại thời điểm đó thay đổi sang kiểu mới). Để lưu lại giá trị tức thời này bạn cần khai báo thêm một biến mới có kiểu cần chuyển và gán giá trị đó lại. Ví dụ cho dễ.\r\n<div>\r\n<div id=\"highlighter_140756\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 5, b = 7;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">c;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %d \\n\"</code><code class=\"cpp plain\">, b, a, b / a);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Chuyen gia tri tuc thoi cua b sang kieu so thuc*/</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %f \\n\"</code><code class=\"cpp plain\">, b, a, (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">)b / a);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Chuyen gia tri tuc thoi cua a sang kieu so thuc*/</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %f \\n\"</code><code class=\"cpp plain\">, b, a, b / (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">)a);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* Neu lam the nay thi van khong dung, vi b/a duoc so nguyen</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* sau do chung ta moi ep kieu so nguyen do sang so thuc</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d / %d = %f \\n\"</code><code class=\"cpp plain\">, b, a, (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">)(b / a));</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>7 / 5 = 1\r\n7 / 5 = 1.400000\r\n7 / 5 = 1.400000\r\n7 / 5 = 1.000000</blockquote>\r\n<h2><span id=\"2_Toan_tu_quan_he\">2. Toán tử quan hệ</span></h2>\r\nNgôn ngữ C cung cấp 6 toán tử quan hệ để so sánh các số. Các toán tử quan hệ có giá trị <strong>1 (khi kết quả đúng) hoặc 0 (khi kết quả sai)</strong>.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>STT</th>\r\n<th>Toán tử</th>\r\n<th>Tên</th>\r\n<th>Ví dụ</th>\r\n<th>Kết quả</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>==</td>\r\n<td>So sánh bằng</td>\r\n<td>5 == 5</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>!=</td>\r\n<td>So sánh khác</td>\r\n<td>5 != 5</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>&gt;</td>\r\n<td>So sánh lớn hơn</td>\r\n<td>5 &gt; 4</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>&lt;</td>\r\n<td>So sánh nhỏ hơn</td>\r\n<td>5 &lt; 4</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>&gt;=</td>\r\n<td>So sánh lơn hơn hoặc bằng</td>\r\n<td>5 &gt;= 4</td>\r\n<td>1</td>\r\n</tr>\r\n<tr>\r\n<td>6</td>\r\n<td>&lt;=</td>\r\n<td>So sánh nhỏ hơn hoặc bằng</td>\r\n<td>5 &lt;= 5</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nChúng ta sử dụng các toán tử này để so sánh các giá trị, các ký tự,… tuy nhiên <strong>không so sánh các xâu với nhau</strong> vì điều này sẽ dẫn đến các địa chỉ của chuỗi được so sánh chứ không phải là nội dung chuỗi. Chúng ta có các hàm so sánh xâu ở thư viện string và sẽ tìm hiểu sau. Khi so sánh các ký tự với nhau thì bản chất ta có thể hiểu là máy so sánh các mã ASCII của các ký tự với nhau. VD. ‘A’ &gt;’B’ sẽ trả về giá trị 0 vì ‘A’ có mã ASCII là 65 còn ‘B’ là 66.\r\n<h2><span id=\"3_Toan_tu_luan_ly\">3. Toán tử luận lý</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nC cung cấp 3 toán tử luận lý cho việc kết nối các biểu thức luận lý. Giống như các toán tử quan hệ, các toán tử luận lý có giá trị là 1 hoặc 0.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>STT</th>\r\n<th>Toán tử</th>\r\n<th>Tên</th>\r\n<th>Ví dụ</th>\r\n<th>Kết quả</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>!</td>\r\n<td>Phủ định</td>\r\n<td>! (5 &gt; 4)</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>&amp;&amp;</td>\r\n<td>Và</td>\r\n<td>5 &gt; 4 &amp;&amp; 5 &gt; 6</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>||</td>\r\n<td>Hoặc</td>\r\n<td>5 &gt; 4 || 5 &gt; 6</td>\r\n<td>1</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2><span id=\"4_Toan_tu_tang_giam\">4. Toán tử tăng giảm</span></h2>\r\nCác toán tử tăng một (++) và giảm một (- -) cung cấp các tiện lợi tương ứng cho việc cộng thêm 1 vào một biến số hay trừ đi 1 từ một biến số.\r\n<div>\r\n<div id=\"highlighter_456653\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, k;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = i++;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = ++i;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = i--;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">i = 5; k = --i;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"i = %d, k = %d\\n\"</code><code class=\"cpp plain\">, i, k);</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>i = 6, k = 5\r\ni = 6, k = 6\r\ni = 4, k = 5\r\ni = 4, k = 4</blockquote>\r\n<strong>Tức là ta có:</strong>\r\n<blockquote>++i và –i thì i được tính trước sau đó sẽ lấy kết quả để thực hiện biểu thức\r\ni++ và i– thì i được đưa vào thực hiện biểu thức trước sau đó mới tính i</blockquote>\r\n<h2><span id=\"5_Toan_tu_gan\">5. Toán tử gán</span></h2>\r\nToán tử gán được sử dụng để lưu trữ giá trị cho 1 biến nào đó.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Toán tử</th>\r\n<th>Ví dụ</th>\r\n<th>Tương đương với</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>=</td>\r\n<td>x = 5</td>\r\n<td>Gán 5 cho x</td>\r\n</tr>\r\n<tr>\r\n<td>+=</td>\r\n<td>x += 5</td>\r\n<td>x = x + 5</td>\r\n</tr>\r\n<tr>\r\n<td>-=</td>\r\n<td>x -= 5</td>\r\n<td>x = x – 5</td>\r\n</tr>\r\n<tr>\r\n<td>*=</td>\r\n<td>x *= 5</td>\r\n<td>x = x * 5</td>\r\n</tr>\r\n<tr>\r\n<td>/=</td>\r\n<td>x /= 5</td>\r\n<td>x = x / 5</td>\r\n</tr>\r\n<tr>\r\n<td>%=</td>\r\n<td>x %= 5</td>\r\n<td>x = x % 5</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nChạy test thử nhé.\r\n<div>\r\n<div id=\"highlighter_283634\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = 5;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x = 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x += 5;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x += 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x -= 5;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x -= 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x *= 5;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x *= 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x /= 5;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x /= 5 =&gt; x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>x = 5 =&gt; x = 5\r\nx += 5 =&gt; x = 10\r\nx -= 5 =&gt; x = 5\r\nx *= 5 =&gt; x = 25\r\nx /= 5 =&gt; x = 5</blockquote>\r\n<h2><span id=\"6_Mot_so_toan_tu_khac\">6. Một số toán tử khác</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"61_Toan_tu_phay\">6.1 Toán tử phẩy</span></h3>\r\nNhiều biểu thức có thể được kết nối vào cùng một biểu thức sử dụng toán tử phẩy. Toán tử phẩy yêu cầu 2 toán hạng. Đầu tiên nó ước lượng toán hạng trái sau đó là toán hạng phải, và trả về giá trị của toán hạng phải như là kết quả sau cùng.\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_904534\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">m, t;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">m = (t =2, t*5 + 10);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"t = %d, m = %d\\n\"</code><code class=\"cpp plain\">, t, m);</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>t = 2, m = 20</blockquote>\r\n<h3><span id=\"62_Toan_tu_lay_kich_thuoc\">6.2 Toán tử lấy kích thước</span></h3>\r\nC cung cấp toán tử hữu dụng, sizeof, để tính toán kích thước của bất kỳ hạng mục dữ liệu hay kiểu dữ liệu nào. Nó yêu cầu một toán hạng duy nhất có thể là tên kiểu (ví dụ, int) hay một biểu thức (ví dụ, 100) và trả về kích thước của những thực thể đã chỉ định theo byte. Chạy thử ví dụ nhá. Toán tử này chúng ta đã làm quen ở phần Kiểu dữ liệu rồi.\r\n\r\nChạy ví dụ test thử:\r\n<div>\r\n<div id=\"highlighter_310993\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"char size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"short size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">short</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"int size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"long size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">long</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"float size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">float</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"double size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"1.55 size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(1.55));</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\\"Hello\\\" size = %d byte\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hello\"</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>char size = 1 byte\r\nshort size = 2 byte\r\nint size = 4 byte\r\nlong size = 8 byte\r\nfloat size = 4 byte\r\ndouble size = 8 byte\r\n1.55 size = 8 byte\r\n“Hello” size = 6 byte</blockquote>\r\n<h2><span id=\"7_Do_uu_tien_cua_cac_toan_tu\">7. Độ ưu tiên của các toán tử</span></h2>\r\nĐộ ưu tiên các toán tử được thực hiện từ trên xuống dưới theo bảng sau. Trong mỗi hàng lại có độ ưu tiên như ở cột thứ 3.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Loại</th>\r\n<th>Toán tử</th>\r\n<th>Thứ tự ưu tiên</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>Postfix</td>\r\n<td>() [] -&gt; . ++ – –</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Unary</td>\r\n<td>+ – ! ~ ++ – – (type)* &amp; sizeof</td>\r\n<td>Phải sang trái</td>\r\n</tr>\r\n<tr>\r\n<td>Tính nhân</td>\r\n<td>* / %</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Tính cộng</td>\r\n<td>+ –</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Dịch chuyển</td>\r\n<td>&lt;&lt; &gt;&gt;</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Quan hệ</td>\r\n<td>&lt; &lt;= &gt; &gt;=</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Cân bằng</td>\r\n<td>== !=</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép AND bit</td>\r\n<td>&amp;</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép XOR bit</td>\r\n<td>^</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép OR bit</td>\r\n<td>|</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép AND logic</td>\r\n<td>&amp;&amp;</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Phép OR logic</td>\r\n<td>||</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n<tr>\r\n<td>Điều kiện</td>\r\n<td>?:</td>\r\n<td>Phải sang trái</td>\r\n</tr>\r\n<tr>\r\n<td>Gán</td>\r\n<td>= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^= |=</td>\r\n<td>Phải sang trái</td>\r\n</tr>\r\n<tr>\r\n<td>Dấu phảy</td>\r\n<td>,</td>\r\n<td>Trái sang phải</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào số giây, đổi số giây nhập vào thành dạng “gio:phut:giay”, mỗi thành phần là một số nguyên có 2 chữ số. VD nhập vào 7826 thì in ra 02:10:26</li>\r\n 	<li>Cho biến x = 3; Không chạy chương trình, đoán xem giá trị của x sau khi thực hiện lệnh:\r\n<strong>x = ++x – 3 + x;</strong>\r\nSau khi đoán xong thì thử viết chương trình để kiểm tra kết quả.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 4 – Phép toán, toán tử trong C', '', 'inherit', 'closed', 'closed', '', '154-revision-v1', '', '', '2018-12-10 01:16:05', '2018-12-09 18:16:05', '', 154, 'http://localhost/web-teach-code/blog/2018/12/10/154-revision-v1/', 0, 'revision', '', 0),
(156, 1, '2018-12-10 01:16:10', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2018-12-10 01:16:10', '0000-00-00 00:00:00', '', 0, 'http://localhost/web-teach-code/blog/?p=156', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(157, 1, '2018-12-10 01:17:57', '2018-12-09 18:17:57', 'Trước khi tìm hiểu về cấu trúc các lệnh rẽ nhánh, chúng ta nên tìm hiểu một chút về lệnh đơn và khối lệnh.\r\n<h2><span id=\"1_Lenh_va_khoi_lenh\">1. Lệnh và khối lệnh</span></h2>\r\n<strong>Lệnh</strong> là một tác vụ, biểu thức, hàm, cấu trúc điều khiển… nào đó đơn lẻ.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_485763\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">x = x + 2; </code><code class=\"cpp comments\">// đây là một lệnh đơn </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Day la mot lenh\\n\"</code><code class=\"cpp plain\">);  </code><code class=\"cpp comments\">// đây cũng là một lệnh đơn.</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Khối lệnh:</strong> là một dãy các câu lệnh được bọc bởi cặp dấu <strong>{ }</strong>.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_531316\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">{ </code><code class=\"cpp comments\">//dau khoi</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">a = 78;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">b = 26;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong %d + %d = %d\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">} </code><code class=\"cpp comments\">//cuoi khoi</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi muốn thực hiện một dãy các câu lệnh liên tiếp nào đó thì chúng ta dùng khối lệnh, tức là đặt chúng vào cặp dấu <strong>{}</strong> và viết thụt vào 1 tab cho dễ nhìn.\r\n\r\n<strong>Lưu ý:</strong> Khi một lệnh được đặt trong cặp ngoặc {} thì cũng được coi là khối lệnh.\r\n<h2><span id=\"2_Lenh_if_va_if_else\">2. Lệnh if và if else</span></h2>\r\n<h3><span id=\"21_Lenh_if\">2.1 Lệnh if</span></h3>\r\nLệnh if dịch ra có nghĩa là nếu cái này thì làm cái kia. Ví dụ nếu bạn có người yêu thì chắc bạn sẽ đi chơi cùng ẻm chứ không ngồi xem bài của mình…\r\n\r\n<strong>Cú pháp của lệnh if</strong>\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_if.png?w=780&amp;ssl=1\" alt=\"Lệnh if\" width=\"776\" height=\"374\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động của lệnh if</em></center>\r\n<blockquote><strong>Chú ý:</strong>\r\n<strong>Không đặt dấu chấm phẩy sau câu lệnh if. Ví dụ: if (a &gt; 0);</strong>\r\n<strong>Khi đặt dấu chấm phẩy ở lệnh if thì coi như kết thúc lệnh if tại đó nên khối lệnh sẽ không được thực hiện dù điều kiện đúng hay sai</strong>.</blockquote>\r\n<strong>Ví dụ:</strong> Ban đầu bạn có 100 (tỷ), hãy nhập vào một số tiền. Nếu số tiền là số dương thì cộng thêm vào ví của bạn ngược lại thì không làm gì cả. In ra số tiền bạn có sau khi nhập.\r\n<div>\r\n<div id=\"highlighter_887039\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{     </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 100; </code><code class=\"cpp comments\">// So tien ban dau ban co</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">y; </code><code class=\"cpp comments\">// so tien nhap moi</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so tien = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;y);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( y &gt; 0 ) </code><code class=\"cpp comments\">// neu so tien nhap vao lon hon 0 thi cong vao vi</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + y;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien sau = %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThật đơn giản. Bạn chạy chương trình và xem cách nó hoạt động nhé.\r\n<h3><span id=\"22_Lenh_if_8211_else\">2.2 Lệnh if – else</span></h3>\r\nLệnh if-else là dạng đủ của lệnh if. if là nếu, else là ngược lại.\r\n\r\n<strong>Cú pháp lệnh if – else</strong>\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_if_else.png?w=780&amp;ssl=1\" alt=\"Lệnh if else\" width=\"776\" height=\"292\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động lệnh if – else</em></center><strong>Ví dụ:</strong> Tương tự ví dụ trên. Ban đầu bạn có 100 (tỷ), vợ bạn có 50 (tỷ), hãy nhập vào một số tiền. Nếu số tiền là số dương thì cộng thêm vào ví của bạn một nửa, của vợ bạn một nửa, ngược lại thì chỉ cộng vào ví của bạn (bản chất là trừ đi vì số tiền có thể âm hoặc bằng 0). In ra số tiền bạn và vợ bạn có sau khi nhập.\r\n<div>\r\n<div id=\"highlighter_270183\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">x = 100, y = 50; </code><code class=\"cpp comments\">// So tien ban va vo ban co</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">z; </code><code class=\"cpp comments\">// so tien nhap moi</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so tien = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f\"</code><code class=\"cpp plain\">, &amp;z);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( z &gt; 0 ) </code><code class=\"cpp comments\">// neu so tien nhap vao lon hon 0 thi cong vao vi</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + z / 2;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">y = y + z / 2;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + z;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien cua ban = %.2f \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien cua vo ban = %.2f \\n\"</code><code class=\"cpp plain\">, y);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhá là đơn giản. Bạn thử chạy và xem kết quả nhé. (Ở bài này mình dùng kiểu float vì có phép chia nên số tiền có thể lẻ).\r\n<h3><span id=\"23_Lenh_if_else_long_nhau_va_if-else-if\">2.3 Lệnh if else lồng nhau và if-else-if</span></h3>\r\nTrong nhiều trường hợp, chúng ta cần phải xử lý nhiều điều kiện chứ không chỉ có 1 điều kiện. Do vậy chúng ta có thể lồng nhiều câu lệnh if else vào với nhau.\r\n\r\n<strong>Ví dụ:</strong> Công ty đang triển khai một loại cân sao cho cân theo cặp phục vụ cho cân các cặp tình nhân, và thông báo ra bạn trai nặng hơn hay bạn gái nặng hơn hay hai bạn nặng bằng nhau.\r\n\r\nNhư vậy chúng ta cần xử lý 3 trường hợp chứ không phải chỉ đơn giản là nếu và ngược lại nữa. Chúng ta có code như sau:\r\n<div>\r\n<div id=\"highlighter_768493\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">a; </code><code class=\"cpp comments\">// can nang cua ban trai</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b; </code><code class=\"cpp comments\">// can nang cua ban gai</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao can nang ban trai va ban gai: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f%f\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &gt; b )</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban trai nang hon!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &lt; b)</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban gai nang hon\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai ban nang bang nhau\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Vậy là chúng ta sử dụng được chúng lồng vào nhau. Tuy nhiên cách này sẽ làm code hơi rối và tốn giấy mực. Bạn có thể sử dụng lệnh if-else-if như sau:\r\n<div>\r\n<div id=\"highlighter_383772\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">a; </code><code class=\"cpp comments\">// can nang cua ban trai</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b; </code><code class=\"cpp comments\">// can nang cua ban gai</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao can nang ban trai va ban gai: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f%f\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &gt; b )</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban trai nang hon!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code> <code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &lt; b)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban gai nang hon\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai ban nang bang nhau\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCách code và ý nghĩa cũng rất rõ ràng, dễ hiểu thôi :).\r\n<h3><span id=\"24_Toan_tu_dieu_kien_8211_If_else_rut_gon\">2.4 Toán tử điều kiện – If else rút gọn</span></h3>\r\nChúng ta có một toán tử rút gọn của lệnh if else như sau:\r\n\r\n<code>điều kiện ? biểu thứ 1: biểu thức 2;</code>\r\n\r\nNếu điều kiện đúng thì biểu thức 1 được thực hiện và giá trị của biểu thức 1 là giá trị của toàn bộ lệnh. Nếu điều kiện sai thì biểu thức 2 được thực hiện và giá trị của biểu thức 2 trở thành giá trị của toàn bộ lệnh.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_718281\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 3;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">y = 4;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">z;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">z = x &gt; y ? x : y;</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"z = %d\\n\"</code><code class=\"cpp plain\">, z);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = x &gt; y ? x : 100;</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả sau khi chạy chương trình:\r\n<blockquote>z = 4\r\nx = 100</blockquote>\r\nNhư vậy ta thấy biểu thức 2 và biểu thức 3 có thể là 1 giá trị biến, hằng, hoặc một hàm nào đó có trả về giá trị.\r\n<h2><span id=\"2_Lenh_switch_case\">2. Lệnh switch case</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nLệnh switch cũng giống cấu trúc if, nhưng nó mềm dẻo hơn và linh động hơn nhiều so với sử dụng if. Tuy nhiên, nó cũng có mặt hạn chế là kết quả của biểu thức phải là giá trị hằng nguyên (có giá trị cụ thể). Một bài toán sử dụng lệnh switch thì cũng có thể sử dụng if, nhưng ngược lại thì còn tùy thuộc vào giải thuật của bài toán.\r\n\r\n<strong>Cấu trúc lệnh switch case</strong>\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_switch_case.png?w=780&amp;ssl=1\" alt=\"Lệnh switch case\" width=\"776\" height=\"529\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động lệnh switch case</em></center><strong>Ví dụ:</strong> Nhập vào 1 số từ 1-&gt;5 và in ra cách đọc tương ứng:\r\n<div>\r\n<div id=\"highlighter_303460\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">,&amp;a);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">switch</code><code class=\"cpp plain\">(a)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">1: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Mot\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">2: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">3: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ba\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">4: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Bon\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">5: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nam\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chạy thử, và thử bỏ một vài lệnh break xem nó ra sao nhé.\r\n\r\nNgoài ra, chúng ta có cấu trúc switch-case-default nữa. Nguyên lý hoạt động giống như switch-case nhưng nếu các trường hợp đều không thỏa mãn thì sẽ thực hiện lệnh của trường hợp default (dịch là trường hợp mặc định).\r\n<div>\r\n<div id=\"highlighter_169915\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">,&amp;a);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">switch</code><code class=\"cpp plain\">(a)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">1: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Mot\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">2: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">3: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ba\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">4: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Bon\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">5: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nam\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">default</code><code class=\"cpp plain\">: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban da nhap mot so khac\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Khi_nao_dung_if-else_khi_nao_dung_switch-case\">3. Khi nào dùng if-else, khi nào dùng switch-case</span></h2>\r\nNhư mình đã nói ở trên, lệnh switch case có tính mềm dẻo và linh động hơn if else, cách viết cũng thoáng và khó nhầm hơn if else nhưng một bài dùng được switch case thí chắc chắn dùng được bằng if else còn khi dùng if else lại chưa chắc dùng được bằng switch case.\r\n\r\n<strong>Vậy các bạn nên dùng switch case khi:</strong>\r\n<ul>\r\n 	<li>Số lượng điều kiện là lớn như dạng menu chọn,… -&gt; switch case viết sẽ lạch mạc, dễ kiểm soát.</li>\r\n 	<li>Các trường hợp điều kiện phải có giá trị là số nguyên hoặc ký tự.</li>\r\n</ul>\r\n<strong>Các trường hợp còn lại, các bạn hãy dùng if – else</strong>.\r\n<blockquote><strong>Bài tập:</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào 4 số nguyên. Tìm và in ra số lớn nhất.\r\nHướng dẫn: Ta có 4 số nguyên a, b, c, d. Tìm 2 số nguyên lớn nhất x, y của 2 cặp (a, b) và (c, d). Sau đó so sánh x và y để tìm ra số nguyên lớn nhất.</li>\r\n 	<li>Hãy nhập vào một số là 1 tháng trong năm, in ra xem tháng đó có bao nhiêu ngày. (Coi như không có năm nhuận).</li>\r\n 	<li>Hãy lập trình chương trình giải phương trình bậc 2: <img class=\"latex\" title=\"ax^{2} + bx + c = 0\" src=\"https://s0.wp.com/latex.php?latex=ax%5E%7B2%7D+%2B+bx+%2B+c+%3D+0&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"ax^{2} + bx + c = 0\" /> với a, b, c nhập từ bàn phím.</li>\r\n 	<li>Viết chương trình nhập vào 3 giá trị nguyên dương a, b, c. Kiểm tra xem a, b, c có phải là 3 cạnh của tam giác không? Nếu là 3 cạnh của tam giác thì tính diện tích của tam giác theo công thức:<img class=\"latex\" title=\"S = \\sqrt{p(p-a)(p-b)(p-c)}\" src=\"https://s0.wp.com/latex.php?latex=S+%3D+%5Csqrt%7Bp%28p-a%29%28p-b%29%28p-c%29%7D&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"S = \\sqrt{p(p-a)(p-b)(p-c)}\" /> với p là nửa chu vi tam giác. <img class=\"latex\" title=\"p = \\frac{a+b+c}{2}\" src=\"https://s0.wp.com/latex.php?latex=p+%3D+%5Cfrac%7Ba%2Bb%2Bc%7D%7B2%7D&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"p = \\frac{a+b+c}{2}\" /></li>\r\n 	<li>Viết chương trình tính tiền điện gồm các điều kiện sau:</li>\r\n</ol>\r\n<ul>\r\n 	<li>Tiền thuê bao điện kế: 1000đ/tháng</li>\r\n 	<li>Định mức sử dụng điện cho mỗi hộ là: 50 KW với giá 230đ/KW</li>\r\n 	<li>Nếu phần vượt định mức &lt;= 50KW thì tính giá 480đ/KW</li>\r\n 	<li>Nếu 50KW &lt; phần vượt định mức &lt; 100KW thì tính giá 700đ/K</li>\r\n 	<li>Nếu phần vượt định mức &gt;= 100KW thì tính giá 900đ/KWChỉ số mới và cũ được nhập vào từ bàn phím. In ra màn hình chỉ số cũ, chỉ số mới, tiền trả định mức, tiền trả vượt định mức, tổng tiền phải trả.</li>\r\n</ul>\r\n</blockquote>', 'Lập trình C: Bài 5 – if else, switch case trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-5-if-else-switch-case-trong-c', '', '', '2018-12-10 04:09:04', '2018-12-09 21:09:04', '', 0, 'http://localhost/web-teach-code/blog/?p=157', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(158, 1, '2018-12-10 01:17:57', '2018-12-09 18:17:57', 'Trước khi tìm hiểu về cấu trúc các lệnh rẽ nhánh, chúng ta nên tìm hiểu một chút về lệnh đơn và khối lệnh.\r\n<h2><span id=\"1_Lenh_va_khoi_lenh\">1. Lệnh và khối lệnh</span></h2>\r\n<strong>Lệnh</strong> là một tác vụ, biểu thức, hàm, cấu trúc điều khiển… nào đó đơn lẻ.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_485763\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">x = x + 2; </code><code class=\"cpp comments\">// đây là một lệnh đơn </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Day la mot lenh\\n\"</code><code class=\"cpp plain\">);  </code><code class=\"cpp comments\">// đây cũng là một lệnh đơn.</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Khối lệnh:</strong> là một dãy các câu lệnh được bọc bởi cặp dấu <strong>{ }</strong>.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_531316\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">{ </code><code class=\"cpp comments\">//dau khoi</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">a = 78;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">b = 26;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong %d + %d = %d\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">} </code><code class=\"cpp comments\">//cuoi khoi</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi muốn thực hiện một dãy các câu lệnh liên tiếp nào đó thì chúng ta dùng khối lệnh, tức là đặt chúng vào cặp dấu <strong>{}</strong> và viết thụt vào 1 tab cho dễ nhìn.\r\n\r\n<strong>Lưu ý:</strong> Khi một lệnh được đặt trong cặp ngoặc {} thì cũng được coi là khối lệnh.\r\n<h2><span id=\"2_Lenh_if_va_if_else\">2. Lệnh if và if else</span></h2>\r\n<h3><span id=\"21_Lenh_if\">2.1 Lệnh if</span></h3>\r\nLệnh if dịch ra có nghĩa là nếu cái này thì làm cái kia. Ví dụ nếu bạn có người yêu thì chắc bạn sẽ đi chơi cùng ẻm chứ không ngồi xem bài của mình…\r\n\r\n<strong>Cú pháp của lệnh if</strong>\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_if.png?w=780&amp;ssl=1\" alt=\"Lệnh if\" width=\"776\" height=\"374\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động của lệnh if</em></center>\r\n<blockquote><strong>Chú ý:</strong>\r\n<strong>Không đặt dấu chấm phẩy sau câu lệnh if. Ví dụ: if (a &gt; 0);</strong>\r\n<strong>Khi đặt dấu chấm phẩy ở lệnh if thì coi như kết thúc lệnh if tại đó nên khối lệnh sẽ không được thực hiện dù điều kiện đúng hay sai</strong>.</blockquote>\r\n<strong>Ví dụ:</strong> Ban đầu bạn có 100 (tỷ), hãy nhập vào một số tiền. Nếu số tiền là số dương thì cộng thêm vào ví của bạn ngược lại thì không làm gì cả. In ra số tiền bạn có sau khi nhập.\r\n<div>\r\n<div id=\"highlighter_887039\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{     </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 100; </code><code class=\"cpp comments\">// So tien ban dau ban co</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">y; </code><code class=\"cpp comments\">// so tien nhap moi</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so tien = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;y);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( y &gt; 0 ) </code><code class=\"cpp comments\">// neu so tien nhap vao lon hon 0 thi cong vao vi</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + y;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien sau = %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThật đơn giản. Bạn chạy chương trình và xem cách nó hoạt động nhé.\r\n<h3><span id=\"22_Lenh_if_8211_else\">2.2 Lệnh if – else</span></h3>\r\nLệnh if-else là dạng đủ của lệnh if. if là nếu, else là ngược lại.\r\n\r\n<strong>Cú pháp lệnh if – else</strong>\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_if_else.png?w=780&amp;ssl=1\" alt=\"Lệnh if else\" width=\"776\" height=\"292\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động lệnh if – else</em></center><strong>Ví dụ:</strong> Tương tự ví dụ trên. Ban đầu bạn có 100 (tỷ), vợ bạn có 50 (tỷ), hãy nhập vào một số tiền. Nếu số tiền là số dương thì cộng thêm vào ví của bạn một nửa, của vợ bạn một nửa, ngược lại thì chỉ cộng vào ví của bạn (bản chất là trừ đi vì số tiền có thể âm hoặc bằng 0). In ra số tiền bạn và vợ bạn có sau khi nhập.\r\n<div>\r\n<div id=\"highlighter_270183\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">x = 100, y = 50; </code><code class=\"cpp comments\">// So tien ban va vo ban co</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">z; </code><code class=\"cpp comments\">// so tien nhap moi</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so tien = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f\"</code><code class=\"cpp plain\">, &amp;z);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( z &gt; 0 ) </code><code class=\"cpp comments\">// neu so tien nhap vao lon hon 0 thi cong vao vi</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + z / 2;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">y = y + z / 2;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + z;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien cua ban = %.2f \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien cua vo ban = %.2f \\n\"</code><code class=\"cpp plain\">, y);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhá là đơn giản. Bạn thử chạy và xem kết quả nhé. (Ở bài này mình dùng kiểu float vì có phép chia nên số tiền có thể lẻ).\r\n<h3><span id=\"23_Lenh_if_else_long_nhau_va_if-else-if\">2.3 Lệnh if else lồng nhau và if-else-if</span></h3>\r\nTrong nhiều trường hợp, chúng ta cần phải xử lý nhiều điều kiện chứ không chỉ có 1 điều kiện. Do vậy chúng ta có thể lồng nhiều câu lệnh if else vào với nhau.\r\n\r\n<strong>Ví dụ:</strong> Công ty đang triển khai một loại cân sao cho cân theo cặp phục vụ cho cân các cặp tình nhân, và thông báo ra bạn trai nặng hơn hay bạn gái nặng hơn hay hai bạn nặng bằng nhau.\r\n\r\nNhư vậy chúng ta cần xử lý 3 trường hợp chứ không phải chỉ đơn giản là nếu và ngược lại nữa. Chúng ta có code như sau:\r\n<div>\r\n<div id=\"highlighter_768493\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">a; </code><code class=\"cpp comments\">// can nang cua ban trai</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b; </code><code class=\"cpp comments\">// can nang cua ban gai</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao can nang ban trai va ban gai: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f%f\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &gt; b )</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban trai nang hon!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &lt; b)</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban gai nang hon\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai ban nang bang nhau\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Vậy là chúng ta sử dụng được chúng lồng vào nhau. Tuy nhiên cách này sẽ làm code hơi rối và tốn giấy mực. Bạn có thể sử dụng lệnh if-else-if như sau:\r\n<div>\r\n<div id=\"highlighter_383772\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">a; </code><code class=\"cpp comments\">// can nang cua ban trai</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b; </code><code class=\"cpp comments\">// can nang cua ban gai</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao can nang ban trai va ban gai: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f%f\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &gt; b )</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban trai nang hon!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code> <code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &lt; b)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban gai nang hon\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai ban nang bang nhau\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCách code và ý nghĩa cũng rất rõ ràng, dễ hiểu thôi :).\r\n<h3><span id=\"24_Toan_tu_dieu_kien_8211_If_else_rut_gon\">2.4 Toán tử điều kiện – If else rút gọn</span></h3>\r\nChúng ta có một toán tử rút gọn của lệnh if else như sau:\r\n\r\n<code>điều kiện ? biểu thứ 1: biểu thức 2;</code>\r\n\r\nNếu điều kiện đúng thì biểu thức 1 được thực hiện và giá trị của biểu thức 1 là giá trị của toàn bộ lệnh. Nếu điều kiện sai thì biểu thức 2 được thực hiện và giá trị của biểu thức 2 trở thành giá trị của toàn bộ lệnh.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_718281\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 3;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">y = 4;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">z;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">z = x &gt; y ? x : y;</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"z = %d\\n\"</code><code class=\"cpp plain\">, z);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = x &gt; y ? x : 100;</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả sau khi chạy chương trình:\r\n<blockquote>z = 4\r\nx = 100</blockquote>\r\nNhư vậy ta thấy biểu thức 2 và biểu thức 3 có thể là 1 giá trị biến, hằng, hoặc một hàm nào đó có trả về giá trị.\r\n<h2><span id=\"2_Lenh_switch_case\">2. Lệnh switch case</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nLệnh switch cũng giống cấu trúc if, nhưng nó mềm dẻo hơn và linh động hơn nhiều so với sử dụng if. Tuy nhiên, nó cũng có mặt hạn chế là kết quả của biểu thức phải là giá trị hằng nguyên (có giá trị cụ thể). Một bài toán sử dụng lệnh switch thì cũng có thể sử dụng if, nhưng ngược lại thì còn tùy thuộc vào giải thuật của bài toán.\r\n\r\n<strong>Cấu trúc lệnh switch case</strong>\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_switch_case.png?w=780&amp;ssl=1\" alt=\"Lệnh switch case\" width=\"776\" height=\"529\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động lệnh switch case</em></center><strong>Ví dụ:</strong> Nhập vào 1 số từ 1-&gt;5 và in ra cách đọc tương ứng:\r\n<div>\r\n<div id=\"highlighter_303460\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">,&amp;a);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">switch</code><code class=\"cpp plain\">(a)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">1: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Mot\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">2: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">3: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ba\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">4: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Bon\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">5: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nam\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chạy thử, và thử bỏ một vài lệnh break xem nó ra sao nhé.\r\n\r\nNgoài ra, chúng ta có cấu trúc switch-case-default nữa. Nguyên lý hoạt động giống như switch-case nhưng nếu các trường hợp đều không thỏa mãn thì sẽ thực hiện lệnh của trường hợp default (dịch là trường hợp mặc định).\r\n<div>\r\n<div id=\"highlighter_169915\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">,&amp;a);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">switch</code><code class=\"cpp plain\">(a)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">1: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Mot\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">2: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">3: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ba\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">4: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Bon\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">5: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nam\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">default</code><code class=\"cpp plain\">: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban da nhap mot so khac\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Khi_nao_dung_if-else_khi_nao_dung_switch-case\">3. Khi nào dùng if-else, khi nào dùng switch-case</span></h2>\r\nNhư mình đã nói ở trên, lệnh switch case có tính mềm dẻo và linh động hơn if else, cách viết cũng thoáng và khó nhầm hơn if else nhưng một bài dùng được switch case thí chắc chắn dùng được bằng if else còn khi dùng if else lại chưa chắc dùng được bằng switch case.\r\n\r\n<strong>Vậy các bạn nên dùng switch case khi:</strong>\r\n<ul>\r\n 	<li>Số lượng điều kiện là lớn như dạng menu chọn,… -&gt; switch case viết sẽ lạch mạc, dễ kiểm soát.</li>\r\n 	<li>Các trường hợp điều kiện phải có giá trị là số nguyên hoặc ký tự.</li>\r\n</ul>\r\n<strong>Các trường hợp còn lại, các bạn hãy dùng if – else</strong>.\r\n<blockquote><strong>Bài tập:</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào 4 số nguyên. Tìm và in ra số lớn nhất.\r\nHướng dẫn: Ta có 4 số nguyên a, b, c, d. Tìm 2 số nguyên lớn nhất x, y của 2 cặp (a, b) và (c, d). Sau đó so sánh x và y để tìm ra số nguyên lớn nhất.</li>\r\n 	<li>Hãy nhập vào một số là 1 tháng trong năm, in ra xem tháng đó có bao nhiêu ngày. (Coi như không có năm nhuận).</li>\r\n 	<li>Hãy lập trình chương trình giải phương trình bậc 2: <img class=\"latex\" title=\"ax^{2} + bx + c = 0\" src=\"https://s0.wp.com/latex.php?latex=ax%5E%7B2%7D+%2B+bx+%2B+c+%3D+0&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"ax^{2} + bx + c = 0\" /> với a, b, c nhập từ bàn phím.</li>\r\n 	<li>Viết chương trình nhập vào 3 giá trị nguyên dương a, b, c. Kiểm tra xem a, b, c có phải là 3 cạnh của tam giác không? Nếu là 3 cạnh của tam giác thì tính diện tích của tam giác theo công thức:\r\n\r\n<img class=\"latex\" title=\"S = \\sqrt{p(p-a)(p-b)(p-c)}\" src=\"https://s0.wp.com/latex.php?latex=S+%3D+%5Csqrt%7Bp%28p-a%29%28p-b%29%28p-c%29%7D&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"S = \\sqrt{p(p-a)(p-b)(p-c)}\" /> với p là nửa chu vi tam giác. <img class=\"latex\" title=\"p = \\frac{a+b+c}{2}\" src=\"https://s0.wp.com/latex.php?latex=p+%3D+%5Cfrac%7Ba%2Bb%2Bc%7D%7B2%7D&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"p = \\frac{a+b+c}{2}\" /></li>\r\n 	<li>Viết chương trình tính tiền điện gồm các điều kiện sau:</li>\r\n</ol>\r\n<ul>\r\n 	<li>Tiền thuê bao điện kế: 1000đ/tháng</li>\r\n 	<li>Định mức sử dụng điện cho mỗi hộ là: 50 KW với giá 230đ/KW</li>\r\n 	<li>Nếu phần vượt định mức &lt;= 50KW thì tính giá 480đ/KW</li>\r\n 	<li>Nếu 50KW &lt; phần vượt định mức &lt; 100KW thì tính giá 700đ/K</li>\r\n 	<li>Nếu phần vượt định mức &gt;= 100KW thì tính giá 900đ/KW\r\n\r\nChỉ số mới và cũ được nhập vào từ bàn phím. In ra màn hình chỉ số cũ, chỉ số mới, tiền trả định mức, tiền trả vượt định mức, tổng tiền phải trả.</li>\r\n</ul>\r\n</blockquote>', 'Lập trình C: Bài 5 – if else, switch case trong C', '', 'inherit', 'closed', 'closed', '', '157-revision-v1', '', '', '2018-12-10 01:17:57', '2018-12-09 18:17:57', '', 157, 'http://localhost/web-teach-code/blog/2018/12/10/157-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(159, 1, '2018-12-10 01:18:28', '2018-12-09 18:18:28', '<h2><span id=\"1_Vi_du_mo_dau\">1. Ví dụ mở đầu</span></h2>\r\nViệc in ra tên của bạn rất đơn giản phải không. Một chương trình viết rất đơn giản.\r\n<div>\r\n<div id=\"highlighter_45652\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Vậy bây giờ tôi muốn bạn in ra 10 lần tên bạn?\r\n<div>\r\n<div id=\"highlighter_705575\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhá đơn giản, chỉ cần copy thành 10 dòng printf là xong. Nhưng nếu không phải 10, mà là 1000 hoặc nhiều hơn? Rõ ràng việc copy là không khả thi.\r\n\r\nTrong thực tế, các phần mềm sẽ có những công việc phải lặp đi lặp lại nhiều lần giống như ví dụ trên. Hoặc ví dụ như phần mềm của bạn cần in một danh sách các nhân viên, mỗi nhân viên có thông tin (nội dung) khác nhau nhưng cấu trúc thì rất giống nhau. Hoặc đơn giản hơn là bạn lướt facebook và thấy các tin bài từ bạn bè của mình, các tin này không giống nhau về nội dung nhưng cấu trúc thì rất giống nhau.\r\n\r\nĐể thực hiện được những công việc cần lặp lại nhiều lần như thế, chúng ta sẽ sử dụng cấu trúc vòng lặp gồm <strong>for, while, do-while</strong>. Bài này chúng ta sẽ tìm hiểu về vòng lặp <strong>for</strong>.\r\n\r\nChúng ta sẽ sửa lại ví dụ in 10 lần tên bạn như sau:\r\n<div>\r\n<div id=\"highlighter_440587\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 10; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nNhư code trên, tôi đã sử dụng <strong>vòng lặp for</strong> để thực hiện công việc in ra tên của mình 10 lần, với 1000 lần cũng thật đơn giản khi tôi thay số 10 thành số 1000 (bạn có thể thử). Nhìn vào code bạn cũng có thể hình dung cơ bản về việc chúng ta làm.\r\n<h2><span id=\"2_Cau_truc_vong_for\">2. Cấu trúc vòng for</span></h2>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/chap6_for.png?w=780&amp;ssl=1\" alt=\"Vòng lặp for\" width=\"776\" height=\"404\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động của vòng lặp for</em></center>Nhìn vào hình trên ta thấy vòng for có một cú pháp và cách hoạt động khá rõ ràng và dễ hiểu. Tuy nhiên các bạn cần lưu ý:\r\n<ul>\r\n 	<li>Sau lệnh for không có chấm phẩy.</li>\r\n 	<li>3 biểu thức của vòng lặp for ngăn cách nhau bằng dấu chấm phẩy (<strong>;</strong>), các biểu thức có thể vắng mặt 1,2 hoặc cả 3 nhưng vẫn phải có dấy chấm phẩy này.</li>\r\n 	<li>Biểu thức 1 bao giờ cũng chỉ được tính toán một lần khi gọi thực hiện for.</li>\r\n 	<li>Biểu thức 2, 3 và thân for có thể thực hiện lặp lại nhiều lần.</li>\r\n 	<li>Biểu thức 1, 2, 3 phải phân cách bằng dấu chấm phẩy ( ; ), các biểu thức có thể vắng mặt 1,2 hoặc cả 3 nhưng vẫn phải có dấy chấm phẩy này.</li>\r\n 	<li>Nếu biểu thức 2 không có, vòng for được xem là luôn luôn đúng. Muốn thoát khỏi vòng lặp for phải dùng một trong lệnh break, goto hoặc return.</li>\r\n 	<li>Với mỗi biểu thức có thể viết thành một dãy biểu thức con phân cách nhau bởi dấu phẩy. Khi đó các biểu thức con được xác định từ trái sang phải. Tính đúng sai của dãy biểu thức con trong biểu thức thứ 2 được xác định bởi biểu thức con cuối cùng.</li>\r\n 	<li>Trong thân for (khối lệnh) có thể chứa một hoặc nhiều cấu trúc điều khiển khác, vòng lặp khác.</li>\r\n 	<li>Khi gặp lệnh break, cấu trúc lặp sâu nhất sẽ thoát ra.</li>\r\n 	<li>Trong thân for có thểdùng lệnh goto để thoát khỏi vòng lặp đến vị trí mong muốn.</li>\r\n 	<li>Trong thân for có thể sử dụng return để trở về một hàm nào đó.</li>\r\n 	<li>Trong thân for có thể sử dụng lệnh continue để chuyển đến đầu vòng lặp (bỏ qua các câu lệnh còn lại trong thân).</li>\r\n</ul>\r\nQuay trở lại code của ví dụ trên:\r\n<div>\r\n<div id=\"highlighter_442816\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 10; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nQuá trình hoạt động như sau:\r\n<ul>\r\n 	<li>Bước 1: Chạy biểu thức 1 tức là gán i = 1.</li>\r\n 	<li>Bước 2: Chạy biểu thức 2 tức là kiểm tra i &lt;= 10 không. Do i = 1 nên cái này đúng =&gt; Chạy khối lệnh tức là in ra tên.</li>\r\n 	<li>Bước 3: Chạy biểu thức 3 tức là tăng i lên 1 đơn vị. Giờ thì i = 2.</li>\r\n 	<li>Bước 4: Quay lại biểu thức 2. Kiểm tra i &lt; 10 không. Do i = 2 nên vẫn đúng =&gt; Chạy khối lệnh, tức là in ra tên.</li>\r\n 	<li>Bước 5: Chạy biểu thức 3 tức tăng i lên 1. Giờ i = 3.</li>\r\n 	<li>Bước 6. Quay lại biểu thức 2,…</li>\r\n 	<li>Bước….</li>\r\n 	<li>Bước x: Chạy biểu thức 3, tăng i lên 1. Giờ i = 10.</li>\r\n 	<li>Bước x+1: Quay lại biểu thức 2 tức kiểm tra i &lt;= 10. Vẫn đúng =&gt; Chạy khối lệnh in ra tên.</li>\r\n 	<li>Bước x+2: Chạy biểu thức 3, tăng i lên 1. Giờ i = 11.</li>\r\n 	<li>Bước x+3: Quay lại biểu thức 2, kiểm tra i &lt;=10. Giờ thì sai vì i đang là 11 =&gt; Thoát khỏi vòng for. Thực hiện lệnh tiếp theo ngang hàng vòng for (lệnh return 0 bên dưới).</li>\r\n</ul>\r\nOk. Giờ các bạn đã cơ bản hiểu về vòng lặp for. Tiếp tục làm vài ví dụ nữa.\r\n<h2><span id=\"Vi_du_1\">Ví dụ 1:</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nViết chương trình in ra 15 lần tên của bạn, kèm theo thứ tự như sau:\r\n<ol>\r\n 	<li>Nguyen Van Quan</li>\r\n 	<li>Nguyen Van Quan</li>\r\n 	<li>Nguyen Van Quan</li>\r\n 	<li>….</li>\r\n</ol>\r\n<blockquote>Hum… làm sao lấy được các số tăng dần? Các bạn có nhìn vào quá trình chạy các bước của vòng for? Chúng ta có 1 biến i cứ tăng dần… Vậy chúng ta sẽ lợi dụng nó.</blockquote>\r\n<div>\r\n<div id=\"highlighter_786398\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 10; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d.Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"Vi_du_2\">Ví dụ 2:</span></h2>\r\nHãy in ra các số dương chẵn từ 1 đến 20 trên cùng 1 dòng, cách nhau bởi dấu cách.\r\n<blockquote>Chỉ cần cho i chạy từ 1 đến 20 và chúng ta sẽ kiểm tra số nào chẵn thì in ra. Để kiểm tra số chẵn, chúng ta nhớ lại phép chia lấy dư. Nếu i chia 2 dư 0 thì là số chẵn.</blockquote>\r\n<div>\r\n<div id=\"highlighter_834479\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 20; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( i % 2 == 0) </code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Tuy nhiên tôi muốn bạn suy nghĩ thêm chút trước khi nhìn xuống gợi ý và code. Làm sao không dùng if kiểm tra số chẵn mà vẫn làm được bài này?\r\n<blockquote>Hãy nhớ các biểu thức trong for không phải là cố định, chúng ta có thể thay đổi nó. Và hãy thay đổi cách tăng i. Chúng ta cho i bắt đầu từ 2 và mỗi lần tăng thì tăng lên 2 đơn vị.</blockquote>\r\n<div>\r\n<div id=\"highlighter_844451\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 2; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nRõ ràng code này ngon hơn code của lần trước đó. Ở trên chúng ta tăng i lên 2 đơn vị bằng lệnh <strong>i = i + 2</strong>.\r\nĐây là phép gán i + 2 cho i, chứ không phải lệnh so sánh i và i + 2.\r\n<h2><span id=\"Vi_du_3\">Ví dụ 3:</span></h2>\r\nTính tổng các số nguyên chẵn từ 1 đến 20.\r\n<div>\r\n<div id=\"highlighter_840799\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 2; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">s = s + i;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nChú ý trong code trên, chúng ta khai báo 1 biến s (viết tắt của sum) để lưu lại tổng. Mỗi lần i tăng lên thì chúng ta cộng dồn vào s bằng lệnh <strong>s = s + i</strong>.\r\n<h2><span id=\"Vi_du_4\">Ví dụ 4:</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nTính tổng các số lẻ từ 1 đến 20 nhưng đến khi nào tổng vượt quá 15 thì dừng lại.\r\n<blockquote>Ở đây chúng ta sẽ cộng tổng các số lẻ, giống như các số chẵn thôi, tuy nhiên khi mà tổng lớn hơn 15 rồi thì chúng ta sẽ dừng lại, không cộng nữa.</blockquote>\r\n<div>\r\n<div id=\"highlighter_111674\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s &lt;= 15)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">s = s + i;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nĐơn giản chỉ việc kiểm tra khi nào s vẫn nhỏ hơn hoặc bằng 15 thì ta cộng vào. Chúng ta sẽ có s = 1 + 3 + 5 + 7 = 16.\r\n\r\nTuy nhiên nếu bạn để ý, khi s &gt; 15, chúng ta không cộng vào s nhưng vòng lặp for vẫn chạy cho đến khi i &gt; 20. Tức là sẽ chạy tiếp các lần lặp i = 9, 11, 13, 15, 17, 19. Do vậy nó làm lãng phí, thừa thãi và làm chương trình chạy lâu hơn. Vì vậy chúng ta nên ngắt vòng lặp tại thời điểm thực hiện xong lệnh khi i = 7. Để thực hiện việc này có thể dùng <strong>break</strong>, hoặc <strong>goto</strong>, nhưng khuyên các bạn nên dùng break vì đơn giản và an toàn.\r\n<div>\r\n<div id=\"highlighter_687662\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s &lt;= 15)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">s = s + i;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"Vi_du_5\">Ví dụ 5</span></h2>\r\nNhập vào n số nguyên, tính tổng các số chẵn đã nhập.\r\n<div>\r\n<div id=\"highlighter_371537\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, n, x;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter n = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;n);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= n; i++)</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter number %d : \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(x % 2 != 0) </code><code class=\"cpp keyword bold\">continue</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">s = s + x;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ ví dụ này, tôi hướng dẫn các bạn cách dùng lệnh <strong>continue</strong>. Lệnh này không thoát khỏi vòn lặp nhưng lại có tác dụng là quay trở về biểu thức 3 mà không làm các lệnh đằng sau nó. Ở đây nếu x nhập vào không chẵn thì bỏ qua lệnh cộng dồn s mà chạy đến lệnh tăng i ngay.\r\n<blockquote><strong>Bài tập</strong>:\r\n<ol>\r\n 	<li>Viết chương trình nhập vào số n và in ra các ước của số n đó.</li>\r\n 	<li>Viết chương trình kiểm tra 1 số có là số nguyên tố không? Số nguyên tố là số nguyên dương có duy nhất 2 ước là 1 và chính nó. Ví dụ số 2, 3, 5, …</li>\r\n 	<li>Viết chương trình kiểm tra 1 số có là số hoàn hảo không? Số hoàn hảo là số nguyên dương có tổng các ước bằng 2 lần nó. VD số 6 có các ước 1, 2, 3, 6 và tổng 1 + 2 + 3 + 6 = 12 (bằng 2 lần 6).</li>\r\n 	<li>Viết chương trình tính S = 1 + 1/2 + 1/3 + … + 1/N</li>\r\n 	<li>Viết chương trình tính tổng bình phương các số lẻ từ 1 đến n.</li>\r\n 	<li>Viết chương trình tính n! biết n! = 1.2.3.4…n</li>\r\n 	<li>Viết chương trình tính số thứ n của dãy fibonaci biết dãy f(n) = f(n-1) + f(n-2), n &gt; 2 và f(1) = 1, f(2) = 1.</li>\r\n 	<li>Viết chương trình nhập vào chiều dài, chiều rộng của hình chữ nhật. Vẽ hình chữ nhật dấu sao (*) có kích thước đã nhập.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C : Bài 6 – Vòng lặp for trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-6-vong-lap-for-trong-c', '', '', '2018-12-10 04:08:46', '2018-12-09 21:08:46', '', 0, 'http://localhost/web-teach-code/blog/?p=159', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(160, 1, '2018-12-10 01:18:28', '2018-12-09 18:18:28', '<h2><span id=\"1_Vi_du_mo_dau\">1. Ví dụ mở đầu</span></h2>\r\nViệc in ra tên của bạn rất đơn giản phải không. Một chương trình viết rất đơn giản.\r\n<div>\r\n<div id=\"highlighter_45652\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Vậy bây giờ tôi muốn bạn in ra 10 lần tên bạn?\r\n<div>\r\n<div id=\"highlighter_705575\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhá đơn giản, chỉ cần copy thành 10 dòng printf là xong. Nhưng nếu không phải 10, mà là 1000 hoặc nhiều hơn? Rõ ràng việc copy là không khả thi.\r\n\r\nTrong thực tế, các phần mềm sẽ có những công việc phải lặp đi lặp lại nhiều lần giống như ví dụ trên. Hoặc ví dụ như phần mềm của bạn cần in một danh sách các nhân viên, mỗi nhân viên có thông tin (nội dung) khác nhau nhưng cấu trúc thì rất giống nhau. Hoặc đơn giản hơn là bạn lướt facebook và thấy các tin bài từ bạn bè của mình, các tin này không giống nhau về nội dung nhưng cấu trúc thì rất giống nhau.\r\n\r\nĐể thực hiện được những công việc cần lặp lại nhiều lần như thế, chúng ta sẽ sử dụng cấu trúc vòng lặp gồm <strong>for, while, do-while</strong>. Bài này chúng ta sẽ tìm hiểu về vòng lặp <strong>for</strong>.\r\n\r\nChúng ta sẽ sửa lại ví dụ in 10 lần tên bạn như sau:\r\n<div>\r\n<div id=\"highlighter_440587\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 10; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nNhư code trên, tôi đã sử dụng <strong>vòng lặp for</strong> để thực hiện công việc in ra tên của mình 10 lần, với 1000 lần cũng thật đơn giản khi tôi thay số 10 thành số 1000 (bạn có thể thử). Nhìn vào code bạn cũng có thể hình dung cơ bản về việc chúng ta làm.\r\n<h2><span id=\"2_Cau_truc_vong_for\">2. Cấu trúc vòng for</span></h2>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/chap6_for.png?w=780&amp;ssl=1\" alt=\"Vòng lặp for\" width=\"776\" height=\"404\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động của vòng lặp for</em></center>Nhìn vào hình trên ta thấy vòng for có một cú pháp và cách hoạt động khá rõ ràng và dễ hiểu. Tuy nhiên các bạn cần lưu ý:\r\n<ul>\r\n 	<li>Sau lệnh for không có chấm phẩy.</li>\r\n 	<li>3 biểu thức của vòng lặp for ngăn cách nhau bằng dấu chấm phẩy (<strong>;</strong>), các biểu thức có thể vắng mặt 1,2 hoặc cả 3 nhưng vẫn phải có dấy chấm phẩy này.</li>\r\n 	<li>Biểu thức 1 bao giờ cũng chỉ được tính toán một lần khi gọi thực hiện for.</li>\r\n 	<li>Biểu thức 2, 3 và thân for có thể thực hiện lặp lại nhiều lần.</li>\r\n 	<li>Biểu thức 1, 2, 3 phải phân cách bằng dấu chấm phẩy ( ; ), các biểu thức có thể vắng mặt 1,2 hoặc cả 3 nhưng vẫn phải có dấy chấm phẩy này.</li>\r\n 	<li>Nếu biểu thức 2 không có, vòng for được xem là luôn luôn đúng. Muốn thoát khỏi vòng lặp for phải dùng một trong lệnh break, goto hoặc return.</li>\r\n 	<li>Với mỗi biểu thức có thể viết thành một dãy biểu thức con phân cách nhau bởi dấu phẩy. Khi đó các biểu thức con được xác định từ trái sang phải. Tính đúng sai của dãy biểu thức con trong biểu thức thứ 2 được xác định bởi biểu thức con cuối cùng.</li>\r\n 	<li>Trong thân for (khối lệnh) có thể chứa một hoặc nhiều cấu trúc điều khiển khác, vòng lặp khác.</li>\r\n 	<li>Khi gặp lệnh break, cấu trúc lặp sâu nhất sẽ thoát ra.</li>\r\n 	<li>Trong thân for có thểdùng lệnh goto để thoát khỏi vòng lặp đến vị trí mong muốn.</li>\r\n 	<li>Trong thân for có thể sử dụng return để trở về một hàm nào đó.</li>\r\n 	<li>Trong thân for có thể sử dụng lệnh continue để chuyển đến đầu vòng lặp (bỏ qua các câu lệnh còn lại trong thân).</li>\r\n</ul>\r\nQuay trở lại code của ví dụ trên:\r\n<div>\r\n<div id=\"highlighter_442816\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 10; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nQuá trình hoạt động như sau:\r\n<ul>\r\n 	<li>Bước 1: Chạy biểu thức 1 tức là gán i = 1.</li>\r\n 	<li>Bước 2: Chạy biểu thức 2 tức là kiểm tra i &lt;= 10 không. Do i = 1 nên cái này đúng =&gt; Chạy khối lệnh tức là in ra tên.</li>\r\n 	<li>Bước 3: Chạy biểu thức 3 tức là tăng i lên 1 đơn vị. Giờ thì i = 2.</li>\r\n 	<li>Bước 4: Quay lại biểu thức 2. Kiểm tra i &lt; 10 không. Do i = 2 nên vẫn đúng =&gt; Chạy khối lệnh, tức là in ra tên.</li>\r\n 	<li>Bước 5: Chạy biểu thức 3 tức tăng i lên 1. Giờ i = 3.</li>\r\n 	<li>Bước 6. Quay lại biểu thức 2,…</li>\r\n 	<li>Bước….</li>\r\n 	<li>Bước x: Chạy biểu thức 3, tăng i lên 1. Giờ i = 10.</li>\r\n 	<li>Bước x+1: Quay lại biểu thức 2 tức kiểm tra i &lt;= 10. Vẫn đúng =&gt; Chạy khối lệnh in ra tên.</li>\r\n 	<li>Bước x+2: Chạy biểu thức 3, tăng i lên 1. Giờ i = 11.</li>\r\n 	<li>Bước x+3: Quay lại biểu thức 2, kiểm tra i &lt;=10. Giờ thì sai vì i đang là 11 =&gt; Thoát khỏi vòng for. Thực hiện lệnh tiếp theo ngang hàng vòng for (lệnh return 0 bên dưới).</li>\r\n</ul>\r\nOk. Giờ các bạn đã cơ bản hiểu về vòng lặp for. Tiếp tục làm vài ví dụ nữa.\r\n<h2><span id=\"Vi_du_1\">Ví dụ 1:</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nViết chương trình in ra 15 lần tên của bạn, kèm theo thứ tự như sau:\r\n<ol>\r\n 	<li>Nguyen Van Quan</li>\r\n 	<li>Nguyen Van Quan</li>\r\n 	<li>Nguyen Van Quan</li>\r\n 	<li>….</li>\r\n</ol>\r\n<blockquote>Hum… làm sao lấy được các số tăng dần? Các bạn có nhìn vào quá trình chạy các bước của vòng for? Chúng ta có 1 biến i cứ tăng dần… Vậy chúng ta sẽ lợi dụng nó.</blockquote>\r\n<div>\r\n<div id=\"highlighter_786398\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 10; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d.Nguyen Van Quan\\n\"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"Vi_du_2\">Ví dụ 2:</span></h2>\r\nHãy in ra các số dương chẵn từ 1 đến 20 trên cùng 1 dòng, cách nhau bởi dấu cách.\r\n<blockquote>Chỉ cần cho i chạy từ 1 đến 20 và chúng ta sẽ kiểm tra số nào chẵn thì in ra. Để kiểm tra số chẵn, chúng ta nhớ lại phép chia lấy dư. Nếu i chia 2 dư 0 thì là số chẵn.</blockquote>\r\n<div>\r\n<div id=\"highlighter_834479\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 20; i++)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( i % 2 == 0) </code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Tuy nhiên tôi muốn bạn suy nghĩ thêm chút trước khi nhìn xuống gợi ý và code. Làm sao không dùng if kiểm tra số chẵn mà vẫn làm được bài này?\r\n<blockquote>Hãy nhớ các biểu thức trong for không phải là cố định, chúng ta có thể thay đổi nó. Và hãy thay đổi cách tăng i. Chúng ta cho i bắt đầu từ 2 và mỗi lần tăng thì tăng lên 2 đơn vị.</blockquote>\r\n<div>\r\n<div id=\"highlighter_844451\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 2; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nRõ ràng code này ngon hơn code của lần trước đó. Ở trên chúng ta tăng i lên 2 đơn vị bằng lệnh <strong>i = i + 2</strong>.\r\nĐây là phép gán i + 2 cho i, chứ không phải lệnh so sánh i và i + 2.\r\n<h2><span id=\"Vi_du_3\">Ví dụ 3:</span></h2>\r\nTính tổng các số nguyên chẵn từ 1 đến 20.\r\n<div>\r\n<div id=\"highlighter_840799\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 2; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">s = s + i;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nChú ý trong code trên, chúng ta khai báo 1 biến s (viết tắt của sum) để lưu lại tổng. Mỗi lần i tăng lên thì chúng ta cộng dồn vào s bằng lệnh <strong>s = s + i</strong>.\r\n<h2><span id=\"Vi_du_4\">Ví dụ 4:</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nTính tổng các số lẻ từ 1 đến 20 nhưng đến khi nào tổng vượt quá 15 thì dừng lại.\r\n<blockquote>Ở đây chúng ta sẽ cộng tổng các số lẻ, giống như các số chẵn thôi, tuy nhiên khi mà tổng lớn hơn 15 rồi thì chúng ta sẽ dừng lại, không cộng nữa.</blockquote>\r\n<div>\r\n<div id=\"highlighter_111674\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s &lt;= 15)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">s = s + i;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nĐơn giản chỉ việc kiểm tra khi nào s vẫn nhỏ hơn hoặc bằng 15 thì ta cộng vào. Chúng ta sẽ có s = 1 + 3 + 5 + 7 = 16.\r\n\r\nTuy nhiên nếu bạn để ý, khi s &gt; 15, chúng ta không cộng vào s nhưng vòng lặp for vẫn chạy cho đến khi i &gt; 20. Tức là sẽ chạy tiếp các lần lặp i = 9, 11, 13, 15, 17, 19. Do vậy nó làm lãng phí, thừa thãi và làm chương trình chạy lâu hơn. Vì vậy chúng ta nên ngắt vòng lặp tại thời điểm thực hiện xong lệnh khi i = 7. Để thực hiện việc này có thể dùng <strong>break</strong>, hoặc <strong>goto</strong>, nhưng khuyên các bạn nên dùng break vì đơn giản và an toàn.\r\n<div>\r\n<div id=\"highlighter_687662\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= 20; i = i + 2)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s &lt;= 15)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">s = s + i;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"Vi_du_5\">Ví dụ 5</span></h2>\r\nNhập vào n số nguyên, tính tổng các số chẵn đã nhập.\r\n<div>\r\n<div id=\"highlighter_371537\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, n, x;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">s = 0;</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter n = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;n);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 1; i &lt;= n; i++)</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter number %d : \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(x % 2 != 0) </code><code class=\"cpp keyword bold\">continue</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">s = s + x;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"S = %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ ví dụ này, tôi hướng dẫn các bạn cách dùng lệnh <strong>continue</strong>. Lệnh này không thoát khỏi vòn lặp nhưng lại có tác dụng là quay trở về biểu thức 3 mà không làm các lệnh đằng sau nó. Ở đây nếu x nhập vào không chẵn thì bỏ qua lệnh cộng dồn s mà chạy đến lệnh tăng i ngay.\r\n<blockquote><strong>Bài tập</strong>:\r\n<ol>\r\n 	<li>Viết chương trình nhập vào số n và in ra các ước của số n đó.</li>\r\n 	<li>Viết chương trình kiểm tra 1 số có là số nguyên tố không? Số nguyên tố là số nguyên dương có duy nhất 2 ước là 1 và chính nó. Ví dụ số 2, 3, 5, …</li>\r\n 	<li>Viết chương trình kiểm tra 1 số có là số hoàn hảo không? Số hoàn hảo là số nguyên dương có tổng các ước bằng 2 lần nó. VD số 6 có các ước 1, 2, 3, 6 và tổng 1 + 2 + 3 + 6 = 12 (bằng 2 lần 6).</li>\r\n 	<li>Viết chương trình tính S = 1 + 1/2 + 1/3 + … + 1/N</li>\r\n 	<li>Viết chương trình tính tổng bình phương các số lẻ từ 1 đến n.</li>\r\n 	<li>Viết chương trình tính n! biết n! = 1.2.3.4…n</li>\r\n 	<li>Viết chương trình tính số thứ n của dãy fibonaci biết dãy f(n) = f(n-1) + f(n-2), n &gt; 2 và f(1) = 1, f(2) = 1.</li>\r\n 	<li>Viết chương trình nhập vào chiều dài, chiều rộng của hình chữ nhật. Vẽ hình chữ nhật dấu sao (*) có kích thước đã nhập.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C : Bài 6 – Vòng lặp for trong C', '', 'inherit', 'closed', 'closed', '', '159-revision-v1', '', '', '2018-12-10 01:18:28', '2018-12-09 18:18:28', '', 159, 'http://localhost/web-teach-code/blog/2018/12/10/159-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(161, 1, '2018-12-10 01:19:15', '2018-12-09 18:19:15', 'Ở bài trước, chúng ta đã làm quen với vòng lặp for với những tiện ích cho chúng ta việc lặp đi lặp lại nhiều lần. Bài này chúng ta tiếp tục tìm hiểu 2 loại vòng lặp khác có chức năng tương tự vòng lặp for nhưng cách dùng có khác một chút là vòng lặp <strong>while</strong> và <strong>do…while</strong>.\r\n\r\nCác bạn có để ý đến các trang web mà chúng ta cần đăng nhập? Đơn giản như facebook hoặc google. Nếu các bạn viết sai username hoặc password thì sẽ không thể đăng nhập được dù cho bạn nhập bao nhiêu lần đi nữa. Cứ sai là họ bắt chúng ta nhập lại. Rõ ràng ở vòng for chúng ta thường nhìn thấy vòng for lặp một số lần cụ thể như từ 1 đến n,… Nhưng việc đăng nhập thì không biết bao nhiêu lần mới được mà chỉ có là đúng thì mới kết thúc. Đó là cách hoạt động của vòng lặp while và do…while.\r\n<h2><span id=\"1_Vong_lap_while\">1. Vòng lặp while</span></h2>\r\n<h3><span id=\"Cau_truc_vong_lap_while\">Cấu trúc vòng lặp while</span></h3>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/chap7_while.png?w=780&amp;ssl=1\" alt=\"Vòng lặp while\" width=\"776\" height=\"321\" /></center><center><em>Cấu trúc, lưu đồ và cách hoạt động vòng lặp while</em></center>\r\n<h3><span id=\"Vi_du_1\">Ví dụ 1:</span></h3>\r\nViết chương trình nhập vào số bất kỳ đến khi nhập số âm thì dừng lại.\r\n<div>\r\n<div id=\"highlighter_655844\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 1; </code><code class=\"cpp comments\">// make x &gt;= 0 is true -&gt; while will run</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code> <code class=\"cpp plain\">(x &gt;= 0)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao mot so : \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ok, Program is finish!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Lưu ý:</strong> Ở trên mình vừa khai báo vừa gán giá trị cho biến x là 1 để đảm bảo rằng ban đầu vòng lặp while có điều kiện đúng để thực hiện được các lệnh bên trong, sau đó mỗi lần nhập thì nhập gì x nhận cái đó. Nếu không khởi gán bằng 1 thì có thể x sẽ nhận 1 giá trị ngẫu nhiên và có thể âm làm cho vòng lặp không thực hiện được.\r\n\r\n<strong>Kết quả:</strong>\r\n<blockquote>Nhap vao mot so : 4\r\nNhap vao mot so : 5\r\nNhap vao mot so : 2\r\nNhap vao mot so : 0\r\nNhap vao mot so : 1\r\nNhap vao mot so : -3\r\nOk, Program is finish!</blockquote>\r\n<h3><span id=\"Vi_du_2\">Ví dụ 2:</span></h3>\r\nIn các số từ 9 về 0 theo chiều giảm dần. Các số nằm trên 1 dòng.\r\n<blockquote>Thông thường các bạn sẽ nghĩ đến vòng lặp for. Ok chuẩn. Nhưng ở đây mình muốn các bạn biết cách dùng while cũng làm được.</blockquote>\r\n<div>\r\n<div id=\"highlighter_435014\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 10;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code> <code class=\"cpp plain\">(n--)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \"</code><code class=\"cpp plain\">, n);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThật đơn giản. Tuy nhiên cần chú ý một chút là điều kiện ở vòng lặp while trong code trên là gì?\r\n\r\nĐó là n có khác 0 hay không. khi viết <code>while (n--)</code> tức là kiểm tra xem n có khác 0 hay không hoặc có thể hiểu trong khi n đúng (đúng là khác 0) thì làm công việc in ra số n. Còn việc <code>n--</code> thì chỉ là trừ đi n 1 đơn vị thôi. Và có một lưu ý quan trọng trong kết quả:\r\n<blockquote>9 8 7 6 5 4 3 2 1 0</blockquote>\r\nTại sao số 0 vẫn được in ra trong khi theo phân tích thì khi n = 0 tức điều kiện sai, sai thì phải thoát chứ? Đó là do biểu thức <code>n--</code> của chúng ta. Khi n = 1 thì <code>n--</code> sẽ làm n có giá trị 0. Nhưng do biểu thức trừ ở phía sau n nên nó thực hiện sau lệnh kiểm tra n = 0. Tức là khi n = 1 thì biểu thức <code>while(n--)</code> vẫn đúng và sau đó n mới bị giảm về 0 và thực hiện lệnh in, do vậy khi in ra sẽ in cả số 0.\r\n<h2><span id=\"2_Vong_lap_do8230while\">2. Vòng lặp do…while</span></h2>\r\n<h3><span id=\"Cau_truc_vong_lap_do8230while\">Cấu trúc vòng lặp do…while</span></h3>\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2018/01/chap7_do_while.png?w=780&amp;ssl=1\" alt=\"Vòng lặp do...while\" width=\"776\" height=\"346\" /></center><center><em>Cấu trúc, lưu đồ và cách hoạt động vòng lặp do…while</em></center>\r\n<h3><span id=\"Vi_du_1-2\">Ví dụ 1</span></h3>\r\nLưu trước mật khẩu facebook của bạn. Hãy viết chương trình nhập vào mật khẩu để đăng nhập.\r\n<div>\r\n<div id=\"highlighter_999191\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt; // for strcmp function</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">p[20] = </code><code class=\"cpp string\">\"Iloveyou\"</code><code class=\"cpp plain\">;      </code><code class=\"cpp comments\">// pass saved</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">pass[20];              </code><code class=\"cpp comments\">// pass must enter</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">do</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter your password: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(pass);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">while</code> <code class=\"cpp plain\">( </code><code class=\"cpp functions bold\">strcmp</code><code class=\"cpp plain\">(p, pass) != 0);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ok. You are login success!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Enter your password: quan\r\nEnter your password: nguyenvanquan\r\nEnter your password: iloveyou\r\nEnter your password: Iloveyou\r\nOk. You are login success!</blockquote>\r\n<strong>Lưu ý:</strong> Ở code trên, mình có dùng hàm <strong>strcmp để so sánh 2 chuỗi</strong>, hàm này nằm trong thư viện <strong>string.h</strong>\r\n\r\nHàm strcmp so sánh chuỗi p và chuỗi pass và cho ta kết quả:\r\n<ul>\r\n 	<li>1 Nếu p lớn hơn pass</li>\r\n 	<li>0 Nếu p giống pass</li>\r\n 	<li>-1 Nếu p nhỏ hơn pass</li>\r\n</ul>\r\nDo vậy chúng ta có điều kiện <code>strcmp(p, pass) != 0</code> tức là 2 chuỗi này không giống nhau.\r\n\r\nChi tiết cách so sánh 2 chuỗi, các bạn tham khảo tại bài <a href=\"https://cachhoc.net/2018/01/19/lap-trinh-c-bai-7-vong-lap-trong-c/2018/01/19/sanh-chuoi-trong-c-strcmp/\">So sánh 2 chuỗi trong C – strcmp</a>\r\n<h2><span id=\"3_So_sanh_cach_dung_vong_lap_for_while_do8230while\">3. So sánh, cách dùng vòng lặp for, while, do…while</span></h2>\r\n<ul>\r\n 	<li>Vòng lặp for thường sử dụng khi biết được số lần lặp xác định.</li>\r\n 	<li>Vòng lặp thường while, do…while sử dụng khi không biết rõ số lần lặp</li>\r\n 	<li>Khi gọi vòng lặp while, do…while, nếu điều kiện sai, vòng lặp while sẽ không được thực hiện lần nào nhưng vòng lặp do…while thực hiện được 1 lần.</li>\r\n</ul>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình lặp lại nhiều lần công việc nhập một ký tự và in ra mã ASCII của ký tự đó, khi nào nhập số 0 thì dừng. ( Tham khảo <a href=\"https://cachhoc.net/2018/01/19/lap-trinh-c-bai-7-vong-lap-trong-c/2013/08/22/bang-ma-ascii-ascii-table/\">bảng mã ACSII</a> )</li>\r\n 	<li>Viết chương trình in ra chữ: “Em có yêu anh không?”, Và cho người dùng nhập c (có) hoặc k (không). Khi nào nhập c thì dừng chương trình, còn nếu nhập k thì cứ bắt nhập lại ^^. (Gửi cho bạn gái/trai)</li>\r\n 	<li>Nhập vào 1 số, phân tích số đó thành tích các thừa số nguyên tố.</li>\r\n 	<li>Viết chương trình tìm USCLN, BSCNN của 2 số.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 7 – Vòng lặp while, do…while trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-7-vong-lap-while-dowhile-trong-c', '', '', '2018-12-10 04:08:38', '2018-12-09 21:08:38', '', 0, 'http://localhost/web-teach-code/blog/?p=161', 0, 'post', '', 0),
(162, 1, '2018-12-10 01:19:15', '2018-12-09 18:19:15', 'Ở bài trước, chúng ta đã làm quen với vòng lặp for với những tiện ích cho chúng ta việc lặp đi lặp lại nhiều lần. Bài này chúng ta tiếp tục tìm hiểu 2 loại vòng lặp khác có chức năng tương tự vòng lặp for nhưng cách dùng có khác một chút là vòng lặp <strong>while</strong> và <strong>do…while</strong>.\r\n\r\nCác bạn có để ý đến các trang web mà chúng ta cần đăng nhập? Đơn giản như facebook hoặc google. Nếu các bạn viết sai username hoặc password thì sẽ không thể đăng nhập được dù cho bạn nhập bao nhiêu lần đi nữa. Cứ sai là họ bắt chúng ta nhập lại. Rõ ràng ở vòng for chúng ta thường nhìn thấy vòng for lặp một số lần cụ thể như từ 1 đến n,… Nhưng việc đăng nhập thì không biết bao nhiêu lần mới được mà chỉ có là đúng thì mới kết thúc. Đó là cách hoạt động của vòng lặp while và do…while.\r\n<h2><span id=\"1_Vong_lap_while\">1. Vòng lặp while</span></h2>\r\n<h3><span id=\"Cau_truc_vong_lap_while\">Cấu trúc vòng lặp while</span></h3>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/chap7_while.png?w=780&amp;ssl=1\" alt=\"Vòng lặp while\" width=\"776\" height=\"321\" /></center><center><em>Cấu trúc, lưu đồ và cách hoạt động vòng lặp while</em></center>\r\n<h3><span id=\"Vi_du_1\">Ví dụ 1:</span></h3>\r\nViết chương trình nhập vào số bất kỳ đến khi nhập số âm thì dừng lại.\r\n<div>\r\n<div id=\"highlighter_655844\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 1; </code><code class=\"cpp comments\">// make x &gt;= 0 is true -&gt; while will run</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code> <code class=\"cpp plain\">(x &gt;= 0)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao mot so : \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ok, Program is finish!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Lưu ý:</strong> Ở trên mình vừa khai báo vừa gán giá trị cho biến x là 1 để đảm bảo rằng ban đầu vòng lặp while có điều kiện đúng để thực hiện được các lệnh bên trong, sau đó mỗi lần nhập thì nhập gì x nhận cái đó. Nếu không khởi gán bằng 1 thì có thể x sẽ nhận 1 giá trị ngẫu nhiên và có thể âm làm cho vòng lặp không thực hiện được.\r\n\r\n<strong>Kết quả:</strong>\r\n<blockquote>Nhap vao mot so : 4\r\nNhap vao mot so : 5\r\nNhap vao mot so : 2\r\nNhap vao mot so : 0\r\nNhap vao mot so : 1\r\nNhap vao mot so : -3\r\nOk, Program is finish!</blockquote>\r\n<h3><span id=\"Vi_du_2\">Ví dụ 2:</span></h3>\r\nIn các số từ 9 về 0 theo chiều giảm dần. Các số nằm trên 1 dòng.\r\n<blockquote>Thông thường các bạn sẽ nghĩ đến vòng lặp for. Ok chuẩn. Nhưng ở đây mình muốn các bạn biết cách dùng while cũng làm được.</blockquote>\r\n<div>\r\n<div id=\"highlighter_435014\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 10;</code></div>\r\n<div class=\"line number6 index5 alt1\"></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code> <code class=\"cpp plain\">(n--)</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \"</code><code class=\"cpp plain\">, n);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThật đơn giản. Tuy nhiên cần chú ý một chút là điều kiện ở vòng lặp while trong code trên là gì?\r\n\r\nĐó là n có khác 0 hay không. khi viết <code>while (n--)</code> tức là kiểm tra xem n có khác 0 hay không hoặc có thể hiểu trong khi n đúng (đúng là khác 0) thì làm công việc in ra số n. Còn việc <code>n--</code> thì chỉ là trừ đi n 1 đơn vị thôi. Và có một lưu ý quan trọng trong kết quả:\r\n<blockquote>9 8 7 6 5 4 3 2 1 0</blockquote>\r\nTại sao số 0 vẫn được in ra trong khi theo phân tích thì khi n = 0 tức điều kiện sai, sai thì phải thoát chứ? Đó là do biểu thức <code>n--</code> của chúng ta. Khi n = 1 thì <code>n--</code> sẽ làm n có giá trị 0. Nhưng do biểu thức trừ ở phía sau n nên nó thực hiện sau lệnh kiểm tra n = 0. Tức là khi n = 1 thì biểu thức <code>while(n--)</code> vẫn đúng và sau đó n mới bị giảm về 0 và thực hiện lệnh in, do vậy khi in ra sẽ in cả số 0.\r\n<h2><span id=\"2_Vong_lap_do8230while\">2. Vòng lặp do…while</span></h2>\r\n<h3><span id=\"Cau_truc_vong_lap_do8230while\">Cấu trúc vòng lặp do…while</span></h3>\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2018/01/chap7_do_while.png?w=780&amp;ssl=1\" alt=\"Vòng lặp do...while\" width=\"776\" height=\"346\" /></center><center><em>Cấu trúc, lưu đồ và cách hoạt động vòng lặp do…while</em></center>\r\n<h3><span id=\"Vi_du_1-2\">Ví dụ 1</span></h3>\r\nLưu trước mật khẩu facebook của bạn. Hãy viết chương trình nhập vào mật khẩu để đăng nhập.\r\n<div>\r\n<div id=\"highlighter_999191\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt; // for strcmp function</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">p[20] = </code><code class=\"cpp string\">\"Iloveyou\"</code><code class=\"cpp plain\">;      </code><code class=\"cpp comments\">// pass saved</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">pass[20];              </code><code class=\"cpp comments\">// pass must enter</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">do</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter your password: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(pass);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">while</code> <code class=\"cpp plain\">( </code><code class=\"cpp functions bold\">strcmp</code><code class=\"cpp plain\">(p, pass) != 0);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ok. You are login success!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Enter your password: quan\r\nEnter your password: nguyenvanquan\r\nEnter your password: iloveyou\r\nEnter your password: Iloveyou\r\nOk. You are login success!</blockquote>\r\n<strong>Lưu ý:</strong> Ở code trên, mình có dùng hàm <strong>strcmp để so sánh 2 chuỗi</strong>, hàm này nằm trong thư viện <strong>string.h</strong>\r\n\r\nHàm strcmp so sánh chuỗi p và chuỗi pass và cho ta kết quả:\r\n<ul>\r\n 	<li>1 Nếu p lớn hơn pass</li>\r\n 	<li>0 Nếu p giống pass</li>\r\n 	<li>-1 Nếu p nhỏ hơn pass</li>\r\n</ul>\r\nDo vậy chúng ta có điều kiện <code>strcmp(p, pass) != 0</code> tức là 2 chuỗi này không giống nhau.\r\n\r\nChi tiết cách so sánh 2 chuỗi, các bạn tham khảo tại bài <a href=\"https://cachhoc.net/2018/01/19/lap-trinh-c-bai-7-vong-lap-trong-c/2018/01/19/sanh-chuoi-trong-c-strcmp/\">So sánh 2 chuỗi trong C – strcmp</a>\r\n<h2><span id=\"3_So_sanh_cach_dung_vong_lap_for_while_do8230while\">3. So sánh, cách dùng vòng lặp for, while, do…while</span></h2>\r\n<ul>\r\n 	<li>Vòng lặp for thường sử dụng khi biết được số lần lặp xác định.</li>\r\n 	<li>Vòng lặp thường while, do…while sử dụng khi không biết rõ số lần lặp</li>\r\n 	<li>Khi gọi vòng lặp while, do…while, nếu điều kiện sai, vòng lặp while sẽ không được thực hiện lần nào nhưng vòng lặp do…while thực hiện được 1 lần.</li>\r\n</ul>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình lặp lại nhiều lần công việc nhập một ký tự và in ra mã ASCII của ký tự đó, khi nào nhập số 0 thì dừng. ( Tham khảo <a href=\"https://cachhoc.net/2018/01/19/lap-trinh-c-bai-7-vong-lap-trong-c/2013/08/22/bang-ma-ascii-ascii-table/\">bảng mã ACSII</a> )</li>\r\n 	<li>Viết chương trình in ra chữ: “Em có yêu anh không?”, Và cho người dùng nhập c (có) hoặc k (không). Khi nào nhập c thì dừng chương trình, còn nếu nhập k thì cứ bắt nhập lại ^^. (Gửi cho bạn gái/trai)</li>\r\n 	<li>Nhập vào 1 số, phân tích số đó thành tích các thừa số nguyên tố.</li>\r\n 	<li>Viết chương trình tìm USCLN, BSCNN của 2 số.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 7 – Vòng lặp while, do…while trong C', '', 'inherit', 'closed', 'closed', '', '161-revision-v1', '', '', '2018-12-10 01:19:15', '2018-12-09 18:19:15', '', 161, 'http://localhost/web-teach-code/blog/2018/12/10/161-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(163, 1, '2018-12-10 01:19:51', '2018-12-09 18:19:51', '<h2><span id=\"1_Mo_dau_ve_ham\">1. Mở đầu về hàm</span></h2>\r\nHãy nhập và chạy 2 ví dụ sau, quan sát kết quả và nhận xét.\r\n\r\n<strong>Ví dụ 1:</strong>\r\n<div>\r\n<div id=\"highlighter_100547\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g 1 about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">loiKhuyen()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Neu hoc nghiem tuc va cham chi thi ban se thay:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Khong co viec gi kho\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Chi so long khong ben\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dao nui va lap bien\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Quyet chi at lam nen\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hoc bai nay kho qua!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">loiKhuyen();</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hoc C kho qua!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">loiKhuyen();</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Hoc bai nay kho qua!\r\nNeu hoc nghiem tuc va cham chi thi ban se thay:\r\nKhong co viec gi kho\r\nChi so long khong ben\r\nDao nui va lap bien\r\nQuyet chi at lam nen\r\n\r\nHoc C kho qua!\r\nNeu hoc nghiem tuc va cham chi thi ban se thay:\r\nKhong co viec gi kho\r\nChi so long khong ben\r\nDao nui va lap bien\r\nQuyet chi at lam nen</blockquote>\r\n<strong>Ví dụ 2:</strong>\r\n<div>\r\n<div id=\"highlighter_139466\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g 2 about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">vechu(</code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">chu, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">soluong)</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; soluong; i++) {</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%c\"</code><code class=\"cpp plain\">, chu);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'h\'</code><code class=\"cpp plain\">, 20);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'a\'</code><code class=\"cpp plain\">, 30);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'h\'</code><code class=\"cpp plain\">, 12);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'a\'</code><code class=\"cpp plain\">, 5);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'p\'</code><code class=\"cpp plain\">, 10);</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>hhhhhhhhhhhhhhhhhhhh\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\nhhhhhhhhhhhh\r\naaaaa\r\npppppppppp</blockquote>\r\nNếu như trong chương trình có một số lệnh, hoặc công việc nào đó có dạng giống hoặc tương tự nhau cần lặp đi lặp lại nhiều lần ở các vị trí khác nhau, để khỏi mất thời gian và công sức sao chép những dãy lệnh đó ta nên tổ chức và xây dựng nó thành một đoạn lệnh, chỗ nào trong chương trình cần thực hiện công việc đó thì chỉ cần gọi đoạn lệnh đó mà thôi. Các đoạn lệnh đó gọi là hàm.\r\n\r\nHàm là một đoạn lệnh thực hiện một khối công việc được lặp đi lặp lại nhiều lần trong khi chạy chương trình hoặc dùng tách một khối công việc cụ thể để chương trình đỡ phức tạp.\r\n\r\n<strong>Trong ví dụ 1:</strong> Có 2 chương trình, 1 chương trình chính: <strong>main</strong> và 1 chương trình phụ: <strong>loiKhuyen</strong> không có tham số và không trả về giá trị nào nên kiểu dữ liệu của hàm được khai báo là void. Cả main và loiKhuyen đều gọi là hàm. Hàm main là hàm chính thực thi và chạy toàn bộ chương trình của ta. Hàm loiKhuyen thực hiện một số công việc (xuất ra 5 dòng chữ như trên). Trong hàm main ta có 2 chỗ gọi hàm loiKhuyen();\r\n\r\n<strong>Trong ví dụ 2</strong>: Cũng tương tự như ví dụ 1, nó gồm 2 hàm, 1 hàm chính là <strong>main</strong> và 1 hàm phụ, nhưng hàm phụ là <strong>vechu(char chu, int soluong)</strong>; có 2 tham số hình thức là <strong>chu</strong> thuộc kiểu char và <strong>soluong</strong> thuộc kiểu int. Hàm vechu cũng không có giá trị trả về nên kiểu dữ liệu của hàm được khai báo là void. Trong hàm main ta có 3 lần gọi hàm vechu với các tham số thực lần lượt như trong chương trình trên.\r\n<h2><span id=\"2_Nguyen_tac_hoat_dong_cua_ham\">2. Nguyên tắc hoạt động của hàm</span></h2>\r\n<ul>\r\n 	<li>Khi máy gặp lời gọi hàm ở bất kỳ chỗ nào đó thì hàm bắt đầu được thực hiện, tức sẽ rời chỗ đó để đi đến hàm được gọi.</li>\r\n 	<li>Nếu là hàm có tham số thì máy sẽ thực hiện truyền tham số thực cho các tham số hình thức tương ứng trong hàm.</li>\r\n 	<li>Máy bắt đầu thực hiện lần lượt các câu lệnh trong thân hàm đến khi nào lệnh reuturn hoặc dấu } của hàm thì dừng lại thoát khỏi hàm trở về chương trình đã gọi nó và thực hiện tiếp các câu lệnh của chương trình này.</li>\r\n 	<li>Nếu hàm trả về giá trị thì giá trị của biểu thức return trong hàm sẽ là giá trị của hàm.</li>\r\n</ul>\r\nLưu ý: Khi khai báo hàm <strong><em>void vechu(char chu, int soluong)</em></strong> thì <strong><em>chu và soluong là các tham số hình thức</em></strong>, còn khi gọi hàm <strong><em>vechu(‘h’, 20);</em></strong> thì <strong><em>‘h’ và 20 là các tham số thực sự</em></strong>.\r\n<h2><span id=\"3_Cau_truc_cua_ham\">3. Cấu trúc của hàm</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nChúng ta có cấu trúc khai báo hàm như sau:\r\n<div>\r\n<div id=\"highlighter_5759\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">KieuTraVe TenHam(Cac tham so)</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ThanHam;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTên hàm được đặt theo quy tắc đặt tên biến.\r\n<h2><span id=\"4_Cac_vi_du_ve_ham\">4. Các ví dụ về hàm</span></h2>\r\n<h3><span id=\"Vi_du_1_Ham_khong_tra_ve_gia_tri\">Ví dụ 1: Hàm không trả về giá trị</span></h3>\r\nỞ trên chúng ta đã có 2 ví dụ mở đầu đều là hàm không trả về giá trị và được khai báo có kiểu trả về là <strong>void</strong>.\r\n<h3><span id=\"Vi_du_2_Ham_co_gia_tri_tra_ve\">Ví dụ 2: Hàm có giá trị trả về</span></h3>\r\nXây dựng hàm tính n! và tính vài biểu thức giai thừa. Biết n! = 1.2.3…n\r\n<div>\r\n<div id=\"highlighter_610209\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">giaiThua(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">gt = 1;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 2; i &lt;= n; i++)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">gt *= i; </code><code class=\"cpp comments\">// &lt;=&gt; gt = gt * i</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">gt;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"5! = %ld \\n\"</code><code class=\"cpp plain\">, giaiThua(5));</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"6! + 1 = %ld \\n\"</code><code class=\"cpp plain\">, giaiThua(6) + 1);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>5! = 120\r\n6! + 1 = 721</blockquote>\r\nDo n! có thể là một số nguyên khá lớn nên hàm trả về giá trị là kiểu <strong>long</strong> (lớn hơn kiểu int – <a href=\"https://cachhoc.net/2014/12/12/lap-trinh-c-bai-6-ham/.2018/01/10/lap-trinh-c-bai-2-cac-thanh-phan-trong-c/#4_Kieu_du_lieu\">Xem lại Các kiểu dữ liệu trong C</a>). Lệnh <strong>return gt</strong> nghĩa là trả về biến gt, gt phải có cùng kiểu dữ liệu với kiểu dữ liệu của hàm (cùng là long).\r\n\r\nTrong VD này hàm giaiThua trả về giá trị là giai thừa của số n được truyền vào vì vậy nó có thể được coi như 1 biến và được sử dụng trong các biểu thức, sử dụng để in ra luôn kết quả. Khi gặp hàm ở bất ký đâu thì nó sẽ truyền 1 tham số tương ứng cho hàm và trả về giá trị qua lệnh return.\r\n<h3><span id=\"Vi_du_3_Ham_kiem_tra\">Ví dụ 3: Hàm kiểm tra</span></h3>\r\nXây dựng hàm kiểm tra một số có là số đẹp không? Số đẹp là số chia hết cho 2 và chia hết cho 5.\r\n\r\nĐể làm bài này, chúng ta cần xác định là hàm này kiểm tra một số là số gì đó, do vậy ta cần trả về giá trị đúng (1) hoặc sai (0). Vậy nên hàm sẽ trả về kiểu số nguyên.\r\n<div>\r\n<div id=\"highlighter_632982\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">kiemTraChiaHet(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n)</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(n % 2 == 0 &amp;&amp; n % 5 == 0)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">1;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x;</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap x = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( kiemTraChiaHet(x) == 0)</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"day khong phai so dep @@\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code> <code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"day la so dep !!!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number26 index25 alt1\"></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ hàm kiemTraChiaHet, khi n chia hết cho 2 và cho 5, thì sẽ thực hiện lệnh <strong>return 1</strong>, khi thực hiện lệnh này tức là kết thúc hàm, không làm gì trong hàm nãy nữa dù đằng sau còn lệnh hay không. Nếu số n không chia hết cho 2 và cho 5 thì sẽ thực hiện lệnh <strong>return 0</strong>.\r\n<h3><span id=\"Vi_du_4_Cac_ham_goi_nhau\">Ví dụ 4: Các hàm gọi nhau</span></h3>\r\n<div>\r\n<div id=\"highlighter_664979\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max2(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b) </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">a &gt; b ? a : b;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max3(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c) </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">max2( max2(a, b), c);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 7, b = 13, c = 4;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So lon nhat la %d \\n\"</code><code class=\"cpp plain\">, max3(a, b, c));</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>So lon nhat la 13</blockquote>\r\nỞ ví dụ này chúng ta xây dựng 2 hàm để tìm số lớn nhất của 2 số và 3 số. Trong hàm max2 chúng ta sử dụng <a href=\"https://cachhoc.net/2014/12/12/lap-trinh-c-bai-6-ham/2014/12/11/lap-trinh-c-bai-5-cau-truc-re-nhanh-if-else-switch-case-trong-c/#24_Toan_tu_dieu_kien_8211_If_else_rut_gon\">toán tử diều kiện</a> để tìm số lớn nhất trong 2 số. Trong hàm max3 ta đã gọi hàm max2 đến 2 lần để tìm số lớn nhất trong a, b rồi lấy số tìm được só sánh với c tìm ra số lớn nhất.\r\n\r\n<strong>Chú ý:</strong> Hàm khai báo sau được gọi các hàm đã khai báo trước nó nhưng các hàm khai báo trước không được gọi hàm khai báo sau. Tức là trong VD trên nếu ta xây dựng hàm max2 ở sau hàm max3 thì máy sẽ báo lỗi. Để khắc phục điều này chúng ta thường khai báo các hàm ở đầu chương trình sau đó chúng ta định nghĩa các hàm ở bất kỳ đâu trong chương trình đều được ta xét ví dụ tiếp:\r\n<h3><span id=\"Vi_du_5_Khai_bao_ham_truoc_khi_dinh_nghia_ham\">Ví dụ 5: Khai báo hàm trước khi định nghĩa hàm</span></h3>\r\n<div>\r\n<div id=\"highlighter_514195\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp comments\">// khai bao cac ham max2, max3, max4</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max2(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max3(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max4(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">d);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max3(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c) {</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">max2( max2(a, b), c);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max2(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b) {</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">a &gt; b ? a : b;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 7, b = 13, c = 4, d = 16;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So lon nhat trong a, b, c la %d\\n\"</code><code class=\"cpp plain\">, max3(a, b, c));</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So lon nhat trong a, b, c, d la %d\\n\"</code><code class=\"cpp plain\">, max4(a, b, c, d));</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max4(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">d) </code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">max2( max2(a, b), max2(c, d) );</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>So lon nhat trong a, b, c la 13\r\nSo lon nhat trong a, b, c, d la 16</blockquote>\r\nKhi làm việc chúng ta nên khai báo các hàm trước như thế này và định nghĩa sau. Như vậy chúng ta sẽ tránh được một số lỗi khi mà chúng ta muốn dùng các hàm trong nhau.\r\n\r\nTa đã biết các hàm có thể gọi lẫn nhau và một hàm cũng có thể gọi chính nó, đó là ta sử dụng hàm đệ quy.\r\n<h3><span id=\"Vi_du_6_Ham_de_quy\">Ví dụ 6: Hàm đệ quy</span></h3>\r\nTa đã biết công thức tính n! = 1.2.3…n. Tuy nhiên ta cũng có thể viết n! = (n-1)!.n. Trong cách viết này để tính n! chúng ta lại cần tính (n-1)!. Do vậy đây có thể gọi là biểu thức đệ quy và hàm cũng vậy, hàm gọi lại chính nó thì gọi là hàm đệ quy.\r\n<div>\r\n<div id=\"highlighter_332612\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">giaiThua(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(n == 0) </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">1; </code><code class=\"cpp comments\">// dieu kien dung</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">giaiThua(n-1) * n; </code><code class=\"cpp comments\">// loi goi chinh no</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() {</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d! = %d\"</code><code class=\"cpp plain\">,n, giaiThua(n));</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Lưu ý</strong> trong hàm đệ quy luôn luôn có 2 yếu tố là điều kiện dừng và lời gọi chính nó.\r\n<h3><span id=\"Vi_du_7_Dung_dan_huong_define_de_dinh_nghia_ham_don_gian\">Ví dụ 7: Dùng dẫn hướng #define để định nghĩa hàm đơn giản</span></h3>\r\n<div>\r\n<div id=\"highlighter_894287\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#define tong(x, y) x + y</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 5, b = 8;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d + %d = %d\"</code><code class=\"cpp plain\">,a, b, tong(a, b));</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nĐến đây chúng ta đã cơ bản nắm được về hàm, nhưng còn rất nhiều điều cần nói về hàm nữa, đặc biệt là hàm liên quan đến mảng và con trỏ. Chúng ta sẽ tiếp tục tìm hiều chúng ở các bài sau cùng với mảng và con trỏ.\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết hàm tính tổng S = 1+2+….+n.</li>\r\n 	<li>Viết các hàm kiểm tra số nguyên tố, số hoàn hảo.</li>\r\n 	<li>Nhập vào một dãy n số và thông báo có phải số nguyên tố, số hoàn hảo hay không.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 8 – Hàm trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-8-ham-trong-c', '', '', '2018-12-10 04:08:19', '2018-12-09 21:08:19', '', 0, 'http://localhost/web-teach-code/blog/?p=163', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(164, 1, '2018-12-10 01:19:51', '2018-12-09 18:19:51', '<h2><span id=\"1_Mo_dau_ve_ham\">1. Mở đầu về hàm</span></h2>\r\nHãy nhập và chạy 2 ví dụ sau, quan sát kết quả và nhận xét.\r\n\r\n<strong>Ví dụ 1:</strong>\r\n<div>\r\n<div id=\"highlighter_100547\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g 1 about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">loiKhuyen()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Neu hoc nghiem tuc va cham chi thi ban se thay:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Khong co viec gi kho\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Chi so long khong ben\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Dao nui va lap bien\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Quyet chi at lam nen\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hoc bai nay kho qua!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">loiKhuyen();</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hoc C kho qua!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">loiKhuyen();</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Hoc bai nay kho qua!\r\nNeu hoc nghiem tuc va cham chi thi ban se thay:\r\nKhong co viec gi kho\r\nChi so long khong ben\r\nDao nui va lap bien\r\nQuyet chi at lam nen\r\n\r\nHoc C kho qua!\r\nNeu hoc nghiem tuc va cham chi thi ban se thay:\r\nKhong co viec gi kho\r\nChi so long khong ben\r\nDao nui va lap bien\r\nQuyet chi at lam nen</blockquote>\r\n<strong>Ví dụ 2:</strong>\r\n<div>\r\n<div id=\"highlighter_139466\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g 2 about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">vechu(</code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">chu, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">soluong)</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; soluong; i++) {</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%c\"</code><code class=\"cpp plain\">, chu);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'h\'</code><code class=\"cpp plain\">, 20);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'a\'</code><code class=\"cpp plain\">, 30);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'h\'</code><code class=\"cpp plain\">, 12);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'a\'</code><code class=\"cpp plain\">, 5);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">vechu(</code><code class=\"cpp string\">\'p\'</code><code class=\"cpp plain\">, 10);</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>hhhhhhhhhhhhhhhhhhhh\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\nhhhhhhhhhhhh\r\naaaaa\r\npppppppppp</blockquote>\r\nNếu như trong chương trình có một số lệnh, hoặc công việc nào đó có dạng giống hoặc tương tự nhau cần lặp đi lặp lại nhiều lần ở các vị trí khác nhau, để khỏi mất thời gian và công sức sao chép những dãy lệnh đó ta nên tổ chức và xây dựng nó thành một đoạn lệnh, chỗ nào trong chương trình cần thực hiện công việc đó thì chỉ cần gọi đoạn lệnh đó mà thôi. Các đoạn lệnh đó gọi là hàm.\r\n\r\nHàm là một đoạn lệnh thực hiện một khối công việc được lặp đi lặp lại nhiều lần trong khi chạy chương trình hoặc dùng tách một khối công việc cụ thể để chương trình đỡ phức tạp.\r\n\r\n<strong>Trong ví dụ 1:</strong> Có 2 chương trình, 1 chương trình chính: <strong>main</strong> và 1 chương trình phụ: <strong>loiKhuyen</strong> không có tham số và không trả về giá trị nào nên kiểu dữ liệu của hàm được khai báo là void. Cả main và loiKhuyen đều gọi là hàm. Hàm main là hàm chính thực thi và chạy toàn bộ chương trình của ta. Hàm loiKhuyen thực hiện một số công việc (xuất ra 5 dòng chữ như trên). Trong hàm main ta có 2 chỗ gọi hàm loiKhuyen();\r\n\r\n<strong>Trong ví dụ 2</strong>: Cũng tương tự như ví dụ 1, nó gồm 2 hàm, 1 hàm chính là <strong>main</strong> và 1 hàm phụ, nhưng hàm phụ là <strong>vechu(char chu, int soluong)</strong>; có 2 tham số hình thức là <strong>chu</strong> thuộc kiểu char và <strong>soluong</strong> thuộc kiểu int. Hàm vechu cũng không có giá trị trả về nên kiểu dữ liệu của hàm được khai báo là void. Trong hàm main ta có 3 lần gọi hàm vechu với các tham số thực lần lượt như trong chương trình trên.\r\n<h2><span id=\"2_Nguyen_tac_hoat_dong_cua_ham\">2. Nguyên tắc hoạt động của hàm</span></h2>\r\n<ul>\r\n 	<li>Khi máy gặp lời gọi hàm ở bất kỳ chỗ nào đó thì hàm bắt đầu được thực hiện, tức sẽ rời chỗ đó để đi đến hàm được gọi.</li>\r\n 	<li>Nếu là hàm có tham số thì máy sẽ thực hiện truyền tham số thực cho các tham số hình thức tương ứng trong hàm.</li>\r\n 	<li>Máy bắt đầu thực hiện lần lượt các câu lệnh trong thân hàm đến khi nào lệnh reuturn hoặc dấu } của hàm thì dừng lại thoát khỏi hàm trở về chương trình đã gọi nó và thực hiện tiếp các câu lệnh của chương trình này.</li>\r\n 	<li>Nếu hàm trả về giá trị thì giá trị của biểu thức return trong hàm sẽ là giá trị của hàm.</li>\r\n</ul>\r\nLưu ý: Khi khai báo hàm <strong><em>void vechu(char chu, int soluong)</em></strong> thì <strong><em>chu và soluong là các tham số hình thức</em></strong>, còn khi gọi hàm <strong><em>vechu(‘h’, 20);</em></strong> thì <strong><em>‘h’ và 20 là các tham số thực sự</em></strong>.\r\n<h2><span id=\"3_Cau_truc_cua_ham\">3. Cấu trúc của hàm</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nChúng ta có cấu trúc khai báo hàm như sau:\r\n<div>\r\n<div id=\"highlighter_5759\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">KieuTraVe TenHam(Cac tham so)</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ThanHam;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTên hàm được đặt theo quy tắc đặt tên biến.\r\n<h2><span id=\"4_Cac_vi_du_ve_ham\">4. Các ví dụ về hàm</span></h2>\r\n<h3><span id=\"Vi_du_1_Ham_khong_tra_ve_gia_tri\">Ví dụ 1: Hàm không trả về giá trị</span></h3>\r\nỞ trên chúng ta đã có 2 ví dụ mở đầu đều là hàm không trả về giá trị và được khai báo có kiểu trả về là <strong>void</strong>.\r\n<h3><span id=\"Vi_du_2_Ham_co_gia_tri_tra_ve\">Ví dụ 2: Hàm có giá trị trả về</span></h3>\r\nXây dựng hàm tính n! và tính vài biểu thức giai thừa. Biết n! = 1.2.3…n\r\n<div>\r\n<div id=\"highlighter_610209\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">giaiThua(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">long</code> <code class=\"cpp plain\">gt = 1;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 2; i &lt;= n; i++)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">gt *= i; </code><code class=\"cpp comments\">// &lt;=&gt; gt = gt * i</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">gt;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"5! = %ld \\n\"</code><code class=\"cpp plain\">, giaiThua(5));</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"6! + 1 = %ld \\n\"</code><code class=\"cpp plain\">, giaiThua(6) + 1);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>5! = 120\r\n6! + 1 = 721</blockquote>\r\nDo n! có thể là một số nguyên khá lớn nên hàm trả về giá trị là kiểu <strong>long</strong> (lớn hơn kiểu int – <a href=\"https://cachhoc.net/2014/12/12/lap-trinh-c-bai-6-ham/.2018/01/10/lap-trinh-c-bai-2-cac-thanh-phan-trong-c/#4_Kieu_du_lieu\">Xem lại Các kiểu dữ liệu trong C</a>). Lệnh <strong>return gt</strong> nghĩa là trả về biến gt, gt phải có cùng kiểu dữ liệu với kiểu dữ liệu của hàm (cùng là long).\r\n\r\nTrong VD này hàm giaiThua trả về giá trị là giai thừa của số n được truyền vào vì vậy nó có thể được coi như 1 biến và được sử dụng trong các biểu thức, sử dụng để in ra luôn kết quả. Khi gặp hàm ở bất ký đâu thì nó sẽ truyền 1 tham số tương ứng cho hàm và trả về giá trị qua lệnh return.\r\n<h3><span id=\"Vi_du_3_Ham_kiem_tra\">Ví dụ 3: Hàm kiểm tra</span></h3>\r\nXây dựng hàm kiểm tra một số có là số đẹp không? Số đẹp là số chia hết cho 2 và chia hết cho 5.\r\n\r\nĐể làm bài này, chúng ta cần xác định là hàm này kiểm tra một số là số gì đó, do vậy ta cần trả về giá trị đúng (1) hoặc sai (0). Vậy nên hàm sẽ trả về kiểu số nguyên.\r\n<div>\r\n<div id=\"highlighter_632982\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">kiemTraChiaHet(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n)</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(n % 2 == 0 &amp;&amp; n % 5 == 0)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">1;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x;</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap x = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( kiemTraChiaHet(x) == 0)</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"day khong phai so dep @@\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code> <code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"day la so dep !!!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number26 index25 alt1\"></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ hàm kiemTraChiaHet, khi n chia hết cho 2 và cho 5, thì sẽ thực hiện lệnh <strong>return 1</strong>, khi thực hiện lệnh này tức là kết thúc hàm, không làm gì trong hàm nãy nữa dù đằng sau còn lệnh hay không. Nếu số n không chia hết cho 2 và cho 5 thì sẽ thực hiện lệnh <strong>return 0</strong>.\r\n<h3><span id=\"Vi_du_4_Cac_ham_goi_nhau\">Ví dụ 4: Các hàm gọi nhau</span></h3>\r\n<div>\r\n<div id=\"highlighter_664979\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max2(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b) </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">a &gt; b ? a : b;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max3(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c) </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">max2( max2(a, b), c);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 7, b = 13, c = 4;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So lon nhat la %d \\n\"</code><code class=\"cpp plain\">, max3(a, b, c));</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>So lon nhat la 13</blockquote>\r\nỞ ví dụ này chúng ta xây dựng 2 hàm để tìm số lớn nhất của 2 số và 3 số. Trong hàm max2 chúng ta sử dụng <a href=\"https://cachhoc.net/2014/12/12/lap-trinh-c-bai-6-ham/2014/12/11/lap-trinh-c-bai-5-cau-truc-re-nhanh-if-else-switch-case-trong-c/#24_Toan_tu_dieu_kien_8211_If_else_rut_gon\">toán tử diều kiện</a> để tìm số lớn nhất trong 2 số. Trong hàm max3 ta đã gọi hàm max2 đến 2 lần để tìm số lớn nhất trong a, b rồi lấy số tìm được só sánh với c tìm ra số lớn nhất.\r\n\r\n<strong>Chú ý:</strong> Hàm khai báo sau được gọi các hàm đã khai báo trước nó nhưng các hàm khai báo trước không được gọi hàm khai báo sau. Tức là trong VD trên nếu ta xây dựng hàm max2 ở sau hàm max3 thì máy sẽ báo lỗi. Để khắc phục điều này chúng ta thường khai báo các hàm ở đầu chương trình sau đó chúng ta định nghĩa các hàm ở bất kỳ đâu trong chương trình đều được ta xét ví dụ tiếp:\r\n<h3><span id=\"Vi_du_5_Khai_bao_ham_truoc_khi_dinh_nghia_ham\">Ví dụ 5: Khai báo hàm trước khi định nghĩa hàm</span></h3>\r\n<div>\r\n<div id=\"highlighter_514195\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp comments\">// khai bao cac ham max2, max3, max4</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max2(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max3(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max4(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">d);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max3(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c) {</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">max2( max2(a, b), c);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max2(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b) {</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">a &gt; b ? a : b;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 7, b = 13, c = 4, d = 16;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So lon nhat trong a, b, c la %d\\n\"</code><code class=\"cpp plain\">, max3(a, b, c));</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So lon nhat trong a, b, c, d la %d\\n\"</code><code class=\"cpp plain\">, max4(a, b, c, d));</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">max4(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">b, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">c, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">d) </code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">max2( max2(a, b), max2(c, d) );</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>So lon nhat trong a, b, c la 13\r\nSo lon nhat trong a, b, c, d la 16</blockquote>\r\nKhi làm việc chúng ta nên khai báo các hàm trước như thế này và định nghĩa sau. Như vậy chúng ta sẽ tránh được một số lỗi khi mà chúng ta muốn dùng các hàm trong nhau.\r\n\r\nTa đã biết các hàm có thể gọi lẫn nhau và một hàm cũng có thể gọi chính nó, đó là ta sử dụng hàm đệ quy.\r\n<h3><span id=\"Vi_du_6_Ham_de_quy\">Ví dụ 6: Hàm đệ quy</span></h3>\r\nTa đã biết công thức tính n! = 1.2.3…n. Tuy nhiên ta cũng có thể viết n! = (n-1)!.n. Trong cách viết này để tính n! chúng ta lại cần tính (n-1)!. Do vậy đây có thể gọi là biểu thức đệ quy và hàm cũng vậy, hàm gọi lại chính nó thì gọi là hàm đệ quy.\r\n<div>\r\n<div id=\"highlighter_332612\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about function in C - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">giaiThua(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(n == 0) </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">1; </code><code class=\"cpp comments\">// dieu kien dung</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">giaiThua(n-1) * n; </code><code class=\"cpp comments\">// loi goi chinh no</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() {</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d! = %d\"</code><code class=\"cpp plain\">,n, giaiThua(n));</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Lưu ý</strong> trong hàm đệ quy luôn luôn có 2 yếu tố là điều kiện dừng và lời gọi chính nó.\r\n<h3><span id=\"Vi_du_7_Dung_dan_huong_define_de_dinh_nghia_ham_don_gian\">Ví dụ 7: Dùng dẫn hướng #define để định nghĩa hàm đơn giản</span></h3>\r\n<div>\r\n<div id=\"highlighter_894287\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#define tong(x, y) x + y</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 5, b = 8;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d + %d = %d\"</code><code class=\"cpp plain\">,a, b, tong(a, b));</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nĐến đây chúng ta đã cơ bản nắm được về hàm, nhưng còn rất nhiều điều cần nói về hàm nữa, đặc biệt là hàm liên quan đến mảng và con trỏ. Chúng ta sẽ tiếp tục tìm hiều chúng ở các bài sau cùng với mảng và con trỏ.\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết hàm tính tổng S = 1+2+….+n.</li>\r\n 	<li>Viết các hàm kiểm tra số nguyên tố, số hoàn hảo.</li>\r\n 	<li>Nhập vào một dãy n số và thông báo có phải số nguyên tố, số hoàn hảo hay không.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 8 – Hàm trong C', '', 'inherit', 'closed', 'closed', '', '163-revision-v1', '', '', '2018-12-10 01:19:51', '2018-12-09 18:19:51', '', 163, 'http://localhost/web-teach-code/blog/2018/12/10/163-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(165, 1, '2018-12-10 01:22:11', '2018-12-09 18:22:11', 'Trước khi tìm hiểu về mảng trong C, chúng ta thử làm ví dụ mở đầu.\r\n<h2><span id=\"1_Vi_du_mo_dau\">1. Ví dụ mở đầu</span></h2>\r\nXét ví dụ nhập 5 số nguyên, xuất ra màn hình 5 số đó trên một dòng và tổng 5 số đó.\r\n<div>\r\n<div id=\"highlighter_199772\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, b, c, d, e; </code><code class=\"cpp comments\">// 5 bien</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap b = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;b);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap c = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;c);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap d = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;d);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap e = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;e);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tong  = a + b + c + d + e;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong cua %d + %d + %d + %d + %d = %d \\n\"</code><code class=\"cpp plain\">, a, b, c, d, e, tong);</code></div>\r\n<div class=\"line number25 index24 alt2\"></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Nhap a = 3\r\nNhap b = 5\r\nNhap c = 3\r\nNhap d = 6\r\nNhap e = 1\r\nTong cua 3 + 5 + 3 + 6 + 1 = 18</blockquote>\r\nNhư ví dụ ta thấy nhập hết 5 số và xuất chúng ta màn hình có vẻ rất vất vả và ta đã phải sử dụng quá nhiều biến, nếu số biến của chúng ta không phải là 5 mà là 50, 500,… thì việc này quả là rất khó khăn. Để khắc phục điều này chúng ta hãy sử dụng kiểu mảng.\r\n\r\nMảng Là tập hợp các phần tử có cùng kiểu dữ liệu. Mảng có mảng 1 chiều, 2 chiều,… và mỗi kiểu dữ liệu thì có 1 kiểu mảng tương ứng (mảng nguyên, mảng thực, mảng ký tự (chuỗi)),… Ta chủ yếu xét về mảng 1 chiều và mảng 2 chiều.\r\n\r\nBây giờ chúng ta sẽ giải quyết lại ví dụ trên bằng cách sử dụng mảng 1 chiều.\r\n<h2><span id=\"2_Mang_1_chieu\">2. Mảng 1 chiều</span></h2>\r\n<h3><span id=\"21_Vi_du_tong_quan\">2.1 Ví dụ tổng quan</span></h3>\r\nCác bạn thử đọc và chạy chương trình này, sau đó hãy xem chi tiết ở dưới.\r\n<div>\r\n<div id=\"highlighter_436475\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5, i, s = 0;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n];</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// thuc hien nhap tung phan tu mang</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// thuc hien in cac phan tu cua mang ra man hinh</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\nMang da nhap \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// tinh tong cac so trong mang</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">s += a[i]; </code><code class=\"cpp comments\">// s = s + a[i]</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\nTong cac so trong mang: %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number30 index29 alt1\"></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<blockquote>Nhap a[0] = 3\r\nNhap a[1] = 4\r\nNhap a[2] = 6\r\nNhap a[3] = 2\r\nNhap a[4] = 7\r\nMang da nhap\r\n3 4 6 2 7\r\nTong cac so trong mang: 22</blockquote>\r\n<h3><span id=\"22_Cach_khai_bao_mang_1_chieu\">2.2 Cách khai báo mảng 1 chiều</span></h3>\r\n<code>KieuDuLieu TenMang [SoPhanTu];</code>\r\n\r\nVD: <code>int a[10];</code>\r\n\r\nMảng 1 chiều a gồm 10 phần tử thuộc kiểu nguyên. Sau khi khai báo ta có 1 mảng có dạng như sau:\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/mang-1-chieu-trong-c.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"673\" height=\"187\" /></center><center><em>Khai báo mảng a có 10 phần tử</em></center>\r\n<h3><span id=\"23_Cach_truy_xuat_den_cac_phan_tu_trong_mang\">2.3 Cách truy xuất đến các phần tử trong mảng</span></h3>\r\nSau khi mảng được khai báo, mỗi phần tử trong mảng đều có chỉ số để tham chiếu. Chỉ số bắt đầu từ 0 đến n-1 (với n là kích thước mảng). Trong ví dụ trên, ta khai báo mảng 10 phần tử thì chỉ số bắt đầu từ 0 đến 9.\r\nVà ta truy xuất qua cú pháp: <code>TenMang[ChiSo]</code>\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/truy-xuat-mang-trong-c.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"664\" height=\"140\" /></center><center><em>Truy xuất mảng trong C</em></center>\r\n<h3><span id=\"24_Cach_nhap_va_xuat_cac_phan_tu_cua_mang\">2.4 Cách nhập và xuất các phần tử của mảng</span></h3>\r\nĐể nhập dữ liệu cho các phần tử trong mảng ta cần duyệt tới từng phần tử trong mảng và tiến hành nhập bằng một vòng for\r\n<div>\r\n<div id=\"highlighter_589280\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nViệc xuất các phần tử trong mảng cũng được tiến hành tương tự:\r\n<div>\r\n<div id=\"highlighter_962593\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"25_Nhap_xuat_mang_su_dung_ham\">2.5 Nhập xuất mảng sử dụng hàm</span></h3>\r\nTrong nhiều bài toán, chúng ta phải nhập nhiều mảng, và xuất nhiều lần, khi đó hãy đưa nhập xuất vào hàm cho dễ dùng.\r\n<div>\r\n<div id=\"highlighter_632746\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// thuc hien nhap tung phan tu mang</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n];</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapMang(a, n);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n);</code></div>\r\n<div class=\"line number29 index28 alt2\"></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Lưu ý: Một mảng có mối quan hệ với 1 con trỏ, mảng có thế coi như 1 con trỏ nên khi truyền mảng vào hàm thì các phần tử của mảng sẽ bị ảnh hưởng nếu có sự thay đổi nào trong mảng.</strong>\r\n<h3><span id=\"26_Mot_vai_luu_y_khac\">2.6 Một vài lưu ý khác</span></h3>\r\nKhởi tạo mảng: Chúng ta có thể khởi tạo mảng trong quá trình khai báo ngay. VD: <code>float a [5] = {3.4, 5, 6, 7, 4,2}</code>\r\nVới cách khởi tạo này nếu ta khởi tạo vượt quá 5 phần tử máy sẽ báo lỗi, nếu thiếu phần tử nào thì phần tử đó nhận giá trị là 0.\r\nVD: <code>float a [5] = {3.4, 5, 7} =&gt; a[4] = a[5] = 0</code>.\r\nVD: <code>float a [5] = {3.4, 5, 7, 1, 2, 3}</code> =&gt; máy báo lỗi.\r\nNgoài ra chúng ta có cách khai báo và khởi tạo mảng chưa biết trước số lượng.\r\nVD: <code>int a[] = {3,6,2,5}</code> =&gt; Mảng có 4 phần tử nhận giá trị tương ứng.\r\nHoặc: <code>int a[];</code> =&gt; Thường sử dụng khi dùng mảng làm tham số hình thức trong hàm.\r\n<h2><span id=\"3_Mang_2_chieu\">3. Mảng 2 chiều</span></h2>\r\nChúng ta có thể coi nó như một ma trận. Các tính chất, cách khai báo, nhập xuất,… cũng tương tự như mảng 1 chiều.\r\n\r\n<code>KieuDuLieu TenMang [SoHang][SoCot];</code>\r\n\r\nVD khai báo: <code>int a[5][10];</code> =&gt; Mảng a gồm 5 hàng và 10 cột (mỗi hàng có 10 phần tử).\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/mang-2-chieu-trong-c1.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"563\" height=\"228\" /></center><center><em>Mảng 2 chiều trong C</em></center>\r\n<div>\r\n<div id=\"highlighter_399382\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#define MAX 10</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp comments\">// nhap mang n hang, m cot</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[MAX][MAX], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">m) </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, j;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0; j &lt; m; j++) {</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i, j);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i][j]);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp comments\">// xuat mang n hang, m cot</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[MAX][MAX], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">m) </code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, j;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0; j &lt; m; j++) {</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-3d\"</code><code class=\"cpp plain\">, a[i][j]);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong khi het 1 dong</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number28 index27 alt1\"></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 2, m = 3;</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[MAX][MAX];</code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapMang(a, n, m);</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n, m);</code></div>\r\n<div class=\"line number36 index35 alt1\"></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Chú ý:</strong> Thực chất trong bộ nhớ, các phần tử của mảng 2 chiều (và mảng nhiều chiều) được tổ chức như là nhiều mảng 1 chiều liên tiếp nhau, vì vậy ta có thể quy mảng 2 chiều thành mảng 1 chiều.\r\n\r\nchap9-luu-tru-mang-2-chieu-trong-c.png\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/luu-tru-mang-2-chieu-trong-c.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"776\" height=\"294\" /></center><center><em>Cách tổ chức, lưu trữ mảng 2 chiều trong C</em></center>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Nhập vào một mảng, tìm số lớn nhất và nhỏ nhất trong mảng đã nhập.</li>\r\n 	<li>Nhập vào một dãy số, in ra các vị trí số lớn nhất (có thể có nhiều vị trí).</li>\r\n 	<li>Nhập vào một dãy số là lượng mưa của các tháng liên tiếp trong năm. Thông báo ra các tháng có lượng mưa lớn hơn lượng mưa trung bình của các tháng đó.</li>\r\n 	<li>Nhập vào một dãy số, sắp xếp và in ra dãy số theo chiều tăng dần.</li>\r\n 	<li>Nhập vào một ma trận (mảng 2 chiều). In ra tổng của mỗi hàng trong ma trận đó.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 9 – Mảng trong C', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-9-mang-trong-c', '', '', '2018-12-10 04:08:12', '2018-12-09 21:08:12', '', 0, 'http://localhost/web-teach-code/blog/?p=165', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(166, 1, '2018-12-10 01:22:11', '2018-12-09 18:22:11', 'Trước khi tìm hiểu về mảng trong C, chúng ta thử làm ví dụ mở đầu.\r\n<h2><span id=\"1_Vi_du_mo_dau\">1. Ví dụ mở đầu</span></h2>\r\nXét ví dụ nhập 5 số nguyên, xuất ra màn hình 5 số đó trên một dòng và tổng 5 số đó.\r\n<div>\r\n<div id=\"highlighter_199772\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a, b, c, d, e; </code><code class=\"cpp comments\">// 5 bien</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap b = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;b);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap c = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;c);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap d = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;d);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap e = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;e);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">tong  = a + b + c + d + e;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong cua %d + %d + %d + %d + %d = %d \\n\"</code><code class=\"cpp plain\">, a, b, c, d, e, tong);</code></div>\r\n<div class=\"line number25 index24 alt2\"></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Nhap a = 3\r\nNhap b = 5\r\nNhap c = 3\r\nNhap d = 6\r\nNhap e = 1\r\nTong cua 3 + 5 + 3 + 6 + 1 = 18</blockquote>\r\nNhư ví dụ ta thấy nhập hết 5 số và xuất chúng ta màn hình có vẻ rất vất vả và ta đã phải sử dụng quá nhiều biến, nếu số biến của chúng ta không phải là 5 mà là 50, 500,… thì việc này quả là rất khó khăn. Để khắc phục điều này chúng ta hãy sử dụng kiểu mảng.\r\n\r\nMảng Là tập hợp các phần tử có cùng kiểu dữ liệu. Mảng có mảng 1 chiều, 2 chiều,… và mỗi kiểu dữ liệu thì có 1 kiểu mảng tương ứng (mảng nguyên, mảng thực, mảng ký tự (chuỗi)),… Ta chủ yếu xét về mảng 1 chiều và mảng 2 chiều.\r\n\r\nBây giờ chúng ta sẽ giải quyết lại ví dụ trên bằng cách sử dụng mảng 1 chiều.\r\n<h2><span id=\"2_Mang_1_chieu\">2. Mảng 1 chiều</span></h2>\r\n<h3><span id=\"21_Vi_du_tong_quan\">2.1 Ví dụ tổng quan</span></h3>\r\nCác bạn thử đọc và chạy chương trình này, sau đó hãy xem chi tiết ở dưới.\r\n<div>\r\n<div id=\"highlighter_436475\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5, i, s = 0;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n];</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// thuc hien nhap tung phan tu mang</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// thuc hien in cac phan tu cua mang ra man hinh</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\nMang da nhap \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// tinh tong cac so trong mang</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">s += a[i]; </code><code class=\"cpp comments\">// s = s + a[i]</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\nTong cac so trong mang: %d\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number30 index29 alt1\"></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<blockquote>Nhap a[0] = 3\r\nNhap a[1] = 4\r\nNhap a[2] = 6\r\nNhap a[3] = 2\r\nNhap a[4] = 7\r\nMang da nhap\r\n3 4 6 2 7\r\nTong cac so trong mang: 22</blockquote>\r\n<h3><span id=\"22_Cach_khai_bao_mang_1_chieu\">2.2 Cách khai báo mảng 1 chiều</span></h3>\r\n<code>KieuDuLieu TenMang [SoPhanTu];</code>\r\n\r\nVD: <code>int a[10];</code>\r\n\r\nMảng 1 chiều a gồm 10 phần tử thuộc kiểu nguyên. Sau khi khai báo ta có 1 mảng có dạng như sau:\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/mang-1-chieu-trong-c.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"673\" height=\"187\" /></center><center><em>Khai báo mảng a có 10 phần tử</em></center>\r\n<h3><span id=\"23_Cach_truy_xuat_den_cac_phan_tu_trong_mang\">2.3 Cách truy xuất đến các phần tử trong mảng</span></h3>\r\nSau khi mảng được khai báo, mỗi phần tử trong mảng đều có chỉ số để tham chiếu. Chỉ số bắt đầu từ 0 đến n-1 (với n là kích thước mảng). Trong ví dụ trên, ta khai báo mảng 10 phần tử thì chỉ số bắt đầu từ 0 đến 9.\r\nVà ta truy xuất qua cú pháp: <code>TenMang[ChiSo]</code>\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/truy-xuat-mang-trong-c.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"664\" height=\"140\" /></center><center><em>Truy xuất mảng trong C</em></center>\r\n<h3><span id=\"24_Cach_nhap_va_xuat_cac_phan_tu_cua_mang\">2.4 Cách nhập và xuất các phần tử của mảng</span></h3>\r\nĐể nhập dữ liệu cho các phần tử trong mảng ta cần duyệt tới từng phần tử trong mảng và tiến hành nhập bằng một vòng for\r\n<div>\r\n<div id=\"highlighter_589280\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nViệc xuất các phần tử trong mảng cũng được tiến hành tương tự:\r\n<div>\r\n<div id=\"highlighter_962593\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"25_Nhap_xuat_mang_su_dung_ham\">2.5 Nhập xuất mảng sử dụng hàm</span></h3>\r\nTrong nhiều bài toán, chúng ta phải nhập nhiều mảng, và xuất nhiều lần, khi đó hãy đưa nhập xuất vào hàm cho dễ dùng.\r\n<div>\r\n<div id=\"highlighter_632746\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// thuc hien nhap tung phan tu mang</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n];</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapMang(a, n);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n);</code></div>\r\n<div class=\"line number29 index28 alt2\"></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Lưu ý: Một mảng có mối quan hệ với 1 con trỏ, mảng có thế coi như 1 con trỏ nên khi truyền mảng vào hàm thì các phần tử của mảng sẽ bị ảnh hưởng nếu có sự thay đổi nào trong mảng.</strong>\r\n<h3><span id=\"26_Mot_vai_luu_y_khac\">2.6 Một vài lưu ý khác</span></h3>\r\nKhởi tạo mảng: Chúng ta có thể khởi tạo mảng trong quá trình khai báo ngay. VD: <code>float a [5] = {3.4, 5, 6, 7, 4,2}</code>\r\nVới cách khởi tạo này nếu ta khởi tạo vượt quá 5 phần tử máy sẽ báo lỗi, nếu thiếu phần tử nào thì phần tử đó nhận giá trị là 0.\r\nVD: <code>float a [5] = {3.4, 5, 7} =&gt; a[4] = a[5] = 0</code>.\r\nVD: <code>float a [5] = {3.4, 5, 7, 1, 2, 3}</code> =&gt; máy báo lỗi.\r\nNgoài ra chúng ta có cách khai báo và khởi tạo mảng chưa biết trước số lượng.\r\nVD: <code>int a[] = {3,6,2,5}</code> =&gt; Mảng có 4 phần tử nhận giá trị tương ứng.\r\nHoặc: <code>int a[];</code> =&gt; Thường sử dụng khi dùng mảng làm tham số hình thức trong hàm.\r\n<h2><span id=\"3_Mang_2_chieu\">3. Mảng 2 chiều</span></h2>\r\nChúng ta có thể coi nó như một ma trận. Các tính chất, cách khai báo, nhập xuất,… cũng tương tự như mảng 1 chiều.\r\n\r\n<code>KieuDuLieu TenMang [SoHang][SoCot];</code>\r\n\r\nVD khai báo: <code>int a[5][10];</code> =&gt; Mảng a gồm 5 hàng và 10 cột (mỗi hàng có 10 phần tử).\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/mang-2-chieu-trong-c1.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"563\" height=\"228\" /></center><center><em>Mảng 2 chiều trong C</em></center>\r\n<div>\r\n<div id=\"highlighter_399382\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about array - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#define MAX 10</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp comments\">// nhap mang n hang, m cot</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[MAX][MAX], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">m) </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, j;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0; j &lt; m; j++) {</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i, j);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i][j]);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp comments\">// xuat mang n hang, m cot</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[MAX][MAX], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">m) </code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, j;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) {</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0; j &lt; m; j++) {</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-3d\"</code><code class=\"cpp plain\">, a[i][j]);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong khi het 1 dong</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number28 index27 alt1\"></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 2, m = 3;</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[MAX][MAX];</code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapMang(a, n, m);</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n, m);</code></div>\r\n<div class=\"line number36 index35 alt1\"></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Chú ý:</strong> Thực chất trong bộ nhớ, các phần tử của mảng 2 chiều (và mảng nhiều chiều) được tổ chức như là nhiều mảng 1 chiều liên tiếp nhau, vì vậy ta có thể quy mảng 2 chiều thành mảng 1 chiều.\r\n\r\nchap9-luu-tru-mang-2-chieu-trong-c.png\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/luu-tru-mang-2-chieu-trong-c.png?w=780&amp;ssl=1\" alt=\"Mảng 1 chiều\" width=\"776\" height=\"294\" /></center><center><em>Cách tổ chức, lưu trữ mảng 2 chiều trong C</em></center>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Nhập vào một mảng, tìm số lớn nhất và nhỏ nhất trong mảng đã nhập.</li>\r\n 	<li>Nhập vào một dãy số, in ra các vị trí số lớn nhất (có thể có nhiều vị trí).</li>\r\n 	<li>Nhập vào một dãy số là lượng mưa của các tháng liên tiếp trong năm. Thông báo ra các tháng có lượng mưa lớn hơn lượng mưa trung bình của các tháng đó.</li>\r\n 	<li>Nhập vào một dãy số, sắp xếp và in ra dãy số theo chiều tăng dần.</li>\r\n 	<li>Nhập vào một ma trận (mảng 2 chiều). In ra tổng của mỗi hàng trong ma trận đó.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 9 – Mảng trong C', '', 'inherit', 'closed', 'closed', '', '165-revision-v1', '', '', '2018-12-10 01:22:11', '2018-12-09 18:22:11', '', 165, 'http://localhost/web-teach-code/blog/2018/12/10/165-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(167, 1, '2018-12-10 01:22:39', '2018-12-09 18:22:39', 'Ở bài <a href=\"https://cachhoc.net/2014/12/16/lap-trinh-c-bai-8-chuoi-ky-tu-trong-c/2018/01/11/lap-trinh-c-bai-3-nhap-xuat-trong-c/\">Nhập xuất trong c</a> chúng ta đã làm quen với cách khai báo, nhập xuất chuỗi ký tự trong C một cách đơn giản. Trong bài này chúng ta sẽ nói nhiều hơn về các ví dụ, bài tập về chuỗi .\r\n<h2><span id=\"1_Tong_quan\">1. Tổng quan</span></h2>\r\nChuỗi được xem như là một mảng 1 chiều gồm các phần tử có kiểu char như ký tự, con số và bất cứ ký tự đặc biệt như +, -, *, /, $, #,…\r\nTheo quy ước, một chuỗi sẽ được kết thúc bởi ký tự null (‘\\0’ : kí tựrỗng).\r\nVí dụ: chuỗi “Infoworld” được lưu trữ như sau:\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/luu-tru-chuoi-ky-tu.png?w=780&amp;ssl=1\" alt=\"Cách lưu trữ chuỗi ký tự\" width=\"776\" height=\"125\" /></center><center><em>Cách lưu trữ chuỗi ký tự</em></center>\r\n<h2><span id=\"2_Mot_so_cach_khai_bao_khoi_tao_chuoi\">2. Một số cách khai báo, khởi tạo chuỗi</span></h2>\r\nChúng ta xét ví dụ sau:\r\n<div>\r\n<div id=\"highlighter_270238\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 50 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[50]; </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hi, What is your name? \\nMy name is: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(name);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hi %s, welcome to C language\\n\"</code><code class=\"cpp plain\">, name);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khoi tao chuoi ngay khi khai bao</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">myLove[] = </code><code class=\"cpp string\">\"Nguyen Thi Lap Lanh\"</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">puts</code><code class=\"cpp plain\">(myLove);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Hi, What is your name?\r\nMy name is: Nguyen Van Quan\r\nHi Nguyen Van Quan, welcome to C language\r\nNguyen Thi Lap Lanh</blockquote>\r\nTrong chương trình trên, mình có dùng hàm <strong>puts</strong> để in chuỗi myLove ra, đây cũng là hàm để xuất chuỗi.\r\n\r\nNhư trên chúng ta có thể thấy là khai báo chuỗi sau đó nhập chuỗi hoặc vừa khai báo vừa gán giá trị cho chuỗi ngay. Tuy nhiên chúng ta không thể khai báo sau đó mới gán giá trị như sau:\r\n<div>\r\n<div id=\"highlighter_936413\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[50];</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">name = </code><code class=\"cpp string\">\"Nguyen Van Quan\"</code><code class=\"cpp plain\">; </code><code class=\"cpp comments\">// error</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTrong trường muốn khai báo sau đó mới gán giá trị, chúng ta phải dùng hàm copy chuỗi <strong>strcpy</strong> nằm trong thư viện <strong>string.h</strong> để lưu giá trị như sau:\r\n<div>\r\n<div id=\"highlighter_795431\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[50];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">strcpy</code><code class=\"cpp plain\">(name, </code><code class=\"cpp string\">\"Nguyen Van Quan\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">puts</code><code class=\"cpp plain\">(name);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Mot_so_vi_du_ve_chuoi_ky_tu_trong_C\">3. Một số ví dụ về chuỗi ký tự trong C</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"31_Vi_du_1_Dem_so_tu_trong_chuoi\">3.1 Ví dụ 1: Đếm số từ trong chuỗi</span></h3>\r\n<blockquote>Hãy nhập vào một chuỗi ký tự và đếm số từ trong chuỗi. VD chuỗi “Nguyen Van Quan” có 3 từ.</blockquote>\r\nĐể làm bài này, chúng ta thấy mỗi từ là các ký tự liên tiếp nhau và phân tách các từ bằng các dấu cách. Do vậy bài này sẽ quy về đếm số dấu cách trong chuỗi. Nếu chuỗi có 1 từ thì không có dấu cách, chuỗi có 2 từ thì có 1 dấu cách giữa 2 từ đó. Tổng quát là có n từ thì sẽ có n-1 dấu cách.\r\n\r\nVấn đề tiếp theo là làm sao đếm được các dấu cách? Đơn giản, như mở đầu ta đã biết chuỗi là một mảng các ký tự, do vậy chúng ta có thể duyệt lần lượt các ký tự của chuỗi để kiếm tra ký tự nào là dấu cách. Nhưng muốn duyệt hết các ký trong chuỗi (mảng ký tự) thì phải biết số lượng ký tự có trong chuỗi (số lượng phần tử có trong mảng).\r\n\r\nMay mắn là trong thư viện <strong>string.h</strong> chúng ta có một hàm để lấy độ dài của chuỗi là hàm <strong>strlen</strong>. (str – string, len – length).\r\n<div>\r\n<div id=\"highlighter_776442\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt; // for strlen function</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">s[50];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter a string: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(s);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, count = 0; </code><code class=\"cpp comments\">// count - bien dem so luong dau cach</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s); i++ )</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s[i] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">count++;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Number word in string is: %d\\n\"</code><code class=\"cpp plain\">, count + 1 );</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCode khá đơn giản, các bạn đọc, hiểu và chạy thử nhé.\r\n\r\nTuy nhiên code trên chúng ta có một số lưu ý:\r\n<ul>\r\n 	<li>Để biểu diễn ký tự thì ta đặt trong cặp nháy đơn, chuỗi thì chúng ta đặt trong cặp nháy kép. Nên ở trên dấu cách đặt trong cặp nháy đơn và chúng ta có thể so sánh 2 ký tự bằng các phép so sánh như với 2 số, còn 2 chuỗi thì không thể so sánh được như vậy, các bạn có thể đọc thêm về <a href=\"https://cachhoc.net/2014/12/16/lap-trinh-c-bai-8-chuoi-ky-tu-trong-c/2018/01/19/sanh-chuoi-trong-c-strcmp/\">cách so sánh chuỗi</a>.</li>\r\n 	<li>Do chuỗi là một mảng các ký tự, nên muốn lấy ký tự thứ i trong chuỗi s thì ta truy cập như với mảng là s[i].</li>\r\n 	<li>Ví dụ này chỉ áp dụng khi chuỗi có độ dài lớn hơn 0 và không có dấu trắng thừa ở đầu, cuối hoặc giữa các từ.</li>\r\n 	<li>Như vòng lặp for ở trên, chúng ta có điều kiện <code>i &lt; strlen(s)</code>, tuy nhiên bản chất của hàm strlen là một vòng lặp nữa để đếm số lượng ký tự của chuỗi s. Nên nếu chúng ta viết trực tiếp điều kiện như trên thì trong mỗi lần lặp, chương trình lại phải chạy lại lệnh strlen lặp để đếm số lượng ký tự của s. Điều này là thừa và làm chương trình chạy lâu hơn. Do vậy chúng ta sẽ đặt 1 biến là độ dài của chuỗi ra ngoài như sau:</li>\r\n</ul>\r\n<div>\r\n<div id=\"highlighter_217824\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">len = </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s);</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; len; i++ )</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s[i] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">count++;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"32_Vi_du_2_Chuan_hoa_chuoi\">3.2 Ví dụ 2: Chuẩn hóa chuỗi</span></h3>\r\n<blockquote>Hãy nhập vào một chuỗi và xóa bỏ toàn bộ các dấu cách thừa ở đầu, cuối và giữa các từ nếu có.</blockquote>\r\nBài toán này là bài toán quan trọng cho các phần mềm, sau này khi lưu trữ, nhập liệu cần lưu ý để dữ liệu được chuẩn, không thừa thiếu gây sai sót trong quá trình xử lý và tím kiếm.\r\n<ul>\r\n 	<li>Ký tự đầu tiên của chuỗi s là dấu cách thì s[0] là dấu cách, chúng ta xóa nó là xong.</li>\r\n 	<li>Các ký tự cách giữa các từ nếu thừa tức là s[i] và s[i+1] cùng là dấu cách. Chúng ta xóa 1 trong 2 là ok, vì các từ sẽ phân tách nhau bởi 1 dấu cách nên ta phải dữ lại 1 dấu cách.</li>\r\n 	<li>Các ký tự ở cuối chuỗi là dấu cách thì chúng ta sẽ xóa bằng cách gán ký tự cuối cùng là ký tự rỗng <code>\'\\0\'</code> là xong. Nhớ rằng ký tự cuối cùng của mảng n phần tử là <code>a[n-1]</code>, do vậy ký tự của chuỗi là <code>s[ strlen(s) - 1 ]</code>.</li>\r\n</ul>\r\nVấn đề tiếp theo là làm sao xóa 1 ký tự trong chuỗi? Các bạn nhìn lại ví dụ trên chúng ta có dùng hàm copy chuỗi, và để xóa 1 hoặc một số ký tự trong chuỗi chúng ta sẽ dùng hàm này nhưng sẽ dùng theo copy địa chỉ.\r\n\r\nĐể xóa từ ký tự i đến ký tự j trong chuỗi s, chúng ta dùng lệnh <code>strcpy(&amp;s[i], &amp;s[j+1]);</code>. Bản chất là chúng ta copy địa chỉ của <code>s[j+1]</code> về địa chỉ của <code>s[i]</code>.\r\n<div>\r\n<div id=\"highlighter_350469\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">s[50];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter a string: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(s);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// delete all space at start of string</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code><code class=\"cpp plain\">( s[0] == </code><code class=\"cpp string\">\' \'</code> <code class=\"cpp plain\">) </code><code class=\"cpp functions bold\">strcpy</code><code class=\"cpp plain\">(&amp;s[0], &amp;s[1]);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// delete all space at end of string</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code><code class=\"cpp plain\">( s[ </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s)-1 ] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">) s[ </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s)-1 ] = </code><code class=\"cpp string\">\'\\0\'</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// delete all space between two word </code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code><code class=\"cpp plain\">(i = 0; i &lt; </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s); i++)</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( s[i] == </code><code class=\"cpp string\">\' \'</code> <code class=\"cpp plain\">&amp;&amp; s[i+1] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">)</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">strcpy</code><code class=\"cpp plain\">(&amp;s[i], &amp;s[i+1]);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">i--; </code><code class=\"cpp comments\">// why???</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number28 index27 alt1\"></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"s=%s.\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number30 index29 alt1\"></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Các bạn chạy thử nhé. Nhớ nhập chuỗi thừa các dấu cách ở đầu, cuối, giữa để kiểm tra.\r\n\r\nMột câu hỏi nhỏ coi như bài tập làm thêm cho các bạn là hãy nhìn dòng code <code>i--; // why???</code> và nghĩ tại sao lại có dòng này? Tại sao i phải giảm đi 1?\r\n<h2><span id=\"4_Mot_so_ham_ve_chuoi_va_ky_tu\">4. Một số hàm về chuỗi và ký tự</span></h2>\r\n<strong>Các hàm kiểm tra ký tự</strong>. (các hàm này trong thư viện <strong>ctype.h</strong>) Nếu đúng thì hàm cho giá trị khác 0. Nếu sai thì hàm cho giá trị bằng 0.\r\n<ul>\r\n 	<li>Int isalpha(int c) : kiểm tra ký tự có là chữ cái không.</li>\r\n 	<li>Int isdigit(int c) : kiểm tra xem ký tự có là chữ số không.</li>\r\n 	<li>Int islower(int c): kiểm tra ký tự có là chữ thường không.</li>\r\n 	<li>Int isupper(int c): kiểm tra ký tự có là chữ hoa không.</li>\r\n 	<li>Int ispace(int c): kiểm tra ký tự có là trống không (\\n, dấu cách, \\t).</li>\r\n</ul>\r\n<strong>Các hàm sử lý xâu ký tự</strong>. (các hàm này nằm trong thư viện <strong>string.h</strong>)\r\n<ul>\r\n 	<li>Int strlen(char *s) trả về độ dài của xâu s;</li>\r\n 	<li>Char *strupr(char *s) đổi chữ thường trong xâu s sang chữ hoa.</li>\r\n 	<li>Char *strlwr(char *s) đổi chữ hoa sang chữ thường.</li>\r\n 	<li>Char *strcat(char *s1, char *s2) nối xâu s2 vào xâu s1;</li>\r\n 	<li>Int strcmp(char *s1, char *s2) cho giá trị âm nếu xâu s1 nhở hơn xâu s2. Và cho giá tị dương nếu xâu s1 lớn hơn xâu s2. Trả về giá trị bằng 0 nếu xâu s1 bằng xâu s2.</li>\r\n 	<li>Int strcmpi (char *s1, char *s2) so sánh 2 xâu nhưng không phân biệt chữ thường và chữ hoa.</li>\r\n 	<li>Char *strcpy(char *s1, char *s2) copy xâu s2 vào xâu s1.</li>\r\n 	<li>Char *strncpy(char *s1, char *s2, int n) sao chép n ký tự đầu của xâu s2 sang xâu s1</li>\r\n 	<li>Char *strnset(char *s ,int c, int n) dùng để sao chép n lần ký tự c vào xâu s.</li>\r\n 	<li>Char *strstr(char *s1, char *s2) tìm sự xuất hiện của xâu s2 trong xâu s1. Nếu tìm thấy hàm cho địa chỉ của xâu con trong xâu s1. Trái lại cho NULL.</li>\r\n 	<li>Char *strrev(char *s) dùng đảo ngược xâu s.Nếu thành công hàm cho địa chỉ xâu đã đảo.</li>\r\n</ul>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình tách tên từ một chuỗi cho trước. VD tên Nguyen Thi Lap Lanh =&gt; tách được Lanh</li>\r\n 	<li>Viết chương trình chuẩn hóa chuỗi tên riêng. VD:<code>ha noi</code> =&gt; <code>Ha Noi</code>.</li>\r\n 	<li>Viết hàm chuyển đổi 1 chuỗi sang chữ thường và 1 hàm chuyển đổi sang chữ HOA.</li>\r\n 	<li>Viết chương trình nhập vào một chuỗi ký tự rồi đếm xem trong chuỗi đó có bao nhiêu chữ “ng”.</li>\r\n 	<li>Viết chương trình nhập vào một chuỗi ký tự. Kiểm tra xem chuỗi đó có đối xứng không? Chuỗi đối xứng là chuỗi khi viết ngược lại vẫn được như chuỗi ban đầu. VD <strong>level</strong></li>\r\n 	<li>Viết chương trình nhập vào số có 3 chữ số. Cho biết dòng chữ mô tả giá trị con số đó. Ví dụ 123 -&gt; một trăm hai mươi ba.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 10 – Chuỗi ký tự trong c', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-10-chuoi-ky-tu-trong-c', '', '', '2018-12-10 04:08:05', '2018-12-09 21:08:05', '', 0, 'http://localhost/web-teach-code/blog/?p=167', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(168, 1, '2018-12-10 01:22:39', '2018-12-09 18:22:39', 'Ở bài <a href=\"https://cachhoc.net/2014/12/16/lap-trinh-c-bai-8-chuoi-ky-tu-trong-c/2018/01/11/lap-trinh-c-bai-3-nhap-xuat-trong-c/\">Nhập xuất trong c</a> chúng ta đã làm quen với cách khai báo, nhập xuất chuỗi ký tự trong C một cách đơn giản. Trong bài này chúng ta sẽ nói nhiều hơn về các ví dụ, bài tập về chuỗi .\r\n<h2><span id=\"1_Tong_quan\">1. Tổng quan</span></h2>\r\nChuỗi được xem như là một mảng 1 chiều gồm các phần tử có kiểu char như ký tự, con số và bất cứ ký tự đặc biệt như +, -, *, /, $, #,…\r\nTheo quy ước, một chuỗi sẽ được kết thúc bởi ký tự null (‘\\0’ : kí tựrỗng).\r\nVí dụ: chuỗi “Infoworld” được lưu trữ như sau:\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/luu-tru-chuoi-ky-tu.png?w=780&amp;ssl=1\" alt=\"Cách lưu trữ chuỗi ký tự\" width=\"776\" height=\"125\" /></center><center><em>Cách lưu trữ chuỗi ký tự</em></center>\r\n<h2><span id=\"2_Mot_so_cach_khai_bao_khoi_tao_chuoi\">2. Một số cách khai báo, khởi tạo chuỗi</span></h2>\r\nChúng ta xét ví dụ sau:\r\n<div>\r\n<div id=\"highlighter_270238\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao chuoi co toi da 50 ky tu</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[50]; </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hi, What is your name? \\nMy name is: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(name);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hi %s, welcome to C language\\n\"</code><code class=\"cpp plain\">, name);</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khoi tao chuoi ngay khi khai bao</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">myLove[] = </code><code class=\"cpp string\">\"Nguyen Thi Lap Lanh\"</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">puts</code><code class=\"cpp plain\">(myLove);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Hi, What is your name?\r\nMy name is: Nguyen Van Quan\r\nHi Nguyen Van Quan, welcome to C language\r\nNguyen Thi Lap Lanh</blockquote>\r\nTrong chương trình trên, mình có dùng hàm <strong>puts</strong> để in chuỗi myLove ra, đây cũng là hàm để xuất chuỗi.\r\n\r\nNhư trên chúng ta có thể thấy là khai báo chuỗi sau đó nhập chuỗi hoặc vừa khai báo vừa gán giá trị cho chuỗi ngay. Tuy nhiên chúng ta không thể khai báo sau đó mới gán giá trị như sau:\r\n<div>\r\n<div id=\"highlighter_936413\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[50];</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">name = </code><code class=\"cpp string\">\"Nguyen Van Quan\"</code><code class=\"cpp plain\">; </code><code class=\"cpp comments\">// error</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTrong trường muốn khai báo sau đó mới gán giá trị, chúng ta phải dùng hàm copy chuỗi <strong>strcpy</strong> nằm trong thư viện <strong>string.h</strong> để lưu giá trị như sau:\r\n<div>\r\n<div id=\"highlighter_795431\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[50];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">strcpy</code><code class=\"cpp plain\">(name, </code><code class=\"cpp string\">\"Nguyen Van Quan\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">puts</code><code class=\"cpp plain\">(name);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Mot_so_vi_du_ve_chuoi_ky_tu_trong_C\">3. Một số ví dụ về chuỗi ký tự trong C</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"31_Vi_du_1_Dem_so_tu_trong_chuoi\">3.1 Ví dụ 1: Đếm số từ trong chuỗi</span></h3>\r\n<blockquote>Hãy nhập vào một chuỗi ký tự và đếm số từ trong chuỗi. VD chuỗi “Nguyen Van Quan” có 3 từ.</blockquote>\r\nĐể làm bài này, chúng ta thấy mỗi từ là các ký tự liên tiếp nhau và phân tách các từ bằng các dấu cách. Do vậy bài này sẽ quy về đếm số dấu cách trong chuỗi. Nếu chuỗi có 1 từ thì không có dấu cách, chuỗi có 2 từ thì có 1 dấu cách giữa 2 từ đó. Tổng quát là có n từ thì sẽ có n-1 dấu cách.\r\n\r\nVấn đề tiếp theo là làm sao đếm được các dấu cách? Đơn giản, như mở đầu ta đã biết chuỗi là một mảng các ký tự, do vậy chúng ta có thể duyệt lần lượt các ký tự của chuỗi để kiếm tra ký tự nào là dấu cách. Nhưng muốn duyệt hết các ký trong chuỗi (mảng ký tự) thì phải biết số lượng ký tự có trong chuỗi (số lượng phần tử có trong mảng).\r\n\r\nMay mắn là trong thư viện <strong>string.h</strong> chúng ta có một hàm để lấy độ dài của chuỗi là hàm <strong>strlen</strong>. (str – string, len – length).\r\n<div>\r\n<div id=\"highlighter_776442\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt; // for strlen function</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">s[50];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter a string: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(s);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i, count = 0; </code><code class=\"cpp comments\">// count - bien dem so luong dau cach</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s); i++ )</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s[i] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">count++;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Number word in string is: %d\\n\"</code><code class=\"cpp plain\">, count + 1 );</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCode khá đơn giản, các bạn đọc, hiểu và chạy thử nhé.\r\n\r\nTuy nhiên code trên chúng ta có một số lưu ý:\r\n<ul>\r\n 	<li>Để biểu diễn ký tự thì ta đặt trong cặp nháy đơn, chuỗi thì chúng ta đặt trong cặp nháy kép. Nên ở trên dấu cách đặt trong cặp nháy đơn và chúng ta có thể so sánh 2 ký tự bằng các phép so sánh như với 2 số, còn 2 chuỗi thì không thể so sánh được như vậy, các bạn có thể đọc thêm về <a href=\"https://cachhoc.net/2014/12/16/lap-trinh-c-bai-8-chuoi-ky-tu-trong-c/2018/01/19/sanh-chuoi-trong-c-strcmp/\">cách so sánh chuỗi</a>.</li>\r\n 	<li>Do chuỗi là một mảng các ký tự, nên muốn lấy ký tự thứ i trong chuỗi s thì ta truy cập như với mảng là s[i].</li>\r\n 	<li>Ví dụ này chỉ áp dụng khi chuỗi có độ dài lớn hơn 0 và không có dấu trắng thừa ở đầu, cuối hoặc giữa các từ.</li>\r\n 	<li>Như vòng lặp for ở trên, chúng ta có điều kiện <code>i &lt; strlen(s)</code>, tuy nhiên bản chất của hàm strlen là một vòng lặp nữa để đếm số lượng ký tự của chuỗi s. Nên nếu chúng ta viết trực tiếp điều kiện như trên thì trong mỗi lần lặp, chương trình lại phải chạy lại lệnh strlen lặp để đếm số lượng ký tự của s. Điều này là thừa và làm chương trình chạy lâu hơn. Do vậy chúng ta sẽ đặt 1 biến là độ dài của chuỗi ra ngoài như sau:</li>\r\n</ul>\r\n<div>\r\n<div id=\"highlighter_217824\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">len = </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s);</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; len; i++ )</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">(s[i] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">count++;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"32_Vi_du_2_Chuan_hoa_chuoi\">3.2 Ví dụ 2: Chuẩn hóa chuỗi</span></h3>\r\n<blockquote>Hãy nhập vào một chuỗi và xóa bỏ toàn bộ các dấu cách thừa ở đầu, cuối và giữa các từ nếu có.</blockquote>\r\nBài toán này là bài toán quan trọng cho các phần mềm, sau này khi lưu trữ, nhập liệu cần lưu ý để dữ liệu được chuẩn, không thừa thiếu gây sai sót trong quá trình xử lý và tím kiếm.\r\n<ul>\r\n 	<li>Ký tự đầu tiên của chuỗi s là dấu cách thì s[0] là dấu cách, chúng ta xóa nó là xong.</li>\r\n 	<li>Các ký tự cách giữa các từ nếu thừa tức là s[i] và s[i+1] cùng là dấu cách. Chúng ta xóa 1 trong 2 là ok, vì các từ sẽ phân tách nhau bởi 1 dấu cách nên ta phải dữ lại 1 dấu cách.</li>\r\n 	<li>Các ký tự ở cuối chuỗi là dấu cách thì chúng ta sẽ xóa bằng cách gán ký tự cuối cùng là ký tự rỗng <code>\'\\0\'</code> là xong. Nhớ rằng ký tự cuối cùng của mảng n phần tử là <code>a[n-1]</code>, do vậy ký tự của chuỗi là <code>s[ strlen(s) - 1 ]</code>.</li>\r\n</ul>\r\nVấn đề tiếp theo là làm sao xóa 1 ký tự trong chuỗi? Các bạn nhìn lại ví dụ trên chúng ta có dùng hàm copy chuỗi, và để xóa 1 hoặc một số ký tự trong chuỗi chúng ta sẽ dùng hàm này nhưng sẽ dùng theo copy địa chỉ.\r\n\r\nĐể xóa từ ký tự i đến ký tự j trong chuỗi s, chúng ta dùng lệnh <code>strcpy(&amp;s[i], &amp;s[j+1]);</code>. Bản chất là chúng ta copy địa chỉ của <code>s[j+1]</code> về địa chỉ của <code>s[i]</code>.\r\n<div>\r\n<div id=\"highlighter_350469\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about string - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;string.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">s[50];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Enter a string: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(s);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// delete all space at start of string</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code><code class=\"cpp plain\">( s[0] == </code><code class=\"cpp string\">\' \'</code> <code class=\"cpp plain\">) </code><code class=\"cpp functions bold\">strcpy</code><code class=\"cpp plain\">(&amp;s[0], &amp;s[1]);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// delete all space at end of string</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">while</code><code class=\"cpp plain\">( s[ </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s)-1 ] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">) s[ </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s)-1 ] = </code><code class=\"cpp string\">\'\\0\'</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// delete all space between two word </code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code><code class=\"cpp plain\">(i = 0; i &lt; </code><code class=\"cpp functions bold\">strlen</code><code class=\"cpp plain\">(s); i++)</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( s[i] == </code><code class=\"cpp string\">\' \'</code> <code class=\"cpp plain\">&amp;&amp; s[i+1] == </code><code class=\"cpp string\">\' \'</code><code class=\"cpp plain\">)</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">strcpy</code><code class=\"cpp plain\">(&amp;s[i], &amp;s[i+1]);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp plain\">i--; </code><code class=\"cpp comments\">// why???</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number28 index27 alt1\"></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"s=%s.\\n\"</code><code class=\"cpp plain\">, s);</code></div>\r\n<div class=\"line number30 index29 alt1\"></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Các bạn chạy thử nhé. Nhớ nhập chuỗi thừa các dấu cách ở đầu, cuối, giữa để kiểm tra.\r\n\r\nMột câu hỏi nhỏ coi như bài tập làm thêm cho các bạn là hãy nhìn dòng code <code>i--; // why???</code> và nghĩ tại sao lại có dòng này? Tại sao i phải giảm đi 1?\r\n<h2><span id=\"4_Mot_so_ham_ve_chuoi_va_ky_tu\">4. Một số hàm về chuỗi và ký tự</span></h2>\r\n<strong>Các hàm kiểm tra ký tự</strong>. (các hàm này trong thư viện <strong>ctype.h</strong>) Nếu đúng thì hàm cho giá trị khác 0. Nếu sai thì hàm cho giá trị bằng 0.\r\n<ul>\r\n 	<li>Int isalpha(int c) : kiểm tra ký tự có là chữ cái không.</li>\r\n 	<li>Int isdigit(int c) : kiểm tra xem ký tự có là chữ số không.</li>\r\n 	<li>Int islower(int c): kiểm tra ký tự có là chữ thường không.</li>\r\n 	<li>Int isupper(int c): kiểm tra ký tự có là chữ hoa không.</li>\r\n 	<li>Int ispace(int c): kiểm tra ký tự có là trống không (\\n, dấu cách, \\t).</li>\r\n</ul>\r\n<strong>Các hàm sử lý xâu ký tự</strong>. (các hàm này nằm trong thư viện <strong>string.h</strong>)\r\n<ul>\r\n 	<li>Int strlen(char *s) trả về độ dài của xâu s;</li>\r\n 	<li>Char *strupr(char *s) đổi chữ thường trong xâu s sang chữ hoa.</li>\r\n 	<li>Char *strlwr(char *s) đổi chữ hoa sang chữ thường.</li>\r\n 	<li>Char *strcat(char *s1, char *s2) nối xâu s2 vào xâu s1;</li>\r\n 	<li>Int strcmp(char *s1, char *s2) cho giá trị âm nếu xâu s1 nhở hơn xâu s2. Và cho giá tị dương nếu xâu s1 lớn hơn xâu s2. Trả về giá trị bằng 0 nếu xâu s1 bằng xâu s2.</li>\r\n 	<li>Int strcmpi (char *s1, char *s2) so sánh 2 xâu nhưng không phân biệt chữ thường và chữ hoa.</li>\r\n 	<li>Char *strcpy(char *s1, char *s2) copy xâu s2 vào xâu s1.</li>\r\n 	<li>Char *strncpy(char *s1, char *s2, int n) sao chép n ký tự đầu của xâu s2 sang xâu s1</li>\r\n 	<li>Char *strnset(char *s ,int c, int n) dùng để sao chép n lần ký tự c vào xâu s.</li>\r\n 	<li>Char *strstr(char *s1, char *s2) tìm sự xuất hiện của xâu s2 trong xâu s1. Nếu tìm thấy hàm cho địa chỉ của xâu con trong xâu s1. Trái lại cho NULL.</li>\r\n 	<li>Char *strrev(char *s) dùng đảo ngược xâu s.Nếu thành công hàm cho địa chỉ xâu đã đảo.</li>\r\n</ul>\r\n<blockquote><strong>Bài tập</strong>\r\n<ol>\r\n 	<li>Viết chương trình tách tên từ một chuỗi cho trước. VD tên Nguyen Thi Lap Lanh =&gt; tách được Lanh</li>\r\n 	<li>Viết chương trình chuẩn hóa chuỗi tên riêng. VD:<code>ha noi</code> =&gt; <code>Ha Noi</code>.</li>\r\n 	<li>Viết hàm chuyển đổi 1 chuỗi sang chữ thường và 1 hàm chuyển đổi sang chữ HOA.</li>\r\n 	<li>Viết chương trình nhập vào một chuỗi ký tự rồi đếm xem trong chuỗi đó có bao nhiêu chữ “ng”.</li>\r\n 	<li>Viết chương trình nhập vào một chuỗi ký tự. Kiểm tra xem chuỗi đó có đối xứng không? Chuỗi đối xứng là chuỗi khi viết ngược lại vẫn được như chuỗi ban đầu. VD <strong>level</strong></li>\r\n 	<li>Viết chương trình nhập vào số có 3 chữ số. Cho biết dòng chữ mô tả giá trị con số đó. Ví dụ 123 -&gt; một trăm hai mươi ba.</li>\r\n</ol>\r\n</blockquote>', 'Lập trình C: Bài 10 – Chuỗi ký tự trong c', '', 'inherit', 'closed', 'closed', '', '167-revision-v1', '', '', '2018-12-10 01:22:39', '2018-12-09 18:22:39', '', 167, 'http://localhost/web-teach-code/blog/2018/12/10/167-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(169, 1, '2018-12-10 01:23:10', '2018-12-09 18:23:10', '<h2><span id=\"1_GIoi_thieu_con_tro_trong_C\">1. GIới thiệu con trỏ trong C</span></h2>\r\nCác biến chúng ta đã biết và sử dụng trước đây đều là biến có kích thước và kiểu dữ liệu xác định. Người ta gọi các biến kiểu này là biến tĩnh. Khi khai báo biến tĩnh, một lượng ô nhớ cho các biến này sẽ được cấp phát mà không cần biết trong quá trình thực thi chương trình có sử dụng hết lượng ô nhớ này hay không. Mặt khác, các biến tĩnh dạng này sẽ tồn tại trong suốt thời gian thực thi chương trình dù có những biến mà chương trình chỉ sử dụng 1 lần rồi bỏ.\r\n\r\nMột số hạn chế có thể gặp phải khi sử dụng các biến tĩnh:\r\n<ul>\r\n 	<li>Cấp phát ô nhớ dư, gây ra lãng phí ô nhớ.</li>\r\n 	<li>Cấp phát ô nhớ thiếu, chương trình thực thi bị lỗi.</li>\r\n</ul>\r\nĐể tránh những hạn chế trên, ngôn ngữ C cung cấp cho ta một loại biến đặc biệt gọi là biến động với các đặc điểm sau:\r\n<ul>\r\n 	<li>Chỉ phát sinh trong quá trình thực hiện chương trình chứ không phát sinh lúc bắt đầu chương trình.</li>\r\n 	<li>Khi chạy chương trình, kích thước của biến, vùng nhớ và địa chỉ vùng nhớ được cấp phát cho biến có thể thay đổi.</li>\r\n 	<li>Sau khi sử dụng xong có thể giải phóng để tiết kiệm chỗ trong bộ nhớ. Tuy nhiên các biến động không có địa chỉ nhất định nên ta không thể truy cập đến chúng được. Vì thế, ngôn ngữ C lại cung cấp cho ta một loại biến đặc biệt nữa để khắc phục tình trạng này, đó là biến con trỏ (pointer) với các đặc điểm:</li>\r\n 	<li>Biến con trỏ không chứa dữ liệu mà chỉ chứa địa chỉ của dữ liệu hay chứa địa chỉ của ô nhớ chứa dữ liệu.</li>\r\n 	<li>Kích thước của biến con trỏ không phụ thuộc vào kiểu dữ liệu, luôn có kích thước cố định là 2 byte.</li>\r\n</ul>\r\n<h2><span id=\"2_Bien_con_tro\">2. Biến con trỏ</span></h2>\r\nMỗi biến khi được khai báo đều được cấp phát cho 1 vùng nhớ nhất định ở những nơi (địa chỉ) khác nhau. Biến con trỏ <strong>là biến</strong> dùng để lưu trữ địa chỉ của các biến đó.\r\n<h3><span id=\"21_Vi_du\">2.1 Ví dụ</span></h3>\r\n<div>\r\n<div id=\"highlighter_785405\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao bien x va bien con tro px */</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x, *px; </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px = &amp;x;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* &amp;x : tra ve dia chi cua bien x</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* px = &amp;x : gan dia chi cua bien x cho px hay px tro den x</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = 42;</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*px = 7826;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n -------- \\n\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number25 index24 alt2\"></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Kết quả:\r\nNoi dung cua bien x la 42\r\nVi tri cua bien x la 0x7ffe064348fc\r\nNoi dung cua bien x la 42\r\n\r\n<code>--------</code>\r\nNoi dung cua bien x la 7826\r\nNoi dung cua bien x la 7826</blockquote>\r\nQua ví dụ mở đầu này ta có thể rút ra một số điểm sau:\r\n<h3><span id=\"a_Khai_bao_bien_con_tro\">a. Khai báo biến con trỏ</span></h3>\r\nVới mỗi kiểu dữ liệu ta có tương ứng một biến con trỏ có kiểu đó.\r\n\r\n<strong>Kiểu * Tên biến con trỏ;</strong>\r\n\r\nTrong VD trên ta khai báo 1 biến con trỏ px thuộc kiểu int.\r\n<h3><span id=\"b_Quy_dinh_vung_tro_toi_cua_con_tro\">b. Quy định vùng trỏ tới của con trỏ</span></h3>\r\nTa dùng toán tử &amp; để lấy địa chỉ của 1 biến và sau đó gán địa chỉ đó cho biến con trỏ.\r\n<strong>Tên con trỏ = &amp;biến;</strong>\r\n<h3><span id=\"c_Cach_truy_xuat\">c. Cách truy xuất</span></h3>\r\nVới con trỏ px bên trên ta có 2 phép tuy xuất là:\r\n<ul>\r\n 	<li>px : Lấy địa chỉ mà nó lưu giữ (trỏ tới)</li>\r\n 	<li>*px : Lấy giá trị trong vùng nhớ mà nó trỏ tới.</li>\r\n</ul>\r\nTrong VD trên ta có thể thấy sau phép gán <strong>px = &amp;x;</strong> thì việc ta viết:\r\n<ul>\r\n 	<li>px sẽ tương đương với &amp;x</li>\r\n 	<li>*px sẽ tương đương với x. và ta có thể sử dụng *px trong các phép toán, biểu thức.</li>\r\n</ul>\r\n<h3><span id=\"d_Mot_so_phep_toan_tren_bien_con_tro\">d. Một số phép toán trên biến con trỏ</span></h3>\r\n<div>\r\n<div id=\"highlighter_393679\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao bien x va 2 bien con tro px, qx */</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x, *px, *qx; </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px = &amp;x;</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap gia tri cho vung nho px tro toi: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, px); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* px la con tro nen khong viet scanf(\"%d\", &amp;px);  */</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">qx = px; </code><code class=\"cpp comments\">/* gan gia tri cua px cho qx, qx cun tro toi x*/</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, qx);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *qx);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// tang gia tri cua o nho len, &lt;=&gt; x = x + 7826</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*px += 7826; </code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number26 index25 alt1\"></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px++; </code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* cong them mot don vi cho px</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*  =&gt; px tro toi vung nho tiep theo</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number31 index30 alt2\"></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri px tro toi la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number33 index32 alt2\"></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Nhap gia tri cho vung nho px tro toi: 42\r\nVi tri cua bien x la 0xbfba58a0\r\nVi tri cua bien x la 0xbfba58a0\r\nVi tri cua bien x la 0xbfba58a0\r\nNoi dung cua bien x la 42\r\nNoi dung cua bien x la 42\r\nNoi dung cua bien x la 42\r\nNoi dung cua bien x la 7868\r\nVi tri px tro toi la 0xbfba58a4</blockquote>\r\nTrong vd trên ta thấy có một số phép toán trên con trỏ hay gặp sau: (ngoài ra còn nhiều phép toán khác).\r\n<ul>\r\n 	<li>2 biến con trỏ cùng kiểu có thể được gán cho nhau hoặc thực hiện các phép toán cộng cho một số nguyên, trừ 2 con trỏ cho nhau. Ở VD trên ta thực hiện các phép toán:</li>\r\n 	<li>Gán: qx = px; Khi này qx nhận giá trị của px hiện có là địa chỉ của biến x, tức là qx và px cùng trỏ đến x. ngoài ra ta có thể gán như sau: qx = px + 2; với qx, px là các biến con trỏ cùng kiểu. Phép trừ 2 con trỏ cùng kiểu sẽ trả về 1 giá trị nguyên (int). Đây chính là khoảng cách (số phần tử) giữa 2 con trỏ đó</li>\r\n 	<li>Tăng: Các phép tăng giảm, cộng trừ được thực hiện trên biến con trỏ tương tự như với các biến số học. Điểm khác biệt duy nhất là nó tăng giảm, cộng trừ theo đơn byte mà kiểu của nó có.\r\nVD. Trong VD trên ta có phép tăng: px++; Khi này giả sử px đang trỏ đến địa chỉ: 0xbfba58a0 thì sau phép tăng nó có giá trị là (trỏ đến vị trí) 0xbfba58a4 (tăng lên 4) vì px là con trỏ kiểu int mà mỗi biến kiểu int chiếm 4 byte trong bộ nhớ.</li>\r\n 	<li>Ngoài ra chúng ta để ý còn phép thay đổi giá trị của biến x bằng phép toán *px += 3; Ở phép toán này thực chất là ta đã thay đổi giá trị ở ô nhớ (địa chỉ) mà px trỏ tới, từ đó dẫn đến giá trị của biến x cũng thay đổi theo.</li>\r\n</ul>\r\n<strong>Các bạn chú ý:</strong>\r\n<ul>\r\n 	<li>Tùy theo trình dịch mà dung lượng của các kiểu là khác nhau. (trong trình dịch này thì kiểu int chiếm 4 byte nhưng trong trình dịch khác thì nó lại chiếm 2 byte). Để biết dung lượng từng kiểu bạn dùng toán tử sizeof() mà trong bài 2 đã đề cập.</li>\r\n 	<li>Mỗi biến con trỏ, dù là con trỏ thuộc kiểu nào (int, float, double,…) cũng chỉ chiếm 2 byte bộ nhớ để lưu trữ đĩa chỉ của các biến.</li>\r\n</ul>\r\n<h2><span id=\"3_Cap_phat_va_thu_hoi_vung_nho\">3. Cấp phát và thu hồi vùng nhớ</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"a_Cap_phat\">a. Cấp phát:</span></h3>\r\nTrước khi vào phần này ta làm ví dụ nho nhỏ.\r\n<div>\r\n<div id=\"highlighter_644932\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*px;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*px = 42;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri con tro px la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Gia tri con tro px tro toi la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi biên dịch thì sẽ không co lỗi (có cảnh báo), khi chạy sẽ không thể chạy được mà chương trình sẽ thoát ra luôn.\r\nNguyên nhân là khi khai báo biến con trỏ px thì máy mới chỉ cung cấp 2 byte để lưu địa chỉ của biến con trỏ mà chưa cấp phát vùng nhớ để con trỏ px lưu trữ dữ liệu. (tương tự như hợp tác xã cung cấp 2 Kg thóc cho bạn để làm giống nhưng lại không cung cấp cho bạn ruộng đất để bạn reo mạ vậy ).\r\n\r\n<strong>Lưu ý:</strong> Có một số trình dịch sẽ không báo lỗi mà vẫn chạy bình thường nhưng tốt nhất là ta nên cấp phát trước khi sử dụng. Lỗi này sẽ xuất hiện rõ nhất khi bạn sử dụng con trỏ với mảng mà lát nữa ta sẽ đề cập.\r\n\r\nThôi ta đi vào vấn đề chính, làm sao để cấp phát vùng nhớ cho con trỏ.\r\nĐể cấp phát vùng nhớ cho con trỏ ta dùng các hàm sau trong thư viện stdlib.h.\r\n<ul>\r\n 	<li>malloc : tên con trỏ = (kiểu con trỏ *) malloc (sizeof(kiểu con trỏ));</li>\r\n 	<li>calloc : tên con trỏ = (kiểu con trỏ *) malloc (n, sizeof(kiểu con trỏ));</li>\r\n</ul>\r\nTrong đó sizeof(kiểu con trỏ) là kích thước của kiểu; n là số lần của sizeof(kiểu con trỏ) được cấp.\r\n<div>\r\n<div id=\"highlighter_80541\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*px, *qx;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(</code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">qx = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">calloc</code><code class=\"cpp plain\">(1, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri con tro px la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Gia tri con tro px tro toi la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri con tro qx la %p \\n\"</code><code class=\"cpp plain\">, qx);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Gia tri con tro qx tro toi la %d \\n\"</code><code class=\"cpp plain\">, *qx);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ đây các bạn chú ý: sự khác nhau duy nhất giữa malloc và calloc mà các bạn hiểu đơn giản là với malloc thì khi cấp phát máy sẽ cấp phát cho px 1 ô bất kỳ mà không cần biết ô đó có dữ liệu là gì hay không có dữ liệu (do đó *px có giá trị như trên) còn calloc cũng vậy nhưng khác 1 điểm là sau khi cấp phát thì máy sẽ tự động gán luôn giá trị 0 cho ô nhớ mà biến qx trỏ tới, tức qx có giá trị mặc định là 0.\r\nKhi cấp phát cho biến con trỏ 1 số lượng ô nhớ nào đó mà trong quá trình làm việc ta thiếu và cần cấp phát thêm thì ta sử dụng lệnh <strong>realloc</strong>:\r\n\r\n<strong>tên con trỏ = (kiểu con trỏ *) realloc (tên con trỏ, số lượng cần cấp phát * sizeof(kiểu con trỏ));</strong>\r\n\r\nTrong đó: số lượng cần cấp phát = cũ + mới.\r\nVD: Ban đầu ta cấp phát cho con trỏ px là 10 ô nhớ.\r\nSau đó muốn cấp phát thêm cho nó 5 ô nhớ nữa thì số lượng cấp phát = 15.\r\n<h3><span id=\"b_Thu_hoi_va_kiem_tra_vung_nho_con_lai\">b. Thu hồi và kiểm tra vùng nhớ còn lại</span></h3>\r\nĐể thu hổi bộ nhớ đã cấp phát ta dùng hàm <strong>free(tên con trỏ);</strong>\r\n<h2><span id=\"3_Ham_co_doi_la_con_tro\">3. Hàm có đối là con trỏ</span></h2>\r\nNhư trong bài <a href=\"https://cachhoc.net/2014/12/17/lap-trinh-c-bai-9-con-tro-trong-c/2018/01/20/ham-hoan-vi-trong-c/\">Hàm hoán vị trong C</a> chúng ta đã biết cách truyền các tham số a,b trong hàm HoanVi là cách truyền bằng tham trị chứ không phải truyền bằng địa chỉ (hay tham biến) nên mặc dù trong hàm thì giá trị các biến đã được thay đổi nhưng sau khi hàm thực hiện xong thì các giá trị vẫn chưa thể thay đổi được. Và ta sẽ phải sửa lại bằng cách truyền tham số hình thức là con trỏ a và con trỏ b để khi thực hiện hoán đổi có thể hoán đổi tại địa chỉ của các ô nhớ đó. Khi đó ta mới có được kết quả mong muốn.\r\n<div>\r\n<div id=\"highlighter_203490\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">hoanVi(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*b) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">temp = *a;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp plain\">*a = *b;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp plain\">*b = temp;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 42, b = 7826;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Truoc khi goi ham hoan vi: a = %d, b = %d \\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">hoanVi(&amp;a, &amp;b);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Sau khi goi ham hoan vi: a = %d, b = %d \\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 11 – Con trỏ trong c', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-11-con-tro-trong-c', '', '', '2018-12-10 04:07:38', '2018-12-09 21:07:38', '', 0, 'http://localhost/web-teach-code/blog/?p=169', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(170, 1, '2018-12-10 01:23:10', '2018-12-09 18:23:10', '<h2><span id=\"1_GIoi_thieu_con_tro_trong_C\">1. GIới thiệu con trỏ trong C</span></h2>\r\nCác biến chúng ta đã biết và sử dụng trước đây đều là biến có kích thước và kiểu dữ liệu xác định. Người ta gọi các biến kiểu này là biến tĩnh. Khi khai báo biến tĩnh, một lượng ô nhớ cho các biến này sẽ được cấp phát mà không cần biết trong quá trình thực thi chương trình có sử dụng hết lượng ô nhớ này hay không. Mặt khác, các biến tĩnh dạng này sẽ tồn tại trong suốt thời gian thực thi chương trình dù có những biến mà chương trình chỉ sử dụng 1 lần rồi bỏ.\r\n\r\nMột số hạn chế có thể gặp phải khi sử dụng các biến tĩnh:\r\n<ul>\r\n 	<li>Cấp phát ô nhớ dư, gây ra lãng phí ô nhớ.</li>\r\n 	<li>Cấp phát ô nhớ thiếu, chương trình thực thi bị lỗi.</li>\r\n</ul>\r\nĐể tránh những hạn chế trên, ngôn ngữ C cung cấp cho ta một loại biến đặc biệt gọi là biến động với các đặc điểm sau:\r\n<ul>\r\n 	<li>Chỉ phát sinh trong quá trình thực hiện chương trình chứ không phát sinh lúc bắt đầu chương trình.</li>\r\n 	<li>Khi chạy chương trình, kích thước của biến, vùng nhớ và địa chỉ vùng nhớ được cấp phát cho biến có thể thay đổi.</li>\r\n 	<li>Sau khi sử dụng xong có thể giải phóng để tiết kiệm chỗ trong bộ nhớ. Tuy nhiên các biến động không có địa chỉ nhất định nên ta không thể truy cập đến chúng được. Vì thế, ngôn ngữ C lại cung cấp cho ta một loại biến đặc biệt nữa để khắc phục tình trạng này, đó là biến con trỏ (pointer) với các đặc điểm:</li>\r\n 	<li>Biến con trỏ không chứa dữ liệu mà chỉ chứa địa chỉ của dữ liệu hay chứa địa chỉ của ô nhớ chứa dữ liệu.</li>\r\n 	<li>Kích thước của biến con trỏ không phụ thuộc vào kiểu dữ liệu, luôn có kích thước cố định là 2 byte.</li>\r\n</ul>\r\n<h2><span id=\"2_Bien_con_tro\">2. Biến con trỏ</span></h2>\r\nMỗi biến khi được khai báo đều được cấp phát cho 1 vùng nhớ nhất định ở những nơi (địa chỉ) khác nhau. Biến con trỏ <strong>là biến</strong> dùng để lưu trữ địa chỉ của các biến đó.\r\n<h3><span id=\"21_Vi_du\">2.1 Ví dụ</span></h3>\r\n<div>\r\n<div id=\"highlighter_785405\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao bien x va bien con tro px */</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x, *px; </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px = &amp;x;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* &amp;x : tra ve dia chi cua bien x</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* px = &amp;x : gan dia chi cua bien x cho px hay px tro den x</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = 42;</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*px = 7826;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n -------- \\n\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number25 index24 alt2\"></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Kết quả:\r\nNoi dung cua bien x la 42\r\nVi tri cua bien x la 0x7ffe064348fc\r\nNoi dung cua bien x la 42\r\n\r\n<code>--------</code>\r\nNoi dung cua bien x la 7826\r\nNoi dung cua bien x la 7826</blockquote>\r\nQua ví dụ mở đầu này ta có thể rút ra một số điểm sau:\r\n<h3><span id=\"a_Khai_bao_bien_con_tro\">a. Khai báo biến con trỏ</span></h3>\r\nVới mỗi kiểu dữ liệu ta có tương ứng một biến con trỏ có kiểu đó.\r\n\r\n<strong>Kiểu * Tên biến con trỏ;</strong>\r\n\r\nTrong VD trên ta khai báo 1 biến con trỏ px thuộc kiểu int.\r\n<h3><span id=\"b_Quy_dinh_vung_tro_toi_cua_con_tro\">b. Quy định vùng trỏ tới của con trỏ</span></h3>\r\nTa dùng toán tử &amp; để lấy địa chỉ của 1 biến và sau đó gán địa chỉ đó cho biến con trỏ.\r\n<strong>Tên con trỏ = &amp;biến;</strong>\r\n<h3><span id=\"c_Cach_truy_xuat\">c. Cách truy xuất</span></h3>\r\nVới con trỏ px bên trên ta có 2 phép tuy xuất là:\r\n<ul>\r\n 	<li>px : Lấy địa chỉ mà nó lưu giữ (trỏ tới)</li>\r\n 	<li>*px : Lấy giá trị trong vùng nhớ mà nó trỏ tới.</li>\r\n</ul>\r\nTrong VD trên ta có thể thấy sau phép gán <strong>px = &amp;x;</strong> thì việc ta viết:\r\n<ul>\r\n 	<li>px sẽ tương đương với &amp;x</li>\r\n 	<li>*px sẽ tương đương với x. và ta có thể sử dụng *px trong các phép toán, biểu thức.</li>\r\n</ul>\r\n<h3><span id=\"d_Mot_so_phep_toan_tren_bien_con_tro\">d. Một số phép toán trên biến con trỏ</span></h3>\r\n<div>\r\n<div id=\"highlighter_393679\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao bien x va 2 bien con tro px, qx */</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x, *px, *qx; </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px = &amp;x;</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap gia tri cho vung nho px tro toi: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, px); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* px la con tro nen khong viet scanf(\"%d\", &amp;px);  */</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">qx = px; </code><code class=\"cpp comments\">/* gan gia tri cua px cho qx, qx cun tro toi x*/</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, &amp;x);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri cua bien x la %p \\n\"</code><code class=\"cpp plain\">, qx);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, *qx);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// tang gia tri cua o nho len, &lt;=&gt; x = x + 7826</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*px += 7826; </code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Noi dung cua bien x la %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number26 index25 alt1\"></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px++; </code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* cong them mot don vi cho px</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*  =&gt; px tro toi vung nho tiep theo</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number31 index30 alt2\"></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri px tro toi la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number33 index32 alt2\"></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Nhap gia tri cho vung nho px tro toi: 42\r\nVi tri cua bien x la 0xbfba58a0\r\nVi tri cua bien x la 0xbfba58a0\r\nVi tri cua bien x la 0xbfba58a0\r\nNoi dung cua bien x la 42\r\nNoi dung cua bien x la 42\r\nNoi dung cua bien x la 42\r\nNoi dung cua bien x la 7868\r\nVi tri px tro toi la 0xbfba58a4</blockquote>\r\nTrong vd trên ta thấy có một số phép toán trên con trỏ hay gặp sau: (ngoài ra còn nhiều phép toán khác).\r\n<ul>\r\n 	<li>2 biến con trỏ cùng kiểu có thể được gán cho nhau hoặc thực hiện các phép toán cộng cho một số nguyên, trừ 2 con trỏ cho nhau. Ở VD trên ta thực hiện các phép toán:</li>\r\n 	<li>Gán: qx = px; Khi này qx nhận giá trị của px hiện có là địa chỉ của biến x, tức là qx và px cùng trỏ đến x. ngoài ra ta có thể gán như sau: qx = px + 2; với qx, px là các biến con trỏ cùng kiểu. Phép trừ 2 con trỏ cùng kiểu sẽ trả về 1 giá trị nguyên (int). Đây chính là khoảng cách (số phần tử) giữa 2 con trỏ đó</li>\r\n 	<li>Tăng: Các phép tăng giảm, cộng trừ được thực hiện trên biến con trỏ tương tự như với các biến số học. Điểm khác biệt duy nhất là nó tăng giảm, cộng trừ theo đơn byte mà kiểu của nó có.\r\nVD. Trong VD trên ta có phép tăng: px++; Khi này giả sử px đang trỏ đến địa chỉ: 0xbfba58a0 thì sau phép tăng nó có giá trị là (trỏ đến vị trí) 0xbfba58a4 (tăng lên 4) vì px là con trỏ kiểu int mà mỗi biến kiểu int chiếm 4 byte trong bộ nhớ.</li>\r\n 	<li>Ngoài ra chúng ta để ý còn phép thay đổi giá trị của biến x bằng phép toán *px += 3; Ở phép toán này thực chất là ta đã thay đổi giá trị ở ô nhớ (địa chỉ) mà px trỏ tới, từ đó dẫn đến giá trị của biến x cũng thay đổi theo.</li>\r\n</ul>\r\n<strong>Các bạn chú ý:</strong>\r\n<ul>\r\n 	<li>Tùy theo trình dịch mà dung lượng của các kiểu là khác nhau. (trong trình dịch này thì kiểu int chiếm 4 byte nhưng trong trình dịch khác thì nó lại chiếm 2 byte). Để biết dung lượng từng kiểu bạn dùng toán tử sizeof() mà trong bài 2 đã đề cập.</li>\r\n 	<li>Mỗi biến con trỏ, dù là con trỏ thuộc kiểu nào (int, float, double,…) cũng chỉ chiếm 2 byte bộ nhớ để lưu trữ đĩa chỉ của các biến.</li>\r\n</ul>\r\n<h2><span id=\"3_Cap_phat_va_thu_hoi_vung_nho\">3. Cấp phát và thu hồi vùng nhớ</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"a_Cap_phat\">a. Cấp phát:</span></h3>\r\nTrước khi vào phần này ta làm ví dụ nho nhỏ.\r\n<div>\r\n<div id=\"highlighter_644932\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*px;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*px = 42;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri con tro px la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Gia tri con tro px tro toi la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi biên dịch thì sẽ không co lỗi (có cảnh báo), khi chạy sẽ không thể chạy được mà chương trình sẽ thoát ra luôn.\r\nNguyên nhân là khi khai báo biến con trỏ px thì máy mới chỉ cung cấp 2 byte để lưu địa chỉ của biến con trỏ mà chưa cấp phát vùng nhớ để con trỏ px lưu trữ dữ liệu. (tương tự như hợp tác xã cung cấp 2 Kg thóc cho bạn để làm giống nhưng lại không cung cấp cho bạn ruộng đất để bạn reo mạ vậy ).\r\n\r\n<strong>Lưu ý:</strong> Có một số trình dịch sẽ không báo lỗi mà vẫn chạy bình thường nhưng tốt nhất là ta nên cấp phát trước khi sử dụng. Lỗi này sẽ xuất hiện rõ nhất khi bạn sử dụng con trỏ với mảng mà lát nữa ta sẽ đề cập.\r\n\r\nThôi ta đi vào vấn đề chính, làm sao để cấp phát vùng nhớ cho con trỏ.\r\nĐể cấp phát vùng nhớ cho con trỏ ta dùng các hàm sau trong thư viện stdlib.h.\r\n<ul>\r\n 	<li>malloc : tên con trỏ = (kiểu con trỏ *) malloc (sizeof(kiểu con trỏ));</li>\r\n 	<li>calloc : tên con trỏ = (kiểu con trỏ *) malloc (n, sizeof(kiểu con trỏ));</li>\r\n</ul>\r\nTrong đó sizeof(kiểu con trỏ) là kích thước của kiểu; n là số lần của sizeof(kiểu con trỏ) được cấp.\r\n<div>\r\n<div id=\"highlighter_80541\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*px, *qx;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">px = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(</code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">qx = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">calloc</code><code class=\"cpp plain\">(1, </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri con tro px la %p \\n\"</code><code class=\"cpp plain\">, px);</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Gia tri con tro px tro toi la %d \\n\"</code><code class=\"cpp plain\">, *px);</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Vi tri con tro qx la %p \\n\"</code><code class=\"cpp plain\">, qx);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Gia tri con tro qx tro toi la %d \\n\"</code><code class=\"cpp plain\">, *qx);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ đây các bạn chú ý: sự khác nhau duy nhất giữa malloc và calloc mà các bạn hiểu đơn giản là với malloc thì khi cấp phát máy sẽ cấp phát cho px 1 ô bất kỳ mà không cần biết ô đó có dữ liệu là gì hay không có dữ liệu (do đó *px có giá trị như trên) còn calloc cũng vậy nhưng khác 1 điểm là sau khi cấp phát thì máy sẽ tự động gán luôn giá trị 0 cho ô nhớ mà biến qx trỏ tới, tức qx có giá trị mặc định là 0.\r\nKhi cấp phát cho biến con trỏ 1 số lượng ô nhớ nào đó mà trong quá trình làm việc ta thiếu và cần cấp phát thêm thì ta sử dụng lệnh <strong>realloc</strong>:\r\n\r\n<strong>tên con trỏ = (kiểu con trỏ *) realloc (tên con trỏ, số lượng cần cấp phát * sizeof(kiểu con trỏ));</strong>\r\n\r\nTrong đó: số lượng cần cấp phát = cũ + mới.\r\nVD: Ban đầu ta cấp phát cho con trỏ px là 10 ô nhớ.\r\nSau đó muốn cấp phát thêm cho nó 5 ô nhớ nữa thì số lượng cấp phát = 15.\r\n<h3><span id=\"b_Thu_hoi_va_kiem_tra_vung_nho_con_lai\">b. Thu hồi và kiểm tra vùng nhớ còn lại</span></h3>\r\nĐể thu hổi bộ nhớ đã cấp phát ta dùng hàm <strong>free(tên con trỏ);</strong>\r\n<h2><span id=\"3_Ham_co_doi_la_con_tro\">3. Hàm có đối là con trỏ</span></h2>\r\nNhư trong bài <a href=\"https://cachhoc.net/2014/12/17/lap-trinh-c-bai-9-con-tro-trong-c/2018/01/20/ham-hoan-vi-trong-c/\">Hàm hoán vị trong C</a> chúng ta đã biết cách truyền các tham số a,b trong hàm HoanVi là cách truyền bằng tham trị chứ không phải truyền bằng địa chỉ (hay tham biến) nên mặc dù trong hàm thì giá trị các biến đã được thay đổi nhưng sau khi hàm thực hiện xong thì các giá trị vẫn chưa thể thay đổi được. Và ta sẽ phải sửa lại bằng cách truyền tham số hình thức là con trỏ a và con trỏ b để khi thực hiện hoán đổi có thể hoán đổi tại địa chỉ của các ô nhớ đó. Khi đó ta mới có được kết quả mong muốn.\r\n<div>\r\n<div id=\"highlighter_203490\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">// e.g about pointer - code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">hoanVi(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*b) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">temp = *a;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp plain\">*a = *b;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp plain\">*b = temp;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a = 42, b = 7826;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Truoc khi goi ham hoan vi: a = %d, b = %d \\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">hoanVi(&amp;a, &amp;b);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Sau khi goi ham hoan vi: a = %d, b = %d \\n\"</code><code class=\"cpp plain\">, a, b);</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 11 – Con trỏ trong c', '', 'inherit', 'closed', 'closed', '', '169-revision-v1', '', '', '2018-12-10 01:23:10', '2018-12-09 18:23:10', '', 169, 'http://localhost/web-teach-code/blog/2018/12/10/169-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(171, 1, '2018-12-10 01:26:05', '2018-12-09 18:26:05', '<h2><span id=\"1_Con_tro_va_mang_1_chieu\">1. Con trỏ và mảng 1 chiều.</span></h2>\r\nNhư trong bài <a href=\"https://cachhoc.net/2014/12/18/lap-trinh-c-bai-10-moi-quan-giua-con-tro-va-mang-chuoi-ky-tu/2014/12/13/lap-trinh-c-bai-7-mang-trong-c/\">Mảng</a> chúng ta đã biết ta có thể coi biến mảng như một con trỏ, vì vậy ta có thể sử dụng chính biến mảng đó để truy cập mảng theo cách của con trỏ.\r\n<div>\r\n<div id=\"highlighter_766257\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapContro(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, a + i);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number32 index31 alt1\"></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5;</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n];</code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapContro(a, n);</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n);</code></div>\r\n<div class=\"line number40 index39 alt1\"></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number42 index41 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ hàm thứ nhất ta đã quen với cách nhập bình thường, mình sẽ không nói nhiều nữa.\r\n\r\nỞ hàm thứ hai, chúng ta chỉ thay &amp;a bằng a+i vì khi khai báo a[20] thì a coi như là một con trỏ và máy sẽ cấp phát cho ta các ô nhớ liên tiếp từ a đến a + 19. Và a + i là địa chỉ của a[i] (tức nó tương đương với &amp;a[i]). a trỏ đến vị trí a[0].\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/con-tro-va-mang-trong-c.png?w=780&amp;ssl=1\" alt=\"Con trỏ và mảng trong c\" width=\"776\" height=\"92\" /></center><center>Con trỏ và mảng trong C</center>Ngoài ra bạn có thể khai báo 1 mảng sau đó dùng 1 con trỏ trỏ tới đầu mảng thì con trỏ đó cũng trở thành mảng đó.\r\n<div>\r\n<div id=\"highlighter_967541\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5, i;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n], *pa;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">pa = a; </code><code class=\"cpp comments\">// con tro pa tro toi dau mang a</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, pa + i);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, *(pa + i));</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chú ý: tại sao ta không cần cấp phát ô nhớ cho con trỏ pa mà vẫn sử dụng được bình thường, bởi vì ta đã khai báo mảng a[20] nên máy đã cấp phát ô nhớ để lưu trữ mảng a, khi ta thực hiện trỏ con trỏ pa tới mảng a thì các ô nhớ này đã có rồi nên không cần cấp phát ô nhớ cho pa nữa. Ta xét ví dụ sau:\r\n<div>\r\n<div id=\"highlighter_810840\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5, i;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// cap phat bo nho cho pa</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*pa = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(n * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, pa + i);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, *(pa + i));</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ trong VD này ta không khai báo mảng a như VD trước, do đó cũng không thể trỏ pa tới vị trí nào, mà muốn thực hiện được ta cần cấp phát các ô nhớ cho pa như trên.\r\n<h2><span id=\"2_Nhap_mang_trong_ham\">2. Nhập mảng trong hàm</span></h2>\r\nViệc nhập mảng không phải lúc nào cũng thuận lợi vì như các ví dụ trước chúng ta cần phải có số lượng phần tử của mảng trước khi cấp phát hoặc nhập, vậy nếu chúng ta chưa biết trước số phần tử mà lại phải dùng hàm để nhập mảng thì sao. Các bạn xem ví dụ sau.\r\n<div>\r\n<div id=\"highlighter_513259\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapContro(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*(*a), </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*n) </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so phan tu cua mang: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, n); </code><code class=\"cpp comments\">// khong phai &amp;n</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*a = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code> <code class=\"cpp plain\">((*n) * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// *a : lay dia chi cua mang a chu khong phai gia tri cua a</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; *n; i++) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, (*a + i));</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number29 index28 alt2\"></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*a, n;</code></div>\r\n<div class=\"line number33 index32 alt2\"></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapContro(&amp;a, &amp;n); </code><code class=\"cpp comments\">// lay dia chi cua a va n</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n);</code></div>\r\n<div class=\"line number36 index35 alt1\"></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTrong VD này ta thực hiện nhập và xuất mảng trong hàm, cấp phát bộ nhớ cũng trong hàm luôn. Các chú thích mình đã ghi rõ trong chương trình rồi.\r\n\r\nCó 1 điểm chú ý là trong hàm nhập mảng a bằng con trỏ thì có 2 dấu *. 1 dấu là của mảng a (dấu thứ 2), còn dấu đầu tiên là dùng để truyền địa chỉ làm giá trị của mảng có thể giữ nguyên khi ra khỏi hàm, nó giống như là dấu * trong hàm <strong>HoanVi(int *a,int *b)</strong> vậy.\r\n<h2><span id=\"3Con_tro_va_xau_ky_tu\">3.Con trỏ và xâu ký tự</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nDo xâu ký tự bản chất cũng là mảng các ký tự nên phần này nó cũng tương tự như mảng 1 chiều, mình sẽ nói qua 1 chút bằng 1 ví dụ đơn giản.\r\n<div>\r\n<div id=\"highlighter_192503\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">*name;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">name = (</code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code> <code class=\"cpp plain\">(100*</code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"What your name? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(name);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Oh, Hello %s\\n\"</code><code class=\"cpp plain\">, name);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"4_Con_tro_va_mang_2_chieu_mang_cac_con_tro_Con_tro_da_cap\">4. Con trỏ và mảng 2 chiều, mảng các con trỏ – Con trỏ đa cấp</span></h2>\r\n<h3><span id=\"a_Con_tro_va_mang_2_chieu\">a. Con trỏ và mảng 2 chiều</span></h3>\r\nPhần trên chúng ta đã tìm hiểu về con trỏ và mảng 1 chiều, và phần này con trỏ và mảng 2 chiều cũng tương tự như vậy.\r\n\r\nNhư ta đã biết thực chất trong máy tính thì bộ nhớ lưu mảng 2 chiều giống như mảng 1 chiều. Vì vậy ta hoàn toàn có thể biểu diễn mảng 2 chiều bằng con trỏ giống như mảng 1 chiều.\r\n<div>\r\n<div id=\"highlighter_682786\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">a[10][10], *pa;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, m, i;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">pa = (</code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">*) a;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so hang va so cot:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %d\"</code><code class=\"cpp plain\">, &amp;n, &amp;m);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n * m; i++) </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i / m, i % m);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, pa + i);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n * m; i++) </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code> <code class=\"cpp plain\">(i % m == 0) </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5.2lf\"</code><code class=\"cpp plain\">, *(pa + i));</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Nhap so hang va so cot:\r\n2\r\n3\r\nNhap a[0][0] = 4.23\r\nNhap a[0][1] = 5.7\r\nNhap a[0][2] = 1.2\r\nNhap a[1][0] = 8.6\r\nNhap a[1][1] = 3.456\r\nNhap a[1][2] = 12\r\n\r\n4.23 5.70 1.20\r\n8.60 3.46 12.00</blockquote>\r\nNgoài ra, chúng ta có thể không cần dùng pa mà dùng ngay a là 1 con trỏ. Hoặc ta có thể nhập 1 cách tương tự như mảng 2 chiều bình thường như sau.\r\n\r\nCác bạn lưu ý là tại sao ta lại có <strong>pa + i*10 + j</strong>. Đó là vì ở hàm main() ta khai báo là <code>a[10][10]</code> nên máy cấp phát cho chúng ta các ô nhớ của mảng 2 chiều với 10 hàng, 10 cột mà nếu ta ko dùng hết thì nó vẫn tồn tại.\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/con-tro-va-mang-2-chieu-trong-c.png?w=780&amp;ssl=1\" alt=\"Con trỏ và mảng trong c\" width=\"572\" height=\"214\" /></center><center>Con trỏ và mảng 2 chiều trong C</center>Các bạn chú ý là ta có thể viết a[i][j] nhưng <strong>không thể viết pa[i][j]</strong> vì theo khai báo thì a là mảng 2 chiều nên ta có thể viết như vậy còn pa là 1 con trỏ và khi ta gán pa = a thì ta đã ngầm định coi a là mảng 1 chiều. Vì vậy nếu có thì chúng ta cũng chỉ được phép viết pa[i<em>10+j] (lấy giá trị) và &amp;pa[i</em>10+j] (lấy địa chỉ).\r\n<h3><span id=\"b_Mang_cac_con_tro\">b. Mảng các con trỏ</span></h3>\r\nMảng con trỏ là một mảng chứa tập hợp các con trỏ cùng một kiểu.\r\nFloat *a[10]; // khai báo một mảng con trỏ. Gồm 10 con trỏ: a[0], a[1], …a[9]; là 10 con trỏ.\r\nLiên hệ với mảng 2 chiều thì ta có nhận xét sau: Mỗi hàng của mảng 2 chiều ta coi như 1 mảng 1 chiều. Mà mỗi con trỏ thì lại có mối quan hệ với 1 mảng 1 chiều, ta có hình vẽ:\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/mang-cac-con-tro.png?w=780&amp;ssl=1\" alt=\"Con trỏ và mảng trong c\" width=\"381\" height=\"199\" /></center><center>Con trỏ và mảng 2 chiều trong C</center>\r\n<div>\r\n<div id=\"highlighter_303450\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">a[10][10], *pa[10];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, m, i, j;</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so hang va so cot: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %d\"</code><code class=\"cpp plain\">, &amp;n, &amp;m);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">pa[i] = a[i]; </code><code class=\"cpp comments\">// con tro thu i tro den hang thu i</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i, j);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;pa[i][j]);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5.2lf\"</code><code class=\"cpp plain\">, pa[i][j]);</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number31 index30 alt2\"></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nSở dĩ ở VD này ta viết được pa[i][j] đó là do mỗi pa là 1 con trỏ đến mảng một chiều. pa[i][j] tức là phần tử thứ j của con trỏ pa[i].\r\n\r\nCác ví dụ ở trên chúng ta đều xét khi mà khai báo mảng a[][] nên không cần cấp phát bộ nhớ cho con trỏ, bây giờ muốn cấp phát bộ nhớ cho con trỏ với mảng 2 chiều giống như cấp phát ở mảng 1 chiều thì ta làm như sau:\r\n<div>\r\n<div id=\"highlighter_421439\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">**pa;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, m, i, j;</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so hang va so cot: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %d\"</code><code class=\"cpp plain\">, &amp;n, &amp;m);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// cap phat n o nho cho n con tro (n hang)</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">pa = (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">**) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(n * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp comments\">// cap phat m o nho cho moi con tro (moi hang)</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">pa[i] = (</code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(m * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i, j);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;pa[i][j]);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number26 index25 alt1\"></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5.2lf\"</code><code class=\"cpp plain\">, pa[i][j]);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number35 index34 alt2\"></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nĐây cũng có thể coi là mảng con trỏ, hoặc con trỏ trỏ đến con trỏ (con trỏ đa cấp).', 'Lập trình C: Bài 12 – Mối quan hệ giữa con trỏ và mảng, chuỗi ký tự', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-12-moi-quan-he-giua-con-tro-va-mang-chuoi-ky-tu', '', '', '2018-12-10 04:07:22', '2018-12-09 21:07:22', '', 0, 'http://localhost/web-teach-code/blog/?p=171', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(172, 1, '2018-12-10 01:26:05', '2018-12-09 18:26:05', '<h2><span id=\"1_Con_tro_va_mang_1_chieu\">1. Con trỏ và mảng 1 chiều.</span></h2>\r\nNhư trong bài <a href=\"https://cachhoc.net/2014/12/18/lap-trinh-c-bai-10-moi-quan-giua-con-tro-va-mang-chuoi-ky-tu/2014/12/13/lap-trinh-c-bai-7-mang-trong-c/\">Mảng</a> chúng ta đã biết ta có thể coi biến mảng như một con trỏ, vì vậy ta có thể sử dụng chính biến mảng đó để truy cập mảng theo cách của con trỏ.\r\n<div>\r\n<div id=\"highlighter_766257\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;a[i]);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapContro(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, a + i);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[], </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number32 index31 alt1\"></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// khai bao mang a co n phan tu</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5;</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n];</code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapContro(a, n);</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n);</code></div>\r\n<div class=\"line number40 index39 alt1\"></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number42 index41 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ hàm thứ nhất ta đã quen với cách nhập bình thường, mình sẽ không nói nhiều nữa.\r\n\r\nỞ hàm thứ hai, chúng ta chỉ thay &amp;a bằng a+i vì khi khai báo a[20] thì a coi như là một con trỏ và máy sẽ cấp phát cho ta các ô nhớ liên tiếp từ a đến a + 19. Và a + i là địa chỉ của a[i] (tức nó tương đương với &amp;a[i]). a trỏ đến vị trí a[0].\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/con-tro-va-mang-trong-c.png?w=780&amp;ssl=1\" alt=\"Con trỏ và mảng trong c\" width=\"776\" height=\"92\" /></center><center>Con trỏ và mảng trong C</center>Ngoài ra bạn có thể khai báo 1 mảng sau đó dùng 1 con trỏ trỏ tới đầu mảng thì con trỏ đó cũng trở thành mảng đó.\r\n<div>\r\n<div id=\"highlighter_967541\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5, i;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a[n], *pa;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">pa = a; </code><code class=\"cpp comments\">// con tro pa tro toi dau mang a</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, pa + i);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, *(pa + i));</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chú ý: tại sao ta không cần cấp phát ô nhớ cho con trỏ pa mà vẫn sử dụng được bình thường, bởi vì ta đã khai báo mảng a[20] nên máy đã cấp phát ô nhớ để lưu trữ mảng a, khi ta thực hiện trỏ con trỏ pa tới mảng a thì các ô nhớ này đã có rồi nên không cần cấp phát ô nhớ cho pa nữa. Ta xét ví dụ sau:\r\n<div>\r\n<div id=\"highlighter_810840\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 5, i;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// cap phat bo nho cho pa</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*pa = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(n * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, pa + i);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, *(pa + i));</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ trong VD này ta không khai báo mảng a như VD trước, do đó cũng không thể trỏ pa tới vị trí nào, mà muốn thực hiện được ta cần cấp phát các ô nhớ cho pa như trên.\r\n<h2><span id=\"2_Nhap_mang_trong_ham\">2. Nhập mảng trong hàm</span></h2>\r\nViệc nhập mảng không phải lúc nào cũng thuận lợi vì như các ví dụ trước chúng ta cần phải có số lượng phần tử của mảng trước khi cấp phát hoặc nhập, vậy nếu chúng ta chưa biết trước số phần tử mà lại phải dùng hàm để nhập mảng thì sao. Các bạn xem ví dụ sau.\r\n<div>\r\n<div id=\"highlighter_513259\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">nhapContro(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*(*a), </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*n) </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so phan tu cua mang: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, n); </code><code class=\"cpp comments\">// khong phai &amp;n</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">*a = (</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code> <code class=\"cpp plain\">((*n) * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// *a : lay dia chi cua mang a chu khong phai gia tri cua a</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; *n; i++) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d] = \"</code><code class=\"cpp plain\">, i);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, (*a + i));</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp keyword bold\">void</code> <code class=\"cpp plain\">xuatMang(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*a, </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n) </code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code> <code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d \\t\"</code><code class=\"cpp plain\">, a[i]);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number29 index28 alt2\"></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">*a, n;</code></div>\r\n<div class=\"line number33 index32 alt2\"></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">nhapContro(&amp;a, &amp;n); </code><code class=\"cpp comments\">// lay dia chi cua a va n</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">xuatMang(a, n);</code></div>\r\n<div class=\"line number36 index35 alt1\"></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTrong VD này ta thực hiện nhập và xuất mảng trong hàm, cấp phát bộ nhớ cũng trong hàm luôn. Các chú thích mình đã ghi rõ trong chương trình rồi.\r\n\r\nCó 1 điểm chú ý là trong hàm nhập mảng a bằng con trỏ thì có 2 dấu *. 1 dấu là của mảng a (dấu thứ 2), còn dấu đầu tiên là dùng để truyền địa chỉ làm giá trị của mảng có thể giữ nguyên khi ra khỏi hàm, nó giống như là dấu * trong hàm <strong>HoanVi(int *a,int *b)</strong> vậy.\r\n<h2><span id=\"3Con_tro_va_xau_ky_tu\">3.Con trỏ và xâu ký tự</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nDo xâu ký tự bản chất cũng là mảng các ký tự nên phần này nó cũng tương tự như mảng 1 chiều, mình sẽ nói qua 1 chút bằng 1 ví dụ đơn giản.\r\n<div>\r\n<div id=\"highlighter_192503\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">*name;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">name = (</code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code> <code class=\"cpp plain\">(100*</code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">char</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"What your name? \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(name);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Oh, Hello %s\\n\"</code><code class=\"cpp plain\">, name);</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"4_Con_tro_va_mang_2_chieu_mang_cac_con_tro_Con_tro_da_cap\">4. Con trỏ và mảng 2 chiều, mảng các con trỏ – Con trỏ đa cấp</span></h2>\r\n<h3><span id=\"a_Con_tro_va_mang_2_chieu\">a. Con trỏ và mảng 2 chiều</span></h3>\r\nPhần trên chúng ta đã tìm hiểu về con trỏ và mảng 1 chiều, và phần này con trỏ và mảng 2 chiều cũng tương tự như vậy.\r\n\r\nNhư ta đã biết thực chất trong máy tính thì bộ nhớ lưu mảng 2 chiều giống như mảng 1 chiều. Vì vậy ta hoàn toàn có thể biểu diễn mảng 2 chiều bằng con trỏ giống như mảng 1 chiều.\r\n<div>\r\n<div id=\"highlighter_682786\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">a[10][10], *pa;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, m, i;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">pa = (</code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">*) a;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so hang va so cot:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %d\"</code><code class=\"cpp plain\">, &amp;n, &amp;m);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n * m; i++) </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i / m, i % m);</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, pa + i);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number18 index17 alt1\"></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n * m; i++) </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code> <code class=\"cpp plain\">(i % m == 0) </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5.2lf\"</code><code class=\"cpp plain\">, *(pa + i));</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<blockquote>Nhap so hang va so cot:\r\n2\r\n3\r\nNhap a[0][0] = 4.23\r\nNhap a[0][1] = 5.7\r\nNhap a[0][2] = 1.2\r\nNhap a[1][0] = 8.6\r\nNhap a[1][1] = 3.456\r\nNhap a[1][2] = 12\r\n\r\n4.23 5.70 1.20\r\n8.60 3.46 12.00</blockquote>\r\nNgoài ra, chúng ta có thể không cần dùng pa mà dùng ngay a là 1 con trỏ. Hoặc ta có thể nhập 1 cách tương tự như mảng 2 chiều bình thường như sau.\r\n\r\nCác bạn lưu ý là tại sao ta lại có <strong>pa + i*10 + j</strong>. Đó là vì ở hàm main() ta khai báo là <code>a[10][10]</code> nên máy cấp phát cho chúng ta các ô nhớ của mảng 2 chiều với 10 hàng, 10 cột mà nếu ta ko dùng hết thì nó vẫn tồn tại.\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/con-tro-va-mang-2-chieu-trong-c.png?w=780&amp;ssl=1\" alt=\"Con trỏ và mảng trong c\" width=\"572\" height=\"214\" /></center><center>Con trỏ và mảng 2 chiều trong C</center>Các bạn chú ý là ta có thể viết a[i][j] nhưng <strong>không thể viết pa[i][j]</strong> vì theo khai báo thì a là mảng 2 chiều nên ta có thể viết như vậy còn pa là 1 con trỏ và khi ta gán pa = a thì ta đã ngầm định coi a là mảng 1 chiều. Vì vậy nếu có thì chúng ta cũng chỉ được phép viết pa[i<em>10+j] (lấy giá trị) và &amp;pa[i</em>10+j] (lấy địa chỉ).\r\n<h3><span id=\"b_Mang_cac_con_tro\">b. Mảng các con trỏ</span></h3>\r\nMảng con trỏ là một mảng chứa tập hợp các con trỏ cùng một kiểu.\r\nFloat *a[10]; // khai báo một mảng con trỏ. Gồm 10 con trỏ: a[0], a[1], …a[9]; là 10 con trỏ.\r\nLiên hệ với mảng 2 chiều thì ta có nhận xét sau: Mỗi hàng của mảng 2 chiều ta coi như 1 mảng 1 chiều. Mà mỗi con trỏ thì lại có mối quan hệ với 1 mảng 1 chiều, ta có hình vẽ:\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2014/12/mang-cac-con-tro.png?w=780&amp;ssl=1\" alt=\"Con trỏ và mảng trong c\" width=\"381\" height=\"199\" /></center><center>Con trỏ và mảng 2 chiều trong C</center>\r\n<div>\r\n<div id=\"highlighter_303450\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">a[10][10], *pa[10];</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, m, i, j;</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so hang va so cot: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %d\"</code><code class=\"cpp plain\">, &amp;n, &amp;m);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">pa[i] = a[i]; </code><code class=\"cpp comments\">// con tro thu i tro den hang thu i</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i, j);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;pa[i][j]);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5.2lf\"</code><code class=\"cpp plain\">, pa[i][j]);</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number31 index30 alt2\"></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nSở dĩ ở VD này ta viết được pa[i][j] đó là do mỗi pa là 1 con trỏ đến mảng một chiều. pa[i][j] tức là phần tử thứ j của con trỏ pa[i].\r\n\r\nCác ví dụ ở trên chúng ta đều xét khi mà khai báo mảng a[][] nên không cần cấp phát bộ nhớ cho con trỏ, bây giờ muốn cấp phát bộ nhớ cho con trỏ với mảng 2 chiều giống như cấp phát ở mảng 1 chiều thì ta làm như sau:\r\n<div>\r\n<div id=\"highlighter_421439\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">**pa;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, m, i, j;</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so hang va so cot: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d %d\"</code><code class=\"cpp plain\">, &amp;n, &amp;m);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// cap phat n o nho cho n con tro (n hang)</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">pa = (</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">**) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(n * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp comments\">// cap phat m o nho cho moi con tro (moi hang)</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">pa[i] = (</code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(m * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">double</code><code class=\"cpp plain\">));</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a[%d][%d] = \"</code><code class=\"cpp plain\">, i, j);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;pa[i][j]);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number26 index25 alt1\"></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0 ; i &lt; n; i++) </code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n\"</code><code class=\"cpp plain\">); </code><code class=\"cpp comments\">// xuong dong</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(j = 0 ; j &lt; m; j++) </code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-5.2lf\"</code><code class=\"cpp plain\">, pa[i][j]);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number35 index34 alt2\"></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nĐây cũng có thể coi là mảng con trỏ, hoặc con trỏ trỏ đến con trỏ (con trỏ đa cấp).', 'Lập trình C: Bài 12 – Mối quan hệ giữa con trỏ và mảng, chuỗi ký tự', '', 'inherit', 'closed', 'closed', '', '171-revision-v1', '', '', '2018-12-10 01:26:05', '2018-12-09 18:26:05', '', 171, 'http://localhost/web-teach-code/blog/2018/12/10/171-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(173, 1, '2018-12-10 01:26:32', '2018-12-09 18:26:32', 'Cách đơn giản nhất để tiếp cận về kiểu cấu trúc là xét ví dụ sinh viên. Một lớp có 100 sinh viên mỗi sinh viên gồm họ tên và mã sinh viên. Hãy nhập dữ liệu cho lớp đó. Hehe. Bạn nghĩ đến cách dùng 2 mảng: 1 mảng lưu tên, 1 mảng lưu mã sinh viên đúng không. Đúng, cách đó không sai… nhưng hãy xem yêu cầu tiếp theo… Thi học kỳ xong, hãy nhập điểm cho từng sinh viên, mỗi sinh viên gồm 10 môn (Toán, Tin, Hóa, Vật lý,…). Giờ bạn thấy sao nào… Dùng 12 mảng chăng… ồ không nên, hãy dùng <strong>kiểu cấu trúc</strong>. Với kiểu cấu trúc chỉ cần 1 mảng mà thôi.\r\n<h2><span id=\"1_Kieu_cau_truc\">1. Kiểu cấu trúc</span></h2>\r\nĐối với mảng, chỉ có thể lưu nhiều thông tin có cùng kiểu dữ liệu. Nhưng với kiểu cấu trúc ta có thể lưu thông tin có nhiều kiểu dữ liệu khác nhau.\r\n<h3><span id=\"11_VD_mo_dau\">1.1 VD mở đầu</span></h3>\r\n<div>\r\n<div id=\"highlighter_870439\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div>\r\n<div class=\"line number43 index42 alt2\">43</div>\r\n<div class=\"line number44 index43 alt1\">44</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp comments\">// khai bao struct</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp comments\">/* Hay thay tat ca fflush(stdin); thanh __fpurge(stdin) khi ban lam tren linux*/</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao 2 bien sv1, sv2 va 1 mang</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* CNPMK10A gom 100 sinh vien</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien sv1, sv2, CNPMK10A[100];</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sv1:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.MSV);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.hoten);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem toan, tin, anh: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf %lf %lf\"</code><code class=\"cpp plain\">, &amp;sv1.toan, &amp;sv1.tin, &amp;sv1.anh);</code></div>\r\n<div class=\"line number29 index28 alt2\"></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sv2:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv2.MSV);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv2.hoten);</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem toan, tin, anh: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf %lf %lf\"</code><code class=\"cpp plain\">, &amp;sv2.toan, &amp;sv2.tin, &amp;sv2.anh);</code></div>\r\n<div class=\"line number37 index36 alt2\"></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-7s %-7s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Toan\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Tin\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Anh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number40 index39 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %-7.2lf %-7.2lf\\n\"</code><code class=\"cpp plain\">, sv1.MSV, sv1.hoten, sv1.toan, sv1.tin, sv1.anh);</code></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %-7.2lf %-7.2lf\\n\"</code><code class=\"cpp plain\">, sv2.MSV, sv2.hoten, sv2.toan, sv2.tin, sv2.anh);</code></div>\r\n<div class=\"line number42 index41 alt1\"></div>\r\n<div class=\"line number43 index42 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number44 index43 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<div>\r\n<div id=\"highlighter_220815\" class=\"syntaxhighlighter plain\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"plain plain\">Nhap du lieu cho sv1:</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"plain plain\">MSV: DTC1</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"plain plain\">Ho ten: Pham Thi Ha</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"plain plain\">Diem toan, tin, anh: 9 9 8</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"plain plain\">Nhap du lieu cho sv2:</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"plain plain\">MSV: DTC2</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"plain plain\">Ho ten: Nguyen Van Quan</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"plain plain\">Diem toan, tin, anh: 9 9 8</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"plain spaces\"> </code><code class=\"plain plain\">--------- Thong tin sinh vien -----</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"plain plain\">MSV                  Ho ten                         Toan    Tin     Anh</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"plain plain\">DTC1                 Pham Thi Ha                    9.00    9.00    8.00</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"plain plain\">DTC2                 Nguyen Van Quan                9.00    9.00    8.00</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ VD mở đầu này, chúng ta có rất nhiều điểu phải bàn 🙂\r\n<h3><span id=\"12_Xay_dung_kieu_cau_truc_khai_bao_bien_cau_truc\">1.2 Xây dựng kiểu cấu trúc, khai báo biến cấu trúc</span></h3>\r\nNhư VD trên, để xây dựng 1 kiểu cấu trúc ta thực hiện theo cú pháp:\r\n<div>\r\n<div id=\"highlighter_636205\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">TenKieuCauTruc</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">Khai báo các thành phần của kiểu;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">};</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nSau khi có kiểu cấu trúc rồi thì cái kiểu đó nó tương tự như 1 kiểu bình thường (int, float, char,…) và ta chỉ việc khai báo biến nữa là xong. Tuy nhiên khai báo biến thì cần có thêm từ khóa struct ở trước: (Đối với C++ thì không cần).\r\n\r\n<strong>struct TenKieuCauTruc TenBienCauTruc;</strong>\r\n\r\nNgoài ta chúng ta còn một số cách xây dựng kiểu cấu trúc và khai báo biến cấu trúc như sau:\r\n<div>\r\n<div id=\"highlighter_577851\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">TenKieuCauTruc</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">Khai báo các thành phần của kiểu;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">} danh sách các biến thuộc kiểu cấu trúc;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nHoặc\r\n<div>\r\n<div id=\"highlighter_951366\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">Khai báo các thành phần của kiểu;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">} danh sách các biến thuộc kiểu cấu trúc ;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nVới cách khai báo này, ta bắt buộc phải khai báo các biến cấu trúc ở ngay sau cấu trúc vì không có tên kiểu cấu trúc để cho ta khai báo ở các vị trí khác nữa.\r\nTrong phần này ta cần đề cập đến 1 từ khóa quan trọng nữa, đó là <strong>typedef</strong>. Từ khóa này dùng để định nghĩa 1 kiểu dữ liệu mới.\r\n<div>\r\n<div id=\"highlighter_769683\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">typedef</code> <code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">} kieuSinhVien;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi này ta có <strong>kieuSinhVien</strong> là 1 kiểu dữ liệu (như int, double, …) và ta có thể khai báo các biến cấu trúc thông qua nó. Trong này có vài điều các bạn cần chú ý:\r\n<ul>\r\n 	<li>Với <strong>sinhvien</strong> (kiểu cấu trúc được đặt sau từ khóa struct) thì khi khai báo biến thuộc kiểu này ta vẫn phải có từ struct ở trước nó. (VD: sinhvien svA; -&gt; Sai còn struct sinhvien svA; -&gt; đúng), (chú ý trong C++ thì không cần).</li>\r\n 	<li>Với <strong>kieuSinhVIen</strong> thì khi khai báo biến thuộc kiểu này ta <strong>không được có từ struct</strong> ở trước nó. (VD: struct kieuSinhVIen svA; -&gt; sai, kieuSinhVIen svA; -&gt; đúng).</li>\r\n</ul>\r\nNgoài ra ta còn có thể khai báo kiểu cấu trúc lồng nhau: VD như trong 1 sinh viên có ngày sinh, trong ngày sinh lại có ngày, tháng, năm sinh.\r\n<div>\r\n<div id=\"highlighter_139863\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number5 index4 alt2\"></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp keyword bold\">typedef</code> <code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh ns;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">} kieuSinhVien;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nHoặc ta khai báo ngay trong cấu trúc:\r\n<div>\r\n<div id=\"highlighter_493464\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">typedef</code> <code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} ns;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp plain\">} kieuSinhVien;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"13_Truy_cap_den_cac_thanh_phan_cua_cau_truc\">1.3 Truy cập đên các thành phần của cấu trúc</span></h3>\r\nĐể truy nhập đến thành phần của cấu trúc ta sử dụng toán tử chấm (.).\r\n\r\n<strong>TenBienCauTruc.TenThanhPhan;</strong>\r\n\r\nNhư VD trên ta truy cập như sau:\r\nsv1.hoten; sv1.toan; // truy xuất tới họ tên, điểm toán\r\nsv1.ns.ngay; sv1.ns.thang; // truy xuất tới ngày sinh và tháng sinh.\r\n…\r\n\r\nKhi đã truy xuất được tới các thành phần của cấu trúc thì mỗi thành phần đó là 1 biến bình thường và ta gán giá trị hoặc nhập xuất giá trị cho chúng như cách bình thường mà chúng ta vẫn làm.\r\n\r\nNgoài ra nếu thành phần nào đó dài dòng thì ta có thể tránh việc dài dòng này bằng cách sử dụng từ khóa define.\r\nVD thay vì viết:\r\n<div>\r\n<div id=\"highlighter_989813\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">sv1.ns.thang;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">sv1.ns.nam;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTa viết:\r\n<div>\r\n<div id=\"highlighter_10140\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#define p sv1.ns</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">p.thang;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp plain\">p.nam;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"14_Gan_cac_bien_co_cung_kieu_cau_truc\">1.4 Gán các biến có cùng kiểu cấu trúc</span></h3>\r\n<div>\r\n<div id=\"highlighter_768922\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp comments\">/* Hay thay tat ca fflush(stdin); thanh __fpurge(stdin) khi ban lam tren linux*/</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao 2 bien sv1, sv2 va 1 mang</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* CNPMK10A gom 100 sinh vien</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien sv1, sv2, CNPMK10A[100];</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sv1:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.MSV);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.hoten);</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem toan, tin, anh: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf %lf %lf\"</code><code class=\"cpp plain\">, &amp;sv1.toan, &amp;sv1.tin, &amp;sv1.anh);</code></div>\r\n<div class=\"line number28 index27 alt1\"></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">sv2 = sv1; </code><code class=\"cpp comments\">// gan gia tri cua sv1 cho sv2</code></div>\r\n<div class=\"line number30 index29 alt1\"></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-7s %-7s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Toan\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Tin\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Anh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %-7.2lf %-7.2lf\\n\"</code><code class=\"cpp plain\">, sv2.MSV, sv2.hoten, sv2.toan, sv2.tin, sv2.anh);</code></div>\r\n<div class=\"line number34 index33 alt1\"></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nSau khi gán sv2 = sv1 thì mọi thông tin của sv1 có thì sv2 cũng có. Ngoài ra ta còn có thể gán giá trị khởi đầu cho cấu trúc.\r\n\r\n<code>struct sinhvien sv1 = {\"ABC\", \"Nguyen Van Quan\", 9, 9, 8, {4, 5, 1992}};</code>\r\n\r\nKhi đó ta có các dữ liệu ban đầu của sv1 là:\r\n<div>\r\n<div id=\"highlighter_606915\" class=\"syntaxhighlighter plain\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"plain plain\">MSV: ABC</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"plain plain\">hoten: Nguyen Van Quan</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"plain plain\">toan: 9</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"plain plain\">tin: 9</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"plain plain\">anh: 8</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"plain plain\">ngày sinh: 4/5/1992.</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"2_Mang_cau_truc\">2. Mảng cấu trúc</span></h2>\r\nBên trên ta đã tìm hiểu cơ bản về kiểu cấu trúc và một vài ví dụ về cấu trúc sinhvien. Bây giờ ta tìm hiểu cách biểu diễn 1 mảng 50 sinh viên của 1 lớp học có kiểu cấu trúc như trên. Ta xét VD:\r\n<div>\r\n<div id=\"highlighter_71028\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div>\r\n<div class=\"line number43 index42 alt2\">43</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">diemTB; </code><code class=\"cpp comments\">// diem trung binh</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} ns;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 2, i;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien CNPMK10A[n];</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp preprocessor\">#define sv CNPMK10A[i]</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sinh vien thu %d:\\n\"</code><code class=\"cpp plain\">, i + 1);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin)</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv.MSV);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv.hoten);</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem TB: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin)</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;sv.diemTB);</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ngay sinh: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d/%d/%d\"</code><code class=\"cpp plain\">, &amp;sv.ns.ngay, &amp;sv.ns.thang, &amp;sv.ns.nam);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}   </code></div>\r\n<div class=\"line number34 index33 alt1\"></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-10s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Diem Tb\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ngay sinh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp preprocessor\">#define sv CNPMK10A[i]</code></div>\r\n<div class=\"line number40 index39 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %02d/%02d/%4d\\n\"</code><code class=\"cpp plain\">, sv.MSV, sv.hoten, sv.diemTB, sv.ns.ngay, sv.ns.thang, sv.ns.nam);</code></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number42 index41 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number43 index42 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<div>\r\n<div id=\"highlighter_906937\" class=\"syntaxhighlighter plain\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"plain plain\">Nhap du lieu cho sinh vien thu 1:</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"plain plain\">MSV: DTC1</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"plain plain\">Ho ten: Pham Thi Ha</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"plain plain\">Diem TB: 9.2</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"plain plain\">Ngay sinh: 21/01/1993</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"plain plain\">Nhap du lieu cho sinh vien thu 2:</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"plain plain\">MSV: DTC2</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"plain plain\">Ho ten: Nguyen Van Quan</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"plain plain\">Diem TB: 9.2</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"plain plain\">Ngay sinh: 31/12/1992</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"plain spaces\"> </code><code class=\"plain plain\">--------- Thong tin sinh vien -----</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"plain plain\">MSV                  Ho ten                         Diem Tb Ngay sinh</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"plain plain\">DTC1                 Pham Thi Ha                    9.20    21/01/1993</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"plain plain\">DTC2                 Nguyen Van Quan                9.20    31/12/1992</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Con_tro_cau_truc\">3. Con trỏ cấu trúc</span></h2>\r\n<div>\r\n<div id=\"highlighter_970788\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div>\r\n<div class=\"line number43 index42 alt2\">43</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">diemTB; </code><code class=\"cpp comments\">// diem trung binh</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} ns;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 2, i;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// cap phat bo nho</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien *CNPMK10A = (</code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(n * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien));</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sinh vien thu %d:\\n\"</code><code class=\"cpp plain\">, i + 1);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(CNPMK10A[i].MSV);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(CNPMK10A[i].hoten);</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem TB: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;(CNPMK10A+i)-&gt;diemTB);</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ngay sinh: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d/%d/%d\"</code><code class=\"cpp plain\">, &amp;(CNPMK10A+i)-&gt;ns.ngay, &amp;(CNPMK10A+i)-&gt;ns.thang, &amp;(CNPMK10A+i)-&gt;ns.nam);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}   </code></div>\r\n<div class=\"line number34 index33 alt1\"></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-10s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Diem Tb\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ngay sinh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp preprocessor\">#define ns CNPMK10A[i].ns</code></div>\r\n<div class=\"line number40 index39 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %02d/%02d/%4d\\n\"</code><code class=\"cpp plain\">, CNPMK10A[i].MSV, (*(CNPMK10A+i)).hoten, (CNPMK10A+i)-&gt;diemTB, ns.ngay, ns.thang, ns.nam);</code></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number42 index41 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number43 index42 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Truy cập các thành phần cấu trúc</strong>\r\n\r\nĐể truy cập để lấy dữ liệu các thành phần của con trỏ cấu trúc ta có 3 cách sau:\r\n<ul>\r\n 	<li>Cách 1: CNPMK10A[i].diemTB;</li>\r\n 	<li>Cách 2: (*(CNPMK10A+i)).diemTB;</li>\r\n 	<li>Cách 3: (CNPMK10A+i) -&gt;diemTB;</li>\r\n</ul>\r\nCả 3 cách trên đều truy cập tới DTB.\r\n\r\nĐể lấy địa chỉ ta cũng có 2 cách:\r\n<ul>\r\n 	<li>Cách 1: &amp;CNPMK10A[i].DTB;</li>\r\n 	<li>Cách 2: &amp;(CNPMK10A+i)-&gt;diemTB</li>\r\n</ul>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<div id=\"jp-relatedposts\" class=\"jp-relatedposts\"></div>', 'Lập trình C: Bài 13 – Kiểu cấu trúc – struct', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-13-kieu-cau-truc-struct', '', '', '2018-12-10 04:07:06', '2018-12-09 21:07:06', '', 0, 'http://localhost/web-teach-code/blog/?p=173', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(174, 1, '2018-12-10 01:26:32', '2018-12-09 18:26:32', 'Cách đơn giản nhất để tiếp cận về kiểu cấu trúc là xét ví dụ sinh viên. Một lớp có 100 sinh viên mỗi sinh viên gồm họ tên và mã sinh viên. Hãy nhập dữ liệu cho lớp đó. Hehe. Bạn nghĩ đến cách dùng 2 mảng: 1 mảng lưu tên, 1 mảng lưu mã sinh viên đúng không. Đúng, cách đó không sai… nhưng hãy xem yêu cầu tiếp theo… Thi học kỳ xong, hãy nhập điểm cho từng sinh viên, mỗi sinh viên gồm 10 môn (Toán, Tin, Hóa, Vật lý,…). Giờ bạn thấy sao nào… Dùng 12 mảng chăng… ồ không nên, hãy dùng <strong>kiểu cấu trúc</strong>. Với kiểu cấu trúc chỉ cần 1 mảng mà thôi.\r\n<h2><span id=\"1_Kieu_cau_truc\">1. Kiểu cấu trúc</span></h2>\r\nĐối với mảng, chỉ có thể lưu nhiều thông tin có cùng kiểu dữ liệu. Nhưng với kiểu cấu trúc ta có thể lưu thông tin có nhiều kiểu dữ liệu khác nhau.\r\n<h3><span id=\"11_VD_mo_dau\">1.1 VD mở đầu</span></h3>\r\n<div>\r\n<div id=\"highlighter_870439\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div>\r\n<div class=\"line number43 index42 alt2\">43</div>\r\n<div class=\"line number44 index43 alt1\">44</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp comments\">// khai bao struct</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp comments\">/* Hay thay tat ca fflush(stdin); thanh __fpurge(stdin) khi ban lam tren linux*/</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao 2 bien sv1, sv2 va 1 mang</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* CNPMK10A gom 100 sinh vien</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien sv1, sv2, CNPMK10A[100];</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sv1:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.MSV);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.hoten);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem toan, tin, anh: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf %lf %lf\"</code><code class=\"cpp plain\">, &amp;sv1.toan, &amp;sv1.tin, &amp;sv1.anh);</code></div>\r\n<div class=\"line number29 index28 alt2\"></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sv2:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv2.MSV);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number34 index33 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv2.hoten);</code></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem toan, tin, anh: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf %lf %lf\"</code><code class=\"cpp plain\">, &amp;sv2.toan, &amp;sv2.tin, &amp;sv2.anh);</code></div>\r\n<div class=\"line number37 index36 alt2\"></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-7s %-7s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Toan\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Tin\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Anh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number40 index39 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %-7.2lf %-7.2lf\\n\"</code><code class=\"cpp plain\">, sv1.MSV, sv1.hoten, sv1.toan, sv1.tin, sv1.anh);</code></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %-7.2lf %-7.2lf\\n\"</code><code class=\"cpp plain\">, sv2.MSV, sv2.hoten, sv2.toan, sv2.tin, sv2.anh);</code></div>\r\n<div class=\"line number42 index41 alt1\"></div>\r\n<div class=\"line number43 index42 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number44 index43 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<div>\r\n<div id=\"highlighter_220815\" class=\"syntaxhighlighter  plain\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"plain plain\">Nhap du lieu cho sv1:</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"plain plain\">MSV: DTC1</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"plain plain\">Ho ten: Pham Thi Ha</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"plain plain\">Diem toan, tin, anh: 9 9 8</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"plain plain\">Nhap du lieu cho sv2:</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"plain plain\">MSV: DTC2</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"plain plain\">Ho ten: Nguyen Van Quan</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"plain plain\">Diem toan, tin, anh: 9 9 8</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"plain spaces\"> </code><code class=\"plain plain\">--------- Thong tin sinh vien -----</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"plain plain\">MSV                  Ho ten                         Toan    Tin     Anh</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"plain plain\">DTC1                 Pham Thi Ha                    9.00    9.00    8.00</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"plain plain\">DTC2                 Nguyen Van Quan                9.00    9.00    8.00</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nỞ VD mở đầu này, chúng ta có rất nhiều điểu phải bàn 🙂\r\n<h3><span id=\"12_Xay_dung_kieu_cau_truc_khai_bao_bien_cau_truc\">1.2 Xây dựng kiểu cấu trúc, khai báo biến cấu trúc</span></h3>\r\nNhư VD trên, để xây dựng 1 kiểu cấu trúc ta thực hiện theo cú pháp:\r\n<div>\r\n<div id=\"highlighter_636205\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">TenKieuCauTruc</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">Khai báo các thành phần của kiểu;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">};</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nSau khi có kiểu cấu trúc rồi thì cái kiểu đó nó tương tự như 1 kiểu bình thường (int, float, char,…) và ta chỉ việc khai báo biến nữa là xong. Tuy nhiên khai báo biến thì cần có thêm từ khóa struct ở trước: (Đối với C++ thì không cần).\r\n\r\n<strong>struct TenKieuCauTruc TenBienCauTruc;</strong>\r\n\r\nNgoài ta chúng ta còn một số cách xây dựng kiểu cấu trúc và khai báo biến cấu trúc như sau:\r\n<div>\r\n<div id=\"highlighter_577851\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">TenKieuCauTruc</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">Khai báo các thành phần của kiểu;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">} danh sách các biến thuộc kiểu cấu trúc;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nHoặc\r\n<div>\r\n<div id=\"highlighter_951366\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">Khai báo các thành phần của kiểu;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">} danh sách các biến thuộc kiểu cấu trúc ;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nVới cách khai báo này, ta bắt buộc phải khai báo các biến cấu trúc ở ngay sau cấu trúc vì không có tên kiểu cấu trúc để cho ta khai báo ở các vị trí khác nữa.\r\nTrong phần này ta cần đề cập đến 1 từ khóa quan trọng nữa, đó là <strong>typedef</strong>. Từ khóa này dùng để định nghĩa 1 kiểu dữ liệu mới.\r\n<div>\r\n<div id=\"highlighter_769683\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">typedef</code> <code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">} kieuSinhVien;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi này ta có <strong>kieuSinhVien</strong> là 1 kiểu dữ liệu (như int, double, …) và ta có thể khai báo các biến cấu trúc thông qua nó. Trong này có vài điều các bạn cần chú ý:\r\n<ul>\r\n 	<li>Với <strong>sinhvien</strong> (kiểu cấu trúc được đặt sau từ khóa struct) thì khi khai báo biến thuộc kiểu này ta vẫn phải có từ struct ở trước nó. (VD: sinhvien svA; -&gt; Sai còn struct sinhvien svA; -&gt; đúng), (chú ý trong C++ thì không cần).</li>\r\n 	<li>Với <strong>kieuSinhVIen</strong> thì khi khai báo biến thuộc kiểu này ta <strong>không được có từ struct</strong> ở trước nó. (VD: struct kieuSinhVIen svA; -&gt; sai, kieuSinhVIen svA; -&gt; đúng).</li>\r\n</ul>\r\nNgoài ra ta còn có thể khai báo kiểu cấu trúc lồng nhau: VD như trong 1 sinh viên có ngày sinh, trong ngày sinh lại có ngày, tháng, năm sinh.\r\n<div>\r\n<div id=\"highlighter_139863\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number5 index4 alt2\"></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp keyword bold\">typedef</code> <code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh ns;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp plain\">} kieuSinhVien;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nHoặc ta khai báo ngay trong cấu trúc:\r\n<div>\r\n<div id=\"highlighter_493464\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp keyword bold\">typedef</code> <code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} ns;</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp plain\">} kieuSinhVien;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"13_Truy_cap_den_cac_thanh_phan_cua_cau_truc\">1.3 Truy cập đên các thành phần của cấu trúc</span></h3>\r\nĐể truy nhập đến thành phần của cấu trúc ta sử dụng toán tử chấm (.).\r\n\r\n<strong>TenBienCauTruc.TenThanhPhan;</strong>\r\n\r\nNhư VD trên ta truy cập như sau:\r\nsv1.hoten; sv1.toan; // truy xuất tới họ tên, điểm toán\r\nsv1.ns.ngay; sv1.ns.thang; // truy xuất tới ngày sinh và tháng sinh.\r\n…\r\n\r\nKhi đã truy xuất được tới các thành phần của cấu trúc thì mỗi thành phần đó là 1 biến bình thường và ta gán giá trị hoặc nhập xuất giá trị cho chúng như cách bình thường mà chúng ta vẫn làm.\r\n\r\nNgoài ra nếu thành phần nào đó dài dòng thì ta có thể tránh việc dài dòng này bằng cách sử dụng từ khóa define.\r\nVD thay vì viết:\r\n<div>\r\n<div id=\"highlighter_989813\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">sv1.ns.thang;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">sv1.ns.nam;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nTa viết:\r\n<div>\r\n<div id=\"highlighter_10140\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#define p sv1.ns</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp plain\">p.thang;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp plain\">p.nam;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h3><span id=\"14_Gan_cac_bien_co_cung_kieu_cau_truc\">1.4 Gán các biến có cùng kiểu cấu trúc</span></h3>\r\n<div>\r\n<div id=\"highlighter_768922\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">toan, tin, anh; </code><code class=\"cpp comments\">// cac diem toan, tin, anh</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp comments\">/* Hay thay tat ca fflush(stdin); thanh __fpurge(stdin) khi ban lam tren linux*/</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">/* khai bao 2 bien sv1, sv2 va 1 mang</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">* CNPMK10A gom 100 sinh vien</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">     </code><code class=\"cpp comments\">*/</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien sv1, sv2, CNPMK10A[100];</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sv1:\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.MSV);</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv1.hoten);</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem toan, tin, anh: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf %lf %lf\"</code><code class=\"cpp plain\">, &amp;sv1.toan, &amp;sv1.tin, &amp;sv1.anh);</code></div>\r\n<div class=\"line number28 index27 alt1\"></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">sv2 = sv1; </code><code class=\"cpp comments\">// gan gia tri cua sv1 cho sv2</code></div>\r\n<div class=\"line number30 index29 alt1\"></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-7s %-7s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Toan\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Tin\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Anh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %-7.2lf %-7.2lf\\n\"</code><code class=\"cpp plain\">, sv2.MSV, sv2.hoten, sv2.toan, sv2.tin, sv2.anh);</code></div>\r\n<div class=\"line number34 index33 alt1\"></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nSau khi gán sv2 = sv1 thì mọi thông tin của sv1 có thì sv2 cũng có. Ngoài ra ta còn có thể gán giá trị khởi đầu cho cấu trúc.\r\n\r\n<code>struct sinhvien sv1 = {\"ABC\", \"Nguyen Van Quan\", 9, 9, 8, {4, 5, 1992}};</code>\r\n\r\nKhi đó ta có các dữ liệu ban đầu của sv1 là:\r\n<div>\r\n<div id=\"highlighter_606915\" class=\"syntaxhighlighter  plain\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"plain plain\">MSV: ABC</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"plain plain\">hoten: Nguyen Van Quan</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"plain plain\">toan: 9</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"plain plain\">tin: 9</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"plain plain\">anh: 8</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"plain plain\">ngày sinh: 4/5/1992.</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"2_Mang_cau_truc\">2. Mảng cấu trúc</span></h2>\r\nBên trên ta đã tìm hiểu cơ bản về kiểu cấu trúc và một vài ví dụ về cấu trúc sinhvien. Bây giờ ta tìm hiểu cách biểu diễn 1 mảng 50 sinh viên của 1 lớp học có kiểu cấu trúc như trên. Ta xét VD:\r\n<div>\r\n<div id=\"highlighter_71028\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div>\r\n<div class=\"line number43 index42 alt2\">43</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">diemTB; </code><code class=\"cpp comments\">// diem trung binh</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} ns;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 2, i;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien CNPMK10A[n];</code></div>\r\n<div class=\"line number20 index19 alt1\"></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp preprocessor\">#define sv CNPMK10A[i]</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sinh vien thu %d:\\n\"</code><code class=\"cpp plain\">, i + 1);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin)</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv.MSV);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(sv.hoten);</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem TB: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin)</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;sv.diemTB);</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ngay sinh: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d/%d/%d\"</code><code class=\"cpp plain\">, &amp;sv.ns.ngay, &amp;sv.ns.thang, &amp;sv.ns.nam);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}   </code></div>\r\n<div class=\"line number34 index33 alt1\"></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-10s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Diem Tb\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ngay sinh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp preprocessor\">#define sv CNPMK10A[i]</code></div>\r\n<div class=\"line number40 index39 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %02d/%02d/%4d\\n\"</code><code class=\"cpp plain\">, sv.MSV, sv.hoten, sv.diemTB, sv.ns.ngay, sv.ns.thang, sv.ns.nam);</code></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number42 index41 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number43 index42 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả:\r\n<div>\r\n<div id=\"highlighter_906937\" class=\"syntaxhighlighter  plain\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"plain plain\">Nhap du lieu cho sinh vien thu 1:</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"plain plain\">MSV: DTC1</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"plain plain\">Ho ten: Pham Thi Ha</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"plain plain\">Diem TB: 9.2</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"plain plain\">Ngay sinh: 21/01/1993</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"plain plain\">Nhap du lieu cho sinh vien thu 2:</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"plain plain\">MSV: DTC2</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"plain plain\">Ho ten: Nguyen Van Quan</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"plain plain\">Diem TB: 9.2</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"plain plain\">Ngay sinh: 31/12/1992</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"plain spaces\"> </code><code class=\"plain plain\">--------- Thong tin sinh vien -----</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"plain plain\">MSV                  Ho ten                         Diem Tb Ngay sinh</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"plain plain\">DTC1                 Pham Thi Ha                    9.20    21/01/1993</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"plain plain\">DTC2                 Nguyen Van Quan                9.20    31/12/1992</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Con_tro_cau_truc\">3. Con trỏ cấu trúc</span></h2>\r\n<div>\r\n<div id=\"highlighter_970788\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div>\r\n<div class=\"line number27 index26 alt2\">27</div>\r\n<div class=\"line number28 index27 alt1\">28</div>\r\n<div class=\"line number29 index28 alt2\">29</div>\r\n<div class=\"line number30 index29 alt1\">30</div>\r\n<div class=\"line number31 index30 alt2\">31</div>\r\n<div class=\"line number32 index31 alt1\">32</div>\r\n<div class=\"line number33 index32 alt2\">33</div>\r\n<div class=\"line number34 index33 alt1\">34</div>\r\n<div class=\"line number35 index34 alt2\">35</div>\r\n<div class=\"line number36 index35 alt1\">36</div>\r\n<div class=\"line number37 index36 alt2\">37</div>\r\n<div class=\"line number38 index37 alt1\">38</div>\r\n<div class=\"line number39 index38 alt2\">39</div>\r\n<div class=\"line number40 index39 alt1\">40</div>\r\n<div class=\"line number41 index40 alt2\">41</div>\r\n<div class=\"line number42 index41 alt1\">42</div>\r\n<div class=\"line number43 index42 alt2\">43</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp comments\">//code by nguyenvanquan7826</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien </code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">MSV[20]; </code><code class=\"cpp comments\">// ma sinh vien</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">hoten[30]; </code><code class=\"cpp comments\">// ho ten sinh vien</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">double</code> <code class=\"cpp plain\">diemTB; </code><code class=\"cpp comments\">// diem trung binh</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">ngaysinh </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">ngay, thang, nam;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} ns;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp plain\">};</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main() </code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n = 2, i;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp comments\">// cap phat bo nho</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien *CNPMK10A = (</code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien*) </code><code class=\"cpp functions bold\">malloc</code><code class=\"cpp plain\">(n * </code><code class=\"cpp keyword bold\">sizeof</code><code class=\"cpp plain\">(</code><code class=\"cpp keyword bold\">struct</code> <code class=\"cpp plain\">sinhvien));</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap du lieu cho sinh vien thu %d:\\n\"</code><code class=\"cpp plain\">, i + 1);</code></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"MSV: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(CNPMK10A[i].MSV);</code></div>\r\n<div class=\"line number27 index26 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ho ten: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number28 index27 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">gets</code><code class=\"cpp plain\">(CNPMK10A[i].hoten);</code></div>\r\n<div class=\"line number29 index28 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Diem TB: \"</code><code class=\"cpp plain\">); </code><code class=\"cpp functions bold\">fflush</code><code class=\"cpp plain\">(stdin);</code></div>\r\n<div class=\"line number30 index29 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%lf\"</code><code class=\"cpp plain\">, &amp;(CNPMK10A+i)-&gt;diemTB);</code></div>\r\n<div class=\"line number31 index30 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ngay sinh: \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number32 index31 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d/%d/%d\"</code><code class=\"cpp plain\">, &amp;(CNPMK10A+i)-&gt;ns.ngay, &amp;(CNPMK10A+i)-&gt;ns.thang, &amp;(CNPMK10A+i)-&gt;ns.nam);</code></div>\r\n<div class=\"line number33 index32 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}   </code></div>\r\n<div class=\"line number34 index33 alt1\"></div>\r\n<div class=\"line number35 index34 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"\\n --------- Thong tin sinh vien -----\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number36 index35 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7s %-10s\\n\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"MSV\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ho ten\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Diem Tb\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"Ngay sinh\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number37 index36 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number38 index37 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number39 index38 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp preprocessor\">#define ns CNPMK10A[i].ns</code></div>\r\n<div class=\"line number40 index39 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%-20s %-30s %-7.2lf %02d/%02d/%4d\\n\"</code><code class=\"cpp plain\">, CNPMK10A[i].MSV, (*(CNPMK10A+i)).hoten, (CNPMK10A+i)-&gt;diemTB, ns.ngay, ns.thang, ns.nam);</code></div>\r\n<div class=\"line number41 index40 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number42 index41 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number43 index42 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Truy cập các thành phần cấu trúc</strong>\r\n\r\nĐể truy cập để lấy dữ liệu các thành phần của con trỏ cấu trúc ta có 3 cách sau:\r\n<ul>\r\n 	<li>Cách 1: CNPMK10A[i].diemTB;</li>\r\n 	<li>Cách 2: (*(CNPMK10A+i)).diemTB;</li>\r\n 	<li>Cách 3: (CNPMK10A+i) -&gt;diemTB;</li>\r\n</ul>\r\nCả 3 cách trên đều truy cập tới DTB.\r\n\r\nĐể lấy địa chỉ ta cũng có 2 cách:\r\n<ul>\r\n 	<li>Cách 1: &amp;CNPMK10A[i].DTB;</li>\r\n 	<li>Cách 2: &amp;(CNPMK10A+i)-&gt;diemTB</li>\r\n</ul>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<div id=\"jp-relatedposts\" class=\"jp-relatedposts\"></div>', 'Lập trình C: Bài 13 – Kiểu cấu trúc – struct', '', 'inherit', 'closed', 'closed', '', '173-revision-v1', '', '', '2018-12-10 01:26:32', '2018-12-09 18:26:32', '', 173, 'http://localhost/web-teach-code/blog/2018/12/10/173-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(175, 1, '2018-12-10 01:27:07', '2018-12-09 18:27:07', '<div class=\"social4i\">\r\n<div class=\"social4in\"></div>\r\n<div>Trong quá trình lập trình, chúng ta thường phải đọc và ghi dữ liệu ra file. Bài này sẽ hướng dẫn các bạn cách làm đơn giản với C và C++.</div>\r\n</div>\r\nLưu ý: Trong các ví dụ dưới đây, các file input và output đặt cùng thư mục với file mã nguồn.\r\n<div class=\"debai\">Ví dụ: Cho file input.txt, dòng đầu tiên gồm 1 số n là số lượng bạn bè, n dòng tiếp theo mỗi dòng là tên của 1 bạn bè. Đọc và ghi ra file output.txt danh sách bạn bè kèm số thứ tự</div>\r\n<div class=\"table-responsive\">\r\n<table class=\"easy-table easy-table-default \" border=\"0\">\r\n<thead>\r\n<tr>\r\n<th>input.txt</th>\r\n<th>output.txt</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>3\r\nNguyen Van Quan\r\nNguyen Thi Hong Anh\r\nNguyen Van Hung</td>\r\n<td>1.Nguyen Van Quan\r\n2.Nguyen Thi Hong Anh\r\n3.Nguyen Van Hung</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<h2>Code C</h2>\r\n<div>\r\n<div id=\"highlighter_274363\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><caption>file name: test.c - code by: nguyenvanquan7826</caption>\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[255];                         </code><code class=\"cpp comments\">// khai bao bien ten</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">FILE</code> <code class=\"cpp plain\">*fi = </code><code class=\"cpp functions bold\">fopen</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"input.txt\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"r\"</code><code class=\"cpp plain\">);     </code><code class=\"cpp comments\">// mo file de doc</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">FILE</code> <code class=\"cpp plain\">*fo = </code><code class=\"cpp functions bold\">fopen</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"output.txt\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"w\"</code><code class=\"cpp plain\">);    </code><code class=\"cpp comments\">// mo file de ghi</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fscanf</code><code class=\"cpp plain\">(fi, </code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;n);                   </code><code class=\"cpp comments\">// doc so n tu file fi</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fgets</code><code class=\"cpp plain\">(name, 255, fi);                   </code><code class=\"cpp comments\">// loai bo dau xuong dong sau khi doc so n</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code><code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{                   </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">fgets</code><code class=\"cpp plain\">(name, 255, fi);               </code><code class=\"cpp comments\">// doc chuoi gom 255 ky tu tu file fi</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">fprintf</code><code class=\"cpp plain\">(fo, </code><code class=\"cpp string\">\"%d.%s\"</code><code class=\"cpp plain\">, (i+1), name);  </code><code class=\"cpp comments\">// ghi chuoi ra file fo</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fclose</code><code class=\"cpp plain\">(fi);     </code><code class=\"cpp comments\">// dong file fi</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fclose</code><code class=\"cpp plain\">(fo);     </code><code class=\"cpp comments\">// dong file fo</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2>Code C++</h2>\r\n<div>\r\n<div id=\"highlighter_842594\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><caption>file name: test.cpp - code by: nguyenvanquan7826</caption>\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;fstream&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp keyword bold\">using</code> <code class=\"cpp keyword bold\">namespace</code> <code class=\"cpp plain\">std;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">string name;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ifstream fi(</code><code class=\"cpp string\">\"input.txt\"</code><code class=\"cpp plain\">);   </code><code class=\"cpp comments\">// mo file de doc</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ofstream fo(</code><code class=\"cpp string\">\"output.txt\"</code><code class=\"cpp plain\">);  </code><code class=\"cpp comments\">// mo file de ghi</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fi &gt;&gt; n;                  </code><code class=\"cpp comments\">// doc 1 so tu file</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">getline(fi, name);          </code><code class=\"cpp comments\">// loai bo dau xuong dong sau khi doc so n</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i = 0; i &lt;n; i++)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">getline(fi, name);      </code><code class=\"cpp comments\">// doc 1 dong tu file</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">fo &lt;&lt; (i+1) &lt;&lt; </code><code class=\"cpp string\">\".\"</code> <code class=\"cpp plain\">&lt;&lt; name &lt;&lt; </code><code class=\"cpp string\">\'\\n\'</code><code class=\"cpp plain\">;     </code><code class=\"cpp comments\">// ghi 1 dong ra file</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fi.close();</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fo.close();</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 14 – Nhập xuất file trong C/C++', '', 'publish', 'open', 'open', '', 'lap-trinh-c-bai-14-nhap-xuat-file-trong-c-c', '', '', '2018-12-10 04:06:43', '2018-12-09 21:06:43', '', 0, 'http://localhost/web-teach-code/blog/?p=175', 0, 'post', '', 0),
(176, 1, '2018-12-10 01:27:07', '2018-12-09 18:27:07', '<div class=\"social4i\">\r\n<div class=\"social4in\">\r\n<div class=\"socialicons s4twitter\"><iframe id=\"twitter-widget-0\" class=\"twitter-share-button twitter-share-button-rendered twitter-tweet-button\" title=\"Twitter Tweet Button\" src=\"https://platform.twitter.com/widgets/tweet_button.0568ee90c37ccf52b40a4b1e312811ff.vi.html#dnt=false&amp;id=twitter-widget-0&amp;lang=vi&amp;original_referer=https%3A%2F%2Fcachhoc.net%2F2017%2F11%2F10%2Flap-trinh-c-bai-17-nhap-xuat-file-trong-cc%2F&amp;size=m&amp;text=L%E1%BA%ADp%20tr%C3%ACnh%20C%3A%20B%C3%A0i%2014%20%E2%80%93%20Nh%E1%BA%ADp%20xu%E1%BA%A5t%20file%20trong%20C%2FC%2B%2B&amp;time=1544380006503&amp;type=share&amp;url=https%3A%2F%2Fcachhoc.net%2F2017%2F11%2F10%2Flap-trinh-c-bai-17-nhap-xuat-file-trong-cc%2F&amp;via=baytamhaisau\" frameborder=\"0\" scrolling=\"no\" data-url=\"https://cachhoc.net/2017/11/10/lap-trinh-c-bai-17-nhap-xuat-file-trong-cc/\" data-mce-fragment=\"1\"></iframe></div>\r\n<div class=\"socialicons s4fblike\">\r\n<div class=\"fb-like fb_iframe_widget\" data-href=\"https://cachhoc.net/2017/11/10/lap-trinh-c-bai-17-nhap-xuat-file-trong-cc/\" data-send=\"true\" data-layout=\"button_count\" data-width=\"100\" data-height=\"21\" data-show-faces=\"false\"><iframe class=\"\" title=\"fb:like Facebook Social Plugin\" src=\"https://www.facebook.com/plugins/like.php?app_id=&amp;channel=https%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FLviKjJ9cymB.js%3Fversion%3D43%23cb%3Df2db662ab828e68%26domain%3Dcachhoc.net%26origin%3Dhttps%253A%252F%252Fcachhoc.net%252Ff11aa0defdc091c%26relation%3Dparent.parent&amp;container_width=0&amp;height=21&amp;href=https%3A%2F%2Fcachhoc.net%2F2017%2F11%2F10%2Flap-trinh-c-bai-17-nhap-xuat-file-trong-cc%2F&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;send=true&amp;show_faces=false&amp;width=100\" name=\"f77901598d8d6c\" width=\"100px\" height=\"21px\" frameborder=\"0\" scrolling=\"no\" allowfullscreen=\"allowfullscreen\" data-mce-fragment=\"1\"></iframe></div>\r\n</div>\r\n<div class=\"socialicons s4plusone\">\r\n<div id=\"___plusone_0\"><iframe id=\"I0_1544380006409\" tabindex=\"0\" title=\"G+\" src=\"https://apis.google.com/u/0/se/0/_/+1/fastbutton?usegapi=1&amp;size=medium&amp;origin=https%3A%2F%2Fcachhoc.net&amp;url=https%3A%2F%2Fcachhoc.net%2F2017%2F11%2F10%2Flap-trinh-c-bai-17-nhap-xuat-file-trong-cc%2F&amp;gsrc=3p&amp;ic=1&amp;jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.vi.YE2t8i3yGlc.O%2Fam%3DQQ%2Frt%3Dj%2Fd%3D1%2Frs%3DAGLTcCOqaYSoJy29mbtCcW23rA6VpXuC-g%2Fm%3D__features__#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh%2Conload&amp;id=I0_1544380006409&amp;_gfid=I0_1544380006409&amp;parent=https%3A%2F%2Fcachhoc.net&amp;pfname=&amp;rpctoken=36267594\" name=\"I0_1544380006409\" width=\"100%\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" data-gapiattached=\"true\" data-mce-fragment=\"1\"></iframe></div>\r\n</div>\r\n</div>\r\n<div></div>\r\n</div>\r\nTrong quá trình lập trình, chúng ta thường phải đọc và ghi dữ liệu ra file. Bài này sẽ hướng dẫn các bạn cách làm đơn giản với C và C++.\r\n\r\nLưu ý: Trong các ví dụ dưới đây, các file input và output đặt cùng thư mục với file mã nguồn.\r\n<div class=\"debai\">Ví dụ: Cho file input.txt, dòng đầu tiên gồm 1 số n là số lượng bạn bè, n dòng tiếp theo mỗi dòng là tên của 1 bạn bè. Đọc và ghi ra file output.txt danh sách bạn bè kèm số thứ tự</div>\r\n<div class=\"table-responsive\">\r\n<table class=\"easy-table easy-table-default \" border=\"0\">\r\n<thead>\r\n<tr>\r\n<th>input.txt</th>\r\n<th>output.txt</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>3\r\nNguyen Van Quan\r\nNguyen Thi Hong Anh\r\nNguyen Van Hung</td>\r\n<td>1.Nguyen Van Quan\r\n2.Nguyen Thi Hong Anh\r\n3.Nguyen Van Hung</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<h2>Code C</h2>\r\n<div>\r\n<div id=\"highlighter_274363\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><caption>file name: test.c - code by: nguyenvanquan7826</caption>\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[255];                         </code><code class=\"cpp comments\">// khai bao bien ten</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">FILE</code> <code class=\"cpp plain\">*fi = </code><code class=\"cpp functions bold\">fopen</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"input.txt\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"r\"</code><code class=\"cpp plain\">);     </code><code class=\"cpp comments\">// mo file de doc</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">FILE</code> <code class=\"cpp plain\">*fo = </code><code class=\"cpp functions bold\">fopen</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"output.txt\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"w\"</code><code class=\"cpp plain\">);    </code><code class=\"cpp comments\">// mo file de ghi</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fscanf</code><code class=\"cpp plain\">(fi, </code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;n);                   </code><code class=\"cpp comments\">// doc so n tu file fi</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fgets</code><code class=\"cpp plain\">(name, 255, fi);                   </code><code class=\"cpp comments\">// loai bo dau xuong dong sau khi doc so n</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code><code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{                   </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">fgets</code><code class=\"cpp plain\">(name, 255, fi);               </code><code class=\"cpp comments\">// doc chuoi gom 255 ky tu tu file fi</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">fprintf</code><code class=\"cpp plain\">(fo, </code><code class=\"cpp string\">\"%d.%s\"</code><code class=\"cpp plain\">, (i+1), name);  </code><code class=\"cpp comments\">// ghi chuoi ra file fo</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fclose</code><code class=\"cpp plain\">(fi);     </code><code class=\"cpp comments\">// dong file fi</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fclose</code><code class=\"cpp plain\">(fo);     </code><code class=\"cpp comments\">// dong file fo</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2>Code C++</h2>\r\n<div>\r\n<div id=\"highlighter_842594\" class=\"syntaxhighlighter  cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><caption>file name: test.cpp - code by: nguyenvanquan7826</caption>\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;fstream&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp keyword bold\">using</code> <code class=\"cpp keyword bold\">namespace</code> <code class=\"cpp plain\">std;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">string name;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ifstream fi(</code><code class=\"cpp string\">\"input.txt\"</code><code class=\"cpp plain\">);   </code><code class=\"cpp comments\">// mo file de doc</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ofstream fo(</code><code class=\"cpp string\">\"output.txt\"</code><code class=\"cpp plain\">);  </code><code class=\"cpp comments\">// mo file de ghi</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fi &gt;&gt; n;                  </code><code class=\"cpp comments\">// doc 1 so tu file</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">getline(fi, name);          </code><code class=\"cpp comments\">// loai bo dau xuong dong sau khi doc so n</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i = 0; i &lt;n; i++)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">getline(fi, name);      </code><code class=\"cpp comments\">// doc 1 dong tu file</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">fo &lt;&lt; (i+1) &lt;&lt; </code><code class=\"cpp string\">\".\"</code> <code class=\"cpp plain\">&lt;&lt; name &lt;&lt; </code><code class=\"cpp string\">\'\\n\'</code><code class=\"cpp plain\">;     </code><code class=\"cpp comments\">// ghi 1 dong ra file</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fi.close();</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fo.close();</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 14 – Nhập xuất file trong C/C++', '', 'inherit', 'closed', 'closed', '', '175-revision-v1', '', '', '2018-12-10 01:27:07', '2018-12-09 18:27:07', '', 175, 'http://localhost/web-teach-code/blog/2018/12/10/175-revision-v1/', 0, 'revision', '', 0),
(177, 1, '2018-12-10 01:27:12', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2018-12-10 01:27:12', '0000-00-00 00:00:00', '', 0, 'http://localhost/web-teach-code/blog/?p=177', 0, 'post', '', 0),
(178, 1, '2018-12-10 01:29:13', '2018-12-09 18:29:13', '{\n    \"nav_menu_item[145]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/cuc-de/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 1,\n            \"status\": \"publish\",\n            \"original_title\": \"C\\u1ef1c d\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[147]\": {\n        \"value\": {\n            \"menu_item_parent\": -1637017741270829000,\n            \"object_id\": 8,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/huong-dan/c/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 3,\n            \"status\": \"publish\",\n            \"original_title\": \"C\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[141]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[143]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/de/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 2,\n            \"status\": \"publish\",\n            \"original_title\": \"D\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[144]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/trung-binh/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 3,\n            \"status\": \"publish\",\n            \"original_title\": \"Trung b\\u00ecnh\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[146]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/kho/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 4,\n            \"status\": \"publish\",\n            \"original_title\": \"Kh\\u00f3\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[142]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[-1637017741270829000]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"custom\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"custom\",\n            \"title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"url\": \"http://#\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    },\n    \"nav_menu_item[-7343577215880692000]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"custom\",\n            \"menu_item_parent\": 0,\n            \"position\": 4,\n            \"type\": \"custom\",\n            \"title\": \"B\\u00e0i t\\u1eadp\",\n            \"url\": \"http://#\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"B\\u00e0i t\\u1eadp\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:13\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'd28d5ddc-ea70-4b2f-a9b0-159c97c07787', '', '', '2018-12-10 01:29:13', '2018-12-09 18:29:13', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/d28d5ddc-ea70-4b2f-a9b0-159c97c07787/', 0, 'customize_changeset', '', 0),
(179, 1, '2018-12-10 01:29:13', '2018-12-09 18:29:13', '', 'Bài tập', '', 'publish', 'closed', 'closed', '', 'bai-tap', '', '', '2018-12-10 01:30:07', '2018-12-09 18:30:07', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/bai-tap/', 8, 'nav_menu_item', '', 0),
(180, 1, '2018-12-10 01:29:14', '2018-12-09 18:29:14', '', 'Hướng dẫn', '', 'publish', 'closed', 'closed', '', 'huong-dan', '', '', '2018-12-10 01:29:36', '2018-12-09 18:29:36', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/huong-dan/', 2, 'nav_menu_item', '', 0),
(181, 1, '2018-12-10 01:29:36', '2018-12-09 18:29:36', '{\n    \"nav_menu_item[180]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"custom\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"custom\",\n            \"title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"url\": \"#\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"H\\u01b0\\u1edbng d\\u1eabn\",\n            \"nav_menu_term_id\": 2,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:36\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'c5f3d54b-c112-4c3c-b596-f953bdb96a43', '', '', '2018-12-10 01:29:36', '2018-12-09 18:29:36', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/c5f3d54b-c112-4c3c-b596-f953bdb96a43/', 0, 'customize_changeset', '', 0),
(182, 1, '2018-12-10 01:29:56', '0000-00-00 00:00:00', '{\n    \"nav_menu_item[145]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 5,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/cuc-de/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 5,\n            \"status\": \"publish\",\n            \"original_title\": \"C\\u1ef1c d\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:56\"\n    },\n    \"nav_menu_item[143]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 1,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/de/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 6,\n            \"status\": \"publish\",\n            \"original_title\": \"D\\u1ec5\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:56\"\n    },\n    \"nav_menu_item[144]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 3,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/trung-binh/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 7,\n            \"status\": \"publish\",\n            \"original_title\": \"Trung b\\u00ecnh\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:56\"\n    },\n    \"nav_menu_item[146]\": {\n        \"value\": {\n            \"menu_item_parent\": -7343577215880692000,\n            \"object_id\": 4,\n            \"object\": \"category\",\n            \"type\": \"taxonomy\",\n            \"type_label\": \"Category\",\n            \"url\": \"http://localhost/web-teach-code/blog/category/bai-tap/kho/\",\n            \"title\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 8,\n            \"status\": \"publish\",\n            \"original_title\": \"Kh\\u00f3\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:29:56\"\n    }\n}', '', '', 'auto-draft', 'closed', 'closed', '', 'df6d1d68-7aac-4390-b727-5612a59f613e', '', '', '2018-12-10 01:29:56', '0000-00-00 00:00:00', '', 0, 'http://localhost/web-teach-code/blog/?p=182', 0, 'customize_changeset', '', 0),
(183, 1, '2018-12-10 01:30:07', '2018-12-09 18:30:07', '{\n    \"nav_menu_item[179]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 179,\n            \"object\": \"custom\",\n            \"type\": \"custom\",\n            \"type_label\": \"Custom Link\",\n            \"title\": \"B\\u00e0i t\\u1eadp\",\n            \"url\": \"#\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 2,\n            \"position\": 8,\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 18:30:07\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '3279e526-6f87-4a61-a177-c5fc209434d6', '', '', '2018-12-10 01:30:07', '2018-12-09 18:30:07', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/3279e526-6f87-4a61-a177-c5fc209434d6/', 0, 'customize_changeset', '', 0),
(184, 1, '2018-12-10 01:41:07', '2018-12-09 18:41:07', '<strong>Đề bài: Tính diện tích hình chữ nhật theo độ dài 2 cạnh (rộng, dài)</strong>\r\n<pre>input:\r\n10 7\r\nouput:\r\n34</pre>\r\nstart-test\r\n\r\ninput: 10\\n7 output: 34 ;\r\n\r\ninput: 10\\n10 output: 40 ;\r\n\r\ninput: 20\\n90 output: 220 ;\r\n\r\ninput: 120\\n900 output: 2040 ;\r\n\r\nend-test', 'Tính chu vi hình chữ nhật', '', 'publish', 'open', 'open', '', 'tinh-chu-vi-hinh-chu-nhat', '', '', '2018-12-10 04:13:06', '2018-12-09 21:13:06', '', 0, 'http://localhost/web-teach-code/blog/?p=184', 0, 'post', '', 0),
(185, 1, '2018-12-10 01:35:46', '2018-12-09 18:35:46', '<strong>Đề bài: Tính diện tích hình chữ nhật</strong>', 'Tính diện tích hình chữ nhật', '', 'inherit', 'closed', 'closed', '', '184-revision-v1', '', '', '2018-12-10 01:35:46', '2018-12-09 18:35:46', '', 184, 'http://localhost/web-teach-code/blog/2018/12/10/184-revision-v1/', 0, 'revision', '', 0),
(186, 1, '2018-12-10 01:41:07', '2018-12-09 18:41:07', '<strong>Đề bài: Tính diện tích hình chữ nhật:</strong>\r\n\r\nVí dụ:\r\n<pre>input:\r\n10\r\n7\r\nouput:\r\n34</pre>\r\nstart-test\r\n\r\ninput: 10\\n7 output: 34 ;\r\n\r\ninput: 10\\n10 output: 40 ;\r\n\r\ninput: 20\\n90 output: 220 ;\r\n\r\ninput: 120\\n900 output: 2040 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\nend-test', 'Tính chu vi hình chữ nhật', '', 'inherit', 'closed', 'closed', '', '184-revision-v1', '', '', '2018-12-10 01:41:07', '2018-12-09 18:41:07', '', 184, 'http://localhost/web-teach-code/blog/2018/12/10/184-revision-v1/', 0, 'revision', '', 0),
(187, 1, '2018-12-10 01:42:36', '2018-12-09 18:42:36', '<strong>Đề bài: Tính diện tích hình chữ nhật:</strong>\r\n\r\nVí dụ:\r\n<pre>input:\r\n10\r\n7\r\nouput:\r\n34</pre>\r\nstart-test\r\n\r\ninput: 10\\n7 output: 34 ;\r\n\r\ninput: 10\\n10 output: 40 ;\r\n\r\ninput: 20\\n90 output: 220 ;\r\n\r\ninput: 120\\n900 output: 2040 ;\r\n\r\nend-test', 'Tính chu vi hình chữ nhật', '', 'inherit', 'closed', 'closed', '', '184-revision-v1', '', '', '2018-12-10 01:42:36', '2018-12-09 18:42:36', '', 184, 'http://localhost/web-teach-code/blog/2018/12/10/184-revision-v1/', 0, 'revision', '', 0),
(188, 1, '2018-12-10 02:00:21', '2018-12-09 19:00:21', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số.</strong>\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'publish', 'open', 'open', '', 'tim-so-lon-nhat', '', '', '2018-12-10 04:12:52', '2018-12-09 21:12:52', '', 0, 'http://localhost/web-teach-code/blog/?p=188', 0, 'post', '', 0),
(189, 1, '2018-12-10 02:00:21', '2018-12-09 19:00:21', '<pre><strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\nVí dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:00:21', '2018-12-09 19:00:21', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(190, 1, '2018-12-10 02:24:09', '2018-12-09 19:24:09', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số:</strong>\n<pre>Ví dụ:\ninput:\n4\n1 4 6 3\nouput:\n6</pre>\nstart-test\n\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\n\ninput: 2\\n2\\n2 output: 2 ;\n\ninput: 1\\n10 output: 10 ;\n\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\n\ninput: 4\\n1\\n100\\n5\\n\\99\\n12 output: 100 ;\n\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\n\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\n\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-autosave-v1', '', '', '2018-12-10 02:24:09', '2018-12-09 19:24:09', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-autosave-v1/', 0, 'revision', '', 0),
(191, 1, '2018-12-10 02:02:30', '2018-12-09 19:02:30', '<pre><strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\nVí dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:02:30', '2018-12-09 19:02:30', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(192, 1, '2018-12-10 02:03:29', '2018-12-09 19:03:29', '<pre><strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\nVí dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:03:29', '2018-12-09 19:03:29', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(193, 1, '2018-12-10 02:04:37', '2018-12-09 19:04:37', '<pre><strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\nVí dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 1000\\n10\\n\\n\\95\\n800 output: 1000 ;\r\n\r\ninput: 0\\0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:04:37', '2018-12-09 19:04:37', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(194, 1, '2018-12-10 02:04:44', '2018-12-09 19:04:44', '<pre><strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\nVí dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 1000\\n10\\n\\n\\95\\n800 output: 1000 ;\r\n\r\ninput: 0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:04:44', '2018-12-09 19:04:44', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(195, 1, '2018-12-10 02:05:34', '2018-12-09 19:05:34', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 1000\\n10\\n\\n\\95\\n800 output: 1000 ;\r\n\r\ninput: 0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:05:34', '2018-12-09 19:05:34', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(196, 1, '2018-12-10 02:09:50', '2018-12-09 19:09:50', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n1\r\n4\r\n6\r\n3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 2\\n2 output: 2 ;\r\n\r\ninput: 10 output: 10 ;\r\n\r\ninput: 1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 1000\\n10\\n\\n\\95\\n800 output: 1000 ;\r\n\r\ninput: 0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:09:50', '2018-12-09 19:09:50', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(197, 1, '2018-12-10 02:13:37', '2018-12-09 19:13:37', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 2\\n2 output: 2 ;\r\n\r\ninput: 10 output: 10 ;\r\n\r\ninput: 1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 1000\\n10\\n\\n\\95\\n800 output: 1000 ;\r\n\r\ninput: 0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:13:37', '2018-12-09 19:13:37', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(198, 1, '2018-12-10 02:16:22', '2018-12-09 19:16:22', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:16:22', '2018-12-09 19:16:22', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(199, 1, '2018-12-10 02:20:40', '2018-12-09 19:20:40', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n2\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:20:40', '2018-12-09 19:20:40', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(200, 1, '2018-12-10 02:20:57', '2018-12-09 19:20:57', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n\\3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:20:57', '2018-12-09 19:20:57', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(201, 1, '2018-12-10 02:21:36', '2018-12-09 19:21:36', '<strong>Đề bài: Tìm số lớn nhất trong một dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:21:36', '2018-12-09 19:21:36', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(202, 1, '2018-12-10 02:23:06', '2018-12-09 19:23:06', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:23:06', '2018-12-09 19:23:06', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(203, 1, '2018-12-10 02:24:48', '2018-12-09 19:24:48', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số:</strong>\r\n<pre>Ví dụ:\r\ninput:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:24:48', '2018-12-09 19:24:48', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(204, 1, '2018-12-10 02:28:27', '2018-12-09 19:28:27', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số:</strong>\r\n\r\nVí dụ:\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:28:27', '2018-12-09 19:28:27', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(205, 1, '2018-12-10 02:28:37', '2018-12-09 19:28:37', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số:</strong>\r\n\r\n&nbsp;\r\n\r\nVí dụ:\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:28:37', '2018-12-09 19:28:37', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(206, 1, '2018-12-10 02:29:14', '2018-12-09 19:29:14', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số.</strong>\r\n\r\n&nbsp;\r\n\r\nVí dụ:\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:29:14', '2018-12-09 19:29:14', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(207, 1, '2018-12-10 02:29:33', '2018-12-09 19:29:33', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số.</strong>\r\n\r\nfdf\r\n\r\nVí dụ:\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:29:33', '2018-12-09 19:29:33', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(208, 1, '2018-12-10 02:29:48', '2018-12-09 19:29:48', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số.&lt;br&gt;</strong>\r\n\r\nVí dụ:\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:29:48', '2018-12-09 19:29:48', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(209, 1, '2018-12-10 02:30:00', '2018-12-09 19:30:00', '<strong>Đề bài: Tìm số lớn nhất trong n dẫy số.</strong>\r\n<pre>input:\r\n4\r\n1 4 6 3\r\nouput:\r\n6</pre>\r\nstart-test\r\n\r\ninput: 4\\n1\\n4\\n6\\n3 output: 6 ;\r\n\r\ninput: 2\\n2\\n2 output: 2 ;\r\n\r\ninput: 1\\n10 output: 10 ;\r\n\r\ninput: 4\\n1\\n100\\n5\\n\\99 output: 100 ;\r\n\r\ninput: 9\\n1\\n100\\n5\\n\\99\\n44\\n89\\n2\\n0\\n120 output: 120 ;\r\n\r\ninput: 5\\n1000\\n10\\n\\95\\n800\\n40 output: 1000 ;\r\n\r\ninput: 5\\n0\\n0\\n0\\n\\99\\n0 output: 99 ;\r\n\r\nend-test', 'Tìm số lớn nhất', '', 'inherit', 'closed', 'closed', '', '188-revision-v1', '', '', '2018-12-10 02:30:00', '2018-12-09 19:30:00', '', 188, 'http://localhost/web-teach-code/blog/2018/12/10/188-revision-v1/', 0, 'revision', '', 0),
(210, 1, '2018-12-10 03:02:04', '2018-12-09 20:02:04', '<strong>Đề bài: Tính diện tích hình chữ nhật</strong>\r\n<pre>input:\r\n10\r\n7\r\nouput:\r\n34</pre>\r\nstart-test\r\n\r\ninput: 10\\n7 output: 34 ;\r\n\r\ninput: 10\\n10 output: 40 ;\r\n\r\ninput: 20\\n90 output: 220 ;\r\n\r\ninput: 120\\n900 output: 2040 ;\r\n\r\nend-test', 'Tính chu vi hình chữ nhật', '', 'inherit', 'closed', 'closed', '', '184-revision-v1', '', '', '2018-12-10 03:02:04', '2018-12-09 20:02:04', '', 184, 'http://localhost/web-teach-code/blog/2018/12/10/184-revision-v1/', 0, 'revision', '', 0),
(211, 1, '2018-12-10 03:03:13', '2018-12-09 20:03:13', '<strong>Đề bài: Tính diện tích hình chữ nhật theo độ dài 2 cạnh (rộng, dài)</strong>\r\n<pre>input:\r\n10\r\n7\r\nouput:\r\n34</pre>\r\nstart-test\r\n\r\ninput: 10\\n7 output: 34 ;\r\n\r\ninput: 10\\n10 output: 40 ;\r\n\r\ninput: 20\\n90 output: 220 ;\r\n\r\ninput: 120\\n900 output: 2040 ;\r\n\r\nend-test', 'Tính chu vi hình chữ nhật', '', 'inherit', 'closed', 'closed', '', '184-revision-v1', '', '', '2018-12-10 03:03:13', '2018-12-09 20:03:13', '', 184, 'http://localhost/web-teach-code/blog/2018/12/10/184-revision-v1/', 0, 'revision', '', 0),
(212, 1, '2018-12-10 03:07:03', '2018-12-09 20:07:03', '<strong>Đề bài: Tính diện tích hình chữ nhật theo độ dài 2 cạnh (rộng, dài)</strong>\r\n<pre>input:\r\n10 7\r\nouput:\r\n34</pre>\r\nstart-test\r\n\r\ninput: 10\\n7 output: 34 ;\r\n\r\ninput: 10\\n10 output: 40 ;\r\n\r\ninput: 20\\n90 output: 220 ;\r\n\r\ninput: 120\\n900 output: 2040 ;\r\n\r\nend-test', 'Tính chu vi hình chữ nhật', '', 'inherit', 'closed', 'closed', '', '184-revision-v1', '', '', '2018-12-10 03:07:03', '2018-12-09 20:07:03', '', 184, 'http://localhost/web-teach-code/blog/2018/12/10/184-revision-v1/', 0, 'revision', '', 0),
(213, 1, '2018-12-10 03:07:35', '2018-12-09 20:07:35', '<strong>Đề bài: tính tổng 2 số nguyên dương</strong>\r\n<pre>input: \r\n2 3 \r\noutput: \r\n5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'TÍNH TỔNG 2 SỐ', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-10 03:07:35', '2018-12-09 20:07:35', '', 87, 'http://localhost/web-teach-code/blog/2018/12/10/87-revision-v1/', 0, 'revision', '', 0),
(214, 1, '2018-12-10 03:08:08', '2018-12-09 20:08:08', '<strong>Đề bài: tính tổng 2 số nguyên dương</strong>\r\n<pre>input: \r\n2 3 \r\noutput: \r\n5</pre>\r\nstart-test\r\n\r\ninput: 2\\n3 output: 5 ;\r\n\r\ninput: 100\\n100 output: 200 ;\r\n\r\ninput: 60\\n40 output: 100 ;\r\n\r\ninput: 100\\n50 output: 150 ;\r\n\r\ninput: 20\\n50 output: 70 ;\r\n\r\ninput: 1000\\n50 output: 1050 ;\r\n\r\nend-test', 'Tính tổng 2 số', '', 'inherit', 'closed', 'closed', '', '87-revision-v1', '', '', '2018-12-10 03:08:08', '2018-12-09 20:08:08', '', 87, 'http://localhost/web-teach-code/blog/2018/12/10/87-revision-v1/', 0, 'revision', '', 0),
(216, 1, '2018-12-10 03:15:38', '2018-12-09 20:15:38', '{\n    \"ribbon-lite::header_textcolor\": {\n        \"value\": \"#0a0a0a\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:15:38\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'f405979e-84dd-4f30-9282-baba89e927d1', '', '', '2018-12-10 03:15:38', '2018-12-09 20:15:38', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/f405979e-84dd-4f30-9282-baba89e927d1/', 0, 'customize_changeset', '', 0),
(217, 1, '2018-12-10 03:20:55', '2018-12-09 20:20:55', 'This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\n\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</blockquote>\n\n...or something like this:\n\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\n\nAs a new WordPress user, you should go to <a href=\"http://localhost/web-teach-code/blog/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!', 'Sample Page', '', 'inherit', 'closed', 'closed', '', '2-revision-v1', '', '', '2018-12-10 03:20:55', '2018-12-09 20:20:55', '', 2, 'http://localhost/web-teach-code/blog/2018/12/10/2-revision-v1/', 0, 'revision', '', 0),
(218, 1, '2018-12-10 03:20:58', '2018-12-09 20:20:58', '<h2>Who we are</h2><p>Our website address is: http://localhost/web-teach-code/blog.</p><h2>What personal data we collect and why we collect it</h2><h3>Comments</h3><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><h3>Media</h3><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><h3>Contact forms</h3><h3>Cookies</h3><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><p>If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><h3>Embedded content from other websites</h3><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p><h3>Analytics</h3><h2>Who we share your data with</h2><h2>How long we retain your data</h2><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><h2>What rights you have over your data</h2><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><h2>Where we send your data</h2><p>Visitor comments may be checked through an automated spam detection service.</p><h2>Your contact information</h2><h2>Additional information</h2><h3>How we protect your data</h3><h3>What data breach procedures we have in place</h3><h3>What third parties we receive data from</h3><h3>What automated decision making and/or profiling we do with user data</h3><h3>Industry regulatory disclosure requirements</h3>', 'Privacy Policy', '', 'inherit', 'closed', 'closed', '', '3-revision-v1', '', '', '2018-12-10 03:20:58', '2018-12-09 20:20:58', '', 3, 'http://localhost/web-teach-code/blog/2018/12/10/3-revision-v1/', 0, 'revision', '', 0),
(219, 1, '2018-12-10 03:21:39', '2018-12-09 20:21:39', '', 'logo', '', 'inherit', 'open', 'closed', '', 'logo', '', '', '2018-12-10 03:21:39', '2018-12-09 20:21:39', '', 0, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/logo.png', 0, 'attachment', 'image/png', 0),
(220, 1, '2018-12-10 03:22:07', '2018-12-09 20:22:07', '{\n    \"ribbon-lite::custom_logo\": {\n        \"value\": 219,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:22:07\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'a811bff1-dfb7-4eac-9124-c71aa317424f', '', '', '2018-12-10 03:22:07', '2018-12-09 20:22:07', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/a811bff1-dfb7-4eac-9124-c71aa317424f/', 0, 'customize_changeset', '', 0),
(221, 1, '2018-12-10 03:22:30', '2018-12-09 20:22:30', 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/cropped-logo.png', 'cropped-logo.png', '', 'inherit', 'open', 'closed', '', 'cropped-logo-png', '', '', '2018-12-10 03:22:30', '2018-12-09 20:22:30', '', 0, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/cropped-logo.png', 0, 'attachment', 'image/png', 0),
(222, 1, '2018-12-10 03:22:33', '2018-12-09 20:22:33', '{\n    \"ribbon-lite::custom_logo\": {\n        \"value\": 221,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:22:33\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '0d83c6c8-7073-41fc-b3a5-8b652f2a9058', '', '', '2018-12-10 03:22:33', '2018-12-09 20:22:33', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/0d83c6c8-7073-41fc-b3a5-8b652f2a9058/', 0, 'customize_changeset', '', 0),
(223, 1, '2018-12-10 03:22:44', '2018-12-09 20:22:44', '{\n    \"ribbon-lite::custom_logo\": {\n        \"value\": \"\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:22:44\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '4a661407-7895-4384-87e3-ae76cf5fffe2', '', '', '2018-12-10 03:22:44', '2018-12-09 20:22:44', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/4a661407-7895-4384-87e3-ae76cf5fffe2/', 0, 'customize_changeset', '', 0),
(224, 1, '2018-12-10 03:23:01', '2018-12-09 20:23:01', '{\n    \"ribbon-lite::header_textcolor\": {\n        \"value\": \"blank\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:23:01\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'ba322e37-9a0c-494a-beb6-2fade654c548', '', '', '2018-12-10 03:23:01', '2018-12-09 20:23:01', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/ba322e37-9a0c-494a-beb6-2fade654c548/', 0, 'customize_changeset', '', 0),
(225, 1, '2018-12-10 03:23:10', '2018-12-09 20:23:10', '{\n    \"ribbon-lite::custom_logo\": {\n        \"value\": 219,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:23:10\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '8cd7fd31-1838-4c1e-8a8e-254bc7125812', '', '', '2018-12-10 03:23:10', '2018-12-09 20:23:10', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/8cd7fd31-1838-4c1e-8a8e-254bc7125812/', 0, 'customize_changeset', '', 0),
(226, 1, '2018-12-10 03:23:48', '2018-12-09 20:23:48', '{\n    \"ribbon-lite::custom_logo\": {\n        \"value\": \"\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:23:48\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '010ef42d-5fe6-4f86-9deb-20b577fc7af0', '', '', '2018-12-10 03:23:48', '2018-12-09 20:23:48', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/010ef42d-5fe6-4f86-9deb-20b577fc7af0/', 0, 'customize_changeset', '', 0),
(227, 1, '2018-12-10 03:24:13', '2018-12-09 20:24:13', '{\n    \"ribbon-lite::header_image\": {\n        \"value\": \"http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/logo.png\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:24:13\"\n    },\n    \"ribbon-lite::header_image_data\": {\n        \"value\": {\n            \"url\": \"http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/logo.png\",\n            \"thumbnail_url\": \"http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/logo.png\",\n            \"timestamp\": 1544387041211,\n            \"attachment_id\": 219,\n            \"width\": 278,\n            \"height\": 89\n        },\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:24:13\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '861f00cd-59bb-4525-9dd0-11e956836d0e', '', '', '2018-12-10 03:24:13', '2018-12-09 20:24:13', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/861f00cd-59bb-4525-9dd0-11e956836d0e/', 0, 'customize_changeset', '', 0),
(228, 1, '2018-12-10 03:25:07', '2018-12-09 20:25:07', '{\n    \"ribbon-lite::header_image\": {\n        \"value\": \"remove-header\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:25:07\"\n    },\n    \"ribbon-lite::header_image_data\": {\n        \"value\": \"remove-header\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:25:07\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'd5bcbdf0-2f96-40e8-8fbe-cc1222b10db1', '', '', '2018-12-10 03:25:07', '2018-12-09 20:25:07', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/d5bcbdf0-2f96-40e8-8fbe-cc1222b10db1/', 0, 'customize_changeset', '', 0),
(229, 1, '2018-12-10 03:25:20', '2018-12-09 20:25:20', '', 'cropped-logo-1.png', '', 'inherit', 'open', 'closed', '', 'cropped-logo-1-png', '', '', '2018-12-10 03:25:20', '2018-12-09 20:25:20', '', 0, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/cropped-logo-1.png', 0, 'attachment', 'image/png', 0),
(230, 1, '2018-12-10 03:25:28', '2018-12-09 20:25:28', '{\n    \"ribbon-lite::header_image\": {\n        \"value\": \"remove-header\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:25:28\"\n    },\n    \"ribbon-lite::header_image_data\": {\n        \"value\": \"remove-header\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:25:28\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', 'dc67ef84-c7a4-4210-b7cf-d911673cf443', '', '', '2018-12-10 03:25:28', '2018-12-09 20:25:28', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/dc67ef84-c7a4-4210-b7cf-d911673cf443/', 0, 'customize_changeset', '', 0),
(231, 1, '2018-12-10 03:25:54', '2018-12-09 20:25:54', '{\n    \"ribbon-lite::header_textcolor\": {\n        \"value\": \"\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-12-09 20:25:54\"\n    }\n}', '', '', 'trash', 'closed', 'closed', '', '7aaf1ecb-0ed1-42aa-a6eb-a042f8d82fc7', '', '', '2018-12-10 03:25:54', '2018-12-09 20:25:54', '', 0, 'http://localhost/web-teach-code/blog/2018/12/10/7aaf1ecb-0ed1-42aa-a6eb-a042f8d82fc7/', 0, 'customize_changeset', '', 0),
(232, 1, '2018-12-10 03:54:08', '2018-12-09 20:54:08', '<div class=\"social4i\">\r\n<div class=\"social4in\"></div>\r\n<div>Trong quá trình lập trình, chúng ta thường phải đọc và ghi dữ liệu ra file. Bài này sẽ hướng dẫn các bạn cách làm đơn giản với C và C++.</div>\r\n</div>\r\nLưu ý: Trong các ví dụ dưới đây, các file input và output đặt cùng thư mục với file mã nguồn.\r\n<div class=\"debai\">Ví dụ: Cho file input.txt, dòng đầu tiên gồm 1 số n là số lượng bạn bè, n dòng tiếp theo mỗi dòng là tên của 1 bạn bè. Đọc và ghi ra file output.txt danh sách bạn bè kèm số thứ tự</div>\r\n<div class=\"table-responsive\">\r\n<table class=\"easy-table easy-table-default \" border=\"0\">\r\n<thead>\r\n<tr>\r\n<th>input.txt</th>\r\n<th>output.txt</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>3\r\nNguyen Van Quan\r\nNguyen Thi Hong Anh\r\nNguyen Van Hung</td>\r\n<td>1.Nguyen Van Quan\r\n2.Nguyen Thi Hong Anh\r\n3.Nguyen Van Hung</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<h2>Code C</h2>\r\n<div>\r\n<div id=\"highlighter_274363\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><caption>file name: test.c - code by: nguyenvanquan7826</caption>\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n, i;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">char</code> <code class=\"cpp plain\">name[255];                         </code><code class=\"cpp comments\">// khai bao bien ten</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">FILE</code> <code class=\"cpp plain\">*fi = </code><code class=\"cpp functions bold\">fopen</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"input.txt\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"r\"</code><code class=\"cpp plain\">);     </code><code class=\"cpp comments\">// mo file de doc</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">FILE</code> <code class=\"cpp plain\">*fo = </code><code class=\"cpp functions bold\">fopen</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"output.txt\"</code><code class=\"cpp plain\">, </code><code class=\"cpp string\">\"w\"</code><code class=\"cpp plain\">);    </code><code class=\"cpp comments\">// mo file de ghi</code></div>\r\n<div class=\"line number9 index8 alt2\"></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fscanf</code><code class=\"cpp plain\">(fi, </code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;n);                   </code><code class=\"cpp comments\">// doc so n tu file fi</code></div>\r\n<div class=\"line number11 index10 alt2\"></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fgets</code><code class=\"cpp plain\">(name, 255, fi);                   </code><code class=\"cpp comments\">// loai bo dau xuong dong sau khi doc so n</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code><code class=\"cpp plain\">(i = 0; i &lt; n; i++) </code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{                   </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">fgets</code><code class=\"cpp plain\">(name, 255, fi);               </code><code class=\"cpp comments\">// doc chuoi gom 255 ky tu tu file fi</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">fprintf</code><code class=\"cpp plain\">(fo, </code><code class=\"cpp string\">\"%d.%s\"</code><code class=\"cpp plain\">, (i+1), name);  </code><code class=\"cpp comments\">// ghi chuoi ra file fo</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fclose</code><code class=\"cpp plain\">(fi);     </code><code class=\"cpp comments\">// dong file fi</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">fclose</code><code class=\"cpp plain\">(fo);     </code><code class=\"cpp comments\">// dong file fo</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2>Code C++</h2>\r\n<div>\r\n<div id=\"highlighter_842594\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><caption>file name: test.cpp - code by: nguyenvanquan7826</caption>\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;fstream&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp keyword bold\">using</code> <code class=\"cpp keyword bold\">namespace</code> <code class=\"cpp plain\">std;</code></div>\r\n<div class=\"line number3 index2 alt2\"></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">n;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">string name;</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ifstream fi(</code><code class=\"cpp string\">\"input.txt\"</code><code class=\"cpp plain\">);   </code><code class=\"cpp comments\">// mo file de doc</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">ofstream fo(</code><code class=\"cpp string\">\"output.txt\"</code><code class=\"cpp plain\">);  </code><code class=\"cpp comments\">// mo file de ghi</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fi &gt;&gt; n;                  </code><code class=\"cpp comments\">// doc 1 so tu file</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">getline(fi, name);          </code><code class=\"cpp comments\">// loai bo dau xuong dong sau khi doc so n</code></div>\r\n<div class=\"line number13 index12 alt2\"></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">for</code> <code class=\"cpp plain\">(</code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">i = 0; i &lt;n; i++)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">getline(fi, name);      </code><code class=\"cpp comments\">// doc 1 dong tu file</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">fo &lt;&lt; (i+1) &lt;&lt; </code><code class=\"cpp string\">\".\"</code> <code class=\"cpp plain\">&lt;&lt; name &lt;&lt; </code><code class=\"cpp string\">\'\\n\'</code><code class=\"cpp plain\">;     </code><code class=\"cpp comments\">// ghi 1 dong ra file</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fi.close();</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">fo.close();</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>', 'Lập trình C: Bài 14 – Nhập xuất file trong C/C++', '', 'inherit', 'closed', 'closed', '', '175-revision-v1', '', '', '2018-12-10 03:54:08', '2018-12-09 20:54:08', '', 175, 'http://localhost/web-teach-code/blog/2018/12/10/175-revision-v1/', 0, 'revision', '', 0),
(233, 1, '2018-12-10 04:02:40', '2018-12-09 21:02:40', '', 'c_lang', '', 'inherit', 'open', 'closed', '', 'c_lang', '', '', '2018-12-10 04:02:40', '2018-12-09 21:02:40', '', 175, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/c_lang.jpg', 0, 'attachment', 'image/jpeg', 0),
(234, 1, '2018-12-10 04:06:38', '2018-12-09 21:06:38', '', 'c_home', '', 'inherit', 'open', 'closed', '', 'c_home', '', '', '2018-12-10 04:06:38', '2018-12-09 21:06:38', '', 175, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/c_home.jpg', 0, 'attachment', 'image/jpeg', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(235, 1, '2018-12-10 04:09:04', '2018-12-09 21:09:04', 'Trước khi tìm hiểu về cấu trúc các lệnh rẽ nhánh, chúng ta nên tìm hiểu một chút về lệnh đơn và khối lệnh.\r\n<h2><span id=\"1_Lenh_va_khoi_lenh\">1. Lệnh và khối lệnh</span></h2>\r\n<strong>Lệnh</strong> là một tác vụ, biểu thức, hàm, cấu trúc điều khiển… nào đó đơn lẻ.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_485763\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">x = x + 2; </code><code class=\"cpp comments\">// đây là một lệnh đơn </code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Day la mot lenh\\n\"</code><code class=\"cpp plain\">);  </code><code class=\"cpp comments\">// đây cũng là một lệnh đơn.</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>Khối lệnh:</strong> là một dãy các câu lệnh được bọc bởi cặp dấu <strong>{ }</strong>.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_531316\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp plain\">{ </code><code class=\"cpp comments\">//dau khoi</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">a = 78;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">b = 26;</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Tong %d + %d = %d\"</code><code class=\"cpp plain\">, a, b, a+b);</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp plain\">} </code><code class=\"cpp comments\">//cuoi khoi</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhi muốn thực hiện một dãy các câu lệnh liên tiếp nào đó thì chúng ta dùng khối lệnh, tức là đặt chúng vào cặp dấu <strong>{}</strong> và viết thụt vào 1 tab cho dễ nhìn.\r\n\r\n<strong>Lưu ý:</strong> Khi một lệnh được đặt trong cặp ngoặc {} thì cũng được coi là khối lệnh.\r\n<h2><span id=\"2_Lenh_if_va_if_else\">2. Lệnh if và if else</span></h2>\r\n<h3><span id=\"21_Lenh_if\">2.1 Lệnh if</span></h3>\r\nLệnh if dịch ra có nghĩa là nếu cái này thì làm cái kia. Ví dụ nếu bạn có người yêu thì chắc bạn sẽ đi chơi cùng ẻm chứ không ngồi xem bài của mình…\r\n\r\n<strong>Cú pháp của lệnh if</strong>\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_if.png?w=780&amp;ssl=1\" alt=\"Lệnh if\" width=\"776\" height=\"374\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động của lệnh if</em></center>\r\n<blockquote><strong>Chú ý:</strong>\r\n<strong>Không đặt dấu chấm phẩy sau câu lệnh if. Ví dụ: if (a &gt; 0);</strong>\r\n<strong>Khi đặt dấu chấm phẩy ở lệnh if thì coi như kết thúc lệnh if tại đó nên khối lệnh sẽ không được thực hiện dù điều kiện đúng hay sai</strong>.</blockquote>\r\n<strong>Ví dụ:</strong> Ban đầu bạn có 100 (tỷ), hãy nhập vào một số tiền. Nếu số tiền là số dương thì cộng thêm vào ví của bạn ngược lại thì không làm gì cả. In ra số tiền bạn có sau khi nhập.\r\n<div>\r\n<div id=\"highlighter_887039\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{     </code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 100; </code><code class=\"cpp comments\">// So tien ban dau ban co</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">y; </code><code class=\"cpp comments\">// so tien nhap moi</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so tien = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">, &amp;y);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( y &gt; 0 ) </code><code class=\"cpp comments\">// neu so tien nhap vao lon hon 0 thi cong vao vi</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + y;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number15 index14 alt2\"></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien sau = %d \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number17 index16 alt2\"></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThật đơn giản. Bạn chạy chương trình và xem cách nó hoạt động nhé.\r\n<h3><span id=\"22_Lenh_if_8211_else\">2.2 Lệnh if – else</span></h3>\r\nLệnh if-else là dạng đủ của lệnh if. if là nếu, else là ngược lại.\r\n\r\n<strong>Cú pháp lệnh if – else</strong>\r\n\r\n<center><img src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_if_else.png?w=780&amp;ssl=1\" alt=\"Lệnh if else\" width=\"776\" height=\"292\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động lệnh if – else</em></center><strong>Ví dụ:</strong> Tương tự ví dụ trên. Ban đầu bạn có 100 (tỷ), vợ bạn có 50 (tỷ), hãy nhập vào một số tiền. Nếu số tiền là số dương thì cộng thêm vào ví của bạn một nửa, của vợ bạn một nửa, ngược lại thì chỉ cộng vào ví của bạn (bản chất là trừ đi vì số tiền có thể âm hoặc bằng 0). In ra số tiền bạn và vợ bạn có sau khi nhập.\r\n<div>\r\n<div id=\"highlighter_270183\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">x = 100, y = 50; </code><code class=\"cpp comments\">// So tien ban va vo ban co</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">z; </code><code class=\"cpp comments\">// so tien nhap moi</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap so tien = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f\"</code><code class=\"cpp plain\">, &amp;z);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( z &gt; 0 ) </code><code class=\"cpp comments\">// neu so tien nhap vao lon hon 0 thi cong vao vi</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + z / 2;</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">y = y + z / 2;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">x = x + z;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number19 index18 alt2\"></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien cua ban = %.2f \\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"So tien cua vo ban = %.2f \\n\"</code><code class=\"cpp plain\">, y);</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKhá là đơn giản. Bạn thử chạy và xem kết quả nhé. (Ở bài này mình dùng kiểu float vì có phép chia nên số tiền có thể lẻ).\r\n<h3><span id=\"23_Lenh_if_else_long_nhau_va_if-else-if\">2.3 Lệnh if else lồng nhau và if-else-if</span></h3>\r\nTrong nhiều trường hợp, chúng ta cần phải xử lý nhiều điều kiện chứ không chỉ có 1 điều kiện. Do vậy chúng ta có thể lồng nhiều câu lệnh if else vào với nhau.\r\n\r\n<strong>Ví dụ:</strong> Công ty đang triển khai một loại cân sao cho cân theo cặp phục vụ cho cân các cặp tình nhân, và thông báo ra bạn trai nặng hơn hay bạn gái nặng hơn hay hai bạn nặng bằng nhau.\r\n\r\nNhư vậy chúng ta cần xử lý 3 trường hợp chứ không phải chỉ đơn giản là nếu và ngược lại nữa. Chúng ta có code như sau:\r\n<div>\r\n<div id=\"highlighter_768493\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">a; </code><code class=\"cpp comments\">// can nang cua ban trai</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b; </code><code class=\"cpp comments\">// can nang cua ban gai</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao can nang ban trai va ban gai: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f%f\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &gt; b )</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban trai nang hon!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &lt; b)</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban gai nang hon\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">            </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai ban nang bang nhau\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nOk. Vậy là chúng ta sử dụng được chúng lồng vào nhau. Tuy nhiên cách này sẽ làm code hơi rối và tốn giấy mực. Bạn có thể sử dụng lệnh if-else-if như sau:\r\n<div>\r\n<div id=\"highlighter_383772\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">a; </code><code class=\"cpp comments\">// can nang cua ban trai</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">float</code> <code class=\"cpp plain\">b; </code><code class=\"cpp comments\">// can nang cua ban gai</code></div>\r\n<div class=\"line number7 index6 alt2\"></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap vao can nang ban trai va ban gai: \\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%f%f\"</code><code class=\"cpp plain\">, &amp;a, &amp;b);</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &gt; b )</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban trai nang hon!\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code> <code class=\"cpp keyword bold\">if</code><code class=\"cpp plain\">( a &lt; b)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban gai nang hon\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">} </code><code class=\"cpp keyword bold\">else</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai ban nang bang nhau\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number21 index20 alt2\"></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCách code và ý nghĩa cũng rất rõ ràng, dễ hiểu thôi :).\r\n<h3><span id=\"24_Toan_tu_dieu_kien_8211_If_else_rut_gon\">2.4 Toán tử điều kiện – If else rút gọn</span></h3>\r\nChúng ta có một toán tử rút gọn của lệnh if else như sau:\r\n\r\n<code>điều kiện ? biểu thứ 1: biểu thức 2;</code>\r\n\r\nNếu điều kiện đúng thì biểu thức 1 được thực hiện và giá trị của biểu thức 1 là giá trị của toàn bộ lệnh. Nếu điều kiện sai thì biểu thức 2 được thực hiện và giá trị của biểu thức 2 trở thành giá trị của toàn bộ lệnh.\r\n\r\nVí dụ:\r\n<div>\r\n<div id=\"highlighter_718281\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">x = 3;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">y = 4;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">z;</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">z = x &gt; y ? x : y;</code></div>\r\n<div class=\"line number10 index9 alt1\"></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"z = %d\\n\"</code><code class=\"cpp plain\">, z);</code></div>\r\n<div class=\"line number12 index11 alt1\"></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">x = x &gt; y ? x : 100;</code></div>\r\n<div class=\"line number14 index13 alt1\"></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"x = %d\\n\"</code><code class=\"cpp plain\">, x);</code></div>\r\n<div class=\"line number16 index15 alt1\"></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKết quả sau khi chạy chương trình:\r\n<blockquote>z = 4\r\nx = 100</blockquote>\r\nNhư vậy ta thấy biểu thức 2 và biểu thức 3 có thể là 1 giá trị biến, hằng, hoặc một hàm nào đó có trả về giá trị.\r\n<h2><span id=\"2_Lenh_switch_case\">2. Lệnh switch case</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\nLệnh switch cũng giống cấu trúc if, nhưng nó mềm dẻo hơn và linh động hơn nhiều so với sử dụng if. Tuy nhiên, nó cũng có mặt hạn chế là kết quả của biểu thức phải là giá trị hằng nguyên (có giá trị cụ thể). Một bài toán sử dụng lệnh switch thì cũng có thể sử dụng if, nhưng ngược lại thì còn tùy thuộc vào giải thuật của bài toán.\r\n\r\n<strong>Cấu trúc lệnh switch case</strong>\r\n\r\n<center><img src=\"https://i2.wp.com/cachhoc.net/wp-content/uploads/2014/12/chap5_switch_case.png?w=780&amp;ssl=1\" alt=\"Lệnh switch case\" width=\"776\" height=\"529\" /></center><center><em>Cú pháp, lưu đồ và cách hoạt động lệnh switch case</em></center><strong>Ví dụ:</strong> Nhập vào 1 số từ 1-&gt;5 và in ra cách đọc tương ứng:\r\n<div>\r\n<div id=\"highlighter_303460\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">,&amp;a);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">switch</code><code class=\"cpp plain\">(a)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">1: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Mot\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">2: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">3: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ba\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">4: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Bon\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">5: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nam\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number22 index21 alt1\"></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number24 index23 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nCác bạn chạy thử, và thử bỏ một vài lệnh break xem nó ra sao nhé.\r\n\r\nNgoài ra, chúng ta có cấu trúc switch-case-default nữa. Nguyên lý hoạt động giống như switch-case nhưng nếu các trường hợp đều không thỏa mãn thì sẽ thực hiện lệnh của trường hợp default (dịch là trường hợp mặc định).\r\n<div>\r\n<div id=\"highlighter_169915\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">01</div>\r\n<div class=\"line number2 index1 alt1\">02</div>\r\n<div class=\"line number3 index2 alt2\">03</div>\r\n<div class=\"line number4 index3 alt1\">04</div>\r\n<div class=\"line number5 index4 alt2\">05</div>\r\n<div class=\"line number6 index5 alt1\">06</div>\r\n<div class=\"line number7 index6 alt2\">07</div>\r\n<div class=\"line number8 index7 alt1\">08</div>\r\n<div class=\"line number9 index8 alt2\">09</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div>\r\n<div class=\"line number23 index22 alt2\">23</div>\r\n<div class=\"line number24 index23 alt1\">24</div>\r\n<div class=\"line number25 index24 alt2\">25</div>\r\n<div class=\"line number26 index25 alt1\">26</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">a;</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nhap a = \"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">scanf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"%d\"</code><code class=\"cpp plain\">,&amp;a);</code></div>\r\n<div class=\"line number8 index7 alt1\"></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">switch</code><code class=\"cpp plain\">(a)</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">1: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Mot\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">2: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Hai\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">3: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ba\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">4: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Bon\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">case</code> <code class=\"cpp plain\">5: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Nam\\n\"</code><code class=\"cpp plain\">); </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"cpp spaces\">        </code><code class=\"cpp keyword bold\">default</code><code class=\"cpp plain\">: </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Ban da nhap mot so khac\\n\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"cpp spaces\">                </code><code class=\"cpp keyword bold\">break</code><code class=\"cpp plain\">;</code></div>\r\n<div class=\"line number23 index22 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp plain\">}</code></div>\r\n<div class=\"line number24 index23 alt1\"></div>\r\n<div class=\"line number25 index24 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number26 index25 alt1\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2><span id=\"3_Khi_nao_dung_if-else_khi_nao_dung_switch-case\">3. Khi nào dùng if-else, khi nào dùng switch-case</span></h2>\r\nNhư mình đã nói ở trên, lệnh switch case có tính mềm dẻo và linh động hơn if else, cách viết cũng thoáng và khó nhầm hơn if else nhưng một bài dùng được switch case thí chắc chắn dùng được bằng if else còn khi dùng if else lại chưa chắc dùng được bằng switch case.\r\n\r\n<strong>Vậy các bạn nên dùng switch case khi:</strong>\r\n<ul>\r\n 	<li>Số lượng điều kiện là lớn như dạng menu chọn,… -&gt; switch case viết sẽ lạch mạc, dễ kiểm soát.</li>\r\n 	<li>Các trường hợp điều kiện phải có giá trị là số nguyên hoặc ký tự.</li>\r\n</ul>\r\n<strong>Các trường hợp còn lại, các bạn hãy dùng if – else</strong>.\r\n<blockquote><strong>Bài tập:</strong>\r\n<ol>\r\n 	<li>Viết chương trình nhập vào 4 số nguyên. Tìm và in ra số lớn nhất.\r\nHướng dẫn: Ta có 4 số nguyên a, b, c, d. Tìm 2 số nguyên lớn nhất x, y của 2 cặp (a, b) và (c, d). Sau đó so sánh x và y để tìm ra số nguyên lớn nhất.</li>\r\n 	<li>Hãy nhập vào một số là 1 tháng trong năm, in ra xem tháng đó có bao nhiêu ngày. (Coi như không có năm nhuận).</li>\r\n 	<li>Hãy lập trình chương trình giải phương trình bậc 2: <img class=\"latex\" title=\"ax^{2} + bx + c = 0\" src=\"https://s0.wp.com/latex.php?latex=ax%5E%7B2%7D+%2B+bx+%2B+c+%3D+0&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"ax^{2} + bx + c = 0\" /> với a, b, c nhập từ bàn phím.</li>\r\n 	<li>Viết chương trình nhập vào 3 giá trị nguyên dương a, b, c. Kiểm tra xem a, b, c có phải là 3 cạnh của tam giác không? Nếu là 3 cạnh của tam giác thì tính diện tích của tam giác theo công thức:<img class=\"latex\" title=\"S = \\sqrt{p(p-a)(p-b)(p-c)}\" src=\"https://s0.wp.com/latex.php?latex=S+%3D+%5Csqrt%7Bp%28p-a%29%28p-b%29%28p-c%29%7D&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"S = \\sqrt{p(p-a)(p-b)(p-c)}\" /> với p là nửa chu vi tam giác. <img class=\"latex\" title=\"p = \\frac{a+b+c}{2}\" src=\"https://s0.wp.com/latex.php?latex=p+%3D+%5Cfrac%7Ba%2Bb%2Bc%7D%7B2%7D&amp;bg=ffffff&amp;fg=000&amp;s=0\" alt=\"p = \\frac{a+b+c}{2}\" /></li>\r\n 	<li>Viết chương trình tính tiền điện gồm các điều kiện sau:</li>\r\n</ol>\r\n<ul>\r\n 	<li>Tiền thuê bao điện kế: 1000đ/tháng</li>\r\n 	<li>Định mức sử dụng điện cho mỗi hộ là: 50 KW với giá 230đ/KW</li>\r\n 	<li>Nếu phần vượt định mức &lt;= 50KW thì tính giá 480đ/KW</li>\r\n 	<li>Nếu 50KW &lt; phần vượt định mức &lt; 100KW thì tính giá 700đ/K</li>\r\n 	<li>Nếu phần vượt định mức &gt;= 100KW thì tính giá 900đ/KWChỉ số mới và cũ được nhập vào từ bàn phím. In ra màn hình chỉ số cũ, chỉ số mới, tiền trả định mức, tiền trả vượt định mức, tổng tiền phải trả.</li>\r\n</ul>\r\n</blockquote>', 'Lập trình C: Bài 5 – if else, switch case trong C', '', 'inherit', 'closed', 'closed', '', '157-revision-v1', '', '', '2018-12-10 04:09:04', '2018-12-09 21:09:04', '', 157, 'http://localhost/web-teach-code/blog/2018/12/10/157-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(236, 1, '2018-12-10 04:09:52', '2018-12-09 21:09:52', '<h2><span id=\"1_Gioi_thieu_ve_lap_trinh\">1. Giới thiệu về lập trình</span></h2>\r\nChắc hẳn bạn đã được tiếp xúc với máy tính, điện thoại dù ít hay nhiều và dùng các ứng dụng hoặc trò chơi trên đó ví như Word, Excel để làm việc văn phòng hoặc dùng Chrome, Firefox để vào Facebook, Google hay chính Facebook và Google là các phầm mềm.\r\n\r\nBạn tưởng tượng lập trình là quá trình bạn tạo ra các phần mềm, ứng dụng như thế. Bạn tạo ra ứng dụng cho người khác dùng, làm việc; bạn tạo ra game cho người khác chơi, làm ra website cho người khác truy cập vào. Nghĩ đến đây đã thấy hứng thú rồi 🙂\r\n\r\nĐể làm ra được phần mềm (hoặc game, website) thì chúng ta phải dạy cho máy tính cách làm việc hay nói cách khác là đưa các quy tắc mà chúng ta mong muốn để máy tính thực hiện như là khi ấn nút lên trên thì nhân vật phải nhảy lên, ấn nút sang trái thì nhân vật sẽ đi sang trái.\r\n\r\nGiống như dạy cho ai đó phải làm gì thì bạn phải nói cho họ nghe hoặc viết chữ để đưa cho họ đọc và từ đó họ mới hiểu được bạn nói gì. Việc đưa các quy tắc này vào máy tính để nó hiểu được bạn muốn làm gì mà thực hiện theo cũng vậy, bạn cần viết các yêu cầu đó theo một cú pháp cụ thể mà cái đó gọi là <strong>ngôn ngữ lập trình</strong>.\r\n\r\n<strong>Ngôn ngữ lập trình</strong> cũng giống như tiếng Việt để người Việt giao tiếp và hiểu, tiếng Anh dùng cho người Anh, Mỹ và nhiều nước khác, … <strong>ngôn ngữ lập trình</strong> nó là ngôn ngữ để người nói cho máy tính hiểu. Hiện nay có nhiều ngôn ngữ lập trình khác nhau như C, C++, Java, C#, PHP, python,… mỗi ngôn ngữ có ưu nhược điểm riêng và có ứng dụng trong các lĩnh vực nhất định.\r\n<h2><span id=\"2_Lap_trinh_C\">2. Lập trình C</span></h2>\r\nLập trình C đơn giản là các bạn dùng <strong>Ngôn ngữ lập trình C</strong> để tạo ra các phần mềm.\r\n\r\nMỗi phần mềm hay gọi là chương trình (chương trình máy tính) sẽ được viết bởi ngôn ngữ C bằng một hay nhiền file với những quy tắc nhất định của ngôn ngữ mà chúng ta sẽ dần tìm hiểu.\r\n<h2><span id=\"3_Cai_dat_cong_cu\">3. Cài đặt công cụ</span></h2>\r\n<div class=\"adssen adssen-in-post\"></div>\r\n<h3><span id=\"31_Cai_dat\">3.1 Cài đặt</span></h3>\r\nĐể có thể lập trình C thì các bạn cần cài bộ dịch gcc hoặc g++. Tuy nhiên để dễ dàng thì hiện tại có nhiều phần mềm tích hợp (hay gọi là môi trường phát triển – IDE) để chúng ta có thể dễ dàng.\r\n<ul>\r\n 	<li>Đối với các bạn dùng Windows có thể download <a href=\"https://sourceforge.net/projects/orwelldevcpp/\">Dev-C++</a> hoặc <a href=\"http://www.codeblocks.org/downloads/binaries\">Code::Blocks</a> về cài đặt và chúng ta có thể dùng ngay để viết các chương trình đơn giản.</li>\r\n 	<li>Đối với các bạn dùng Linux (ubuntu, Linux Mint,…) có thể cài bằng cách mở terminal lên và chạy lệnh cài đặt sau:<code>sudo apt-get install build-essential</code>\r\n\r\nSau khi chạy lệnh trên, các bạn có thể mở bất cứ trình soạn thảo nào để code (như gedit, vim, hay sublime-text,…) sau đó dịch, chạy chương trình bằng terminal.\r\nHoặc các bạn cũng hoàn toàn có thể download và cài <a href=\"http://www.codeblocks.org/downloads/binaries\">Code::Blocks</a> trên Linux để dùng rất tiện, hoặc dùng lệnh cài:\r\n\r\n<code>sudo apt-get install codeblocks</code>\r\n\r\nCác bạn có thể xem thêm chi tiết về <a href=\"https://nguyenvanquan7826.com/2014/05/21/linux-cc-lap-trinh-cc-tren-ubuntu-linux/\">Lập trình C/C++ trên Ubuntu (Linux) tại blog của mình</a></li>\r\n</ul>\r\nĐể dễ và thống nhất trong quá trình làm, mình sẽ dùng Dev-C++ nhé.\r\n<h3><span id=\"32_Gioi_thieu_co_ban_ve_Dev-C\">3.2 Giới thiệu cơ bản về Dev-C++</span></h3>\r\nĐể tiện hình dung, các bạn mở Dev-C++ lên sẽ thấy giao diện như hình sau (<em>Hiện tại bản mình đang dùng là 5.11, các bạn dùng bản khác có thể sẽ có một chút khác nhưng sẽ không đáng kể)</em>.\r\n\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"776\" height=\"651\" /></center><center><em>Giao diện Dev-C++ 5.11</em></center>Trong hình trên, có một số phần chính mình đánh dấu bằng các số với ý nghĩa sau:\r\n1. Nút tạo file mới\r\n2. Nút mở một file đã có\r\n3. Nút biên dịch và chạy chương trình\r\n4. Vùng soạn thảo code (mã chương trình)\r\n5. Vùng hiển thị lỗi nếu có.\r\n<h2><span id=\"4_Tao_chuong_trinh_dau_tien\">4. Tạo chương trình đầu tiên</span></h2>\r\nBây giờ các bạn có thể viết chương trình phần mềm đầu tiên để thử nghiệm.\r\nB1: Tạo 1 file mới.\r\nB2: Gõ hoặc chép đoạn code sau vào vùng soạn thảo.\r\n<div>\r\n<div id=\"highlighter_879025\" class=\"syntaxhighlighter cpp\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"cpp preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"cpp color1 bold\">int</code> <code class=\"cpp plain\">main()</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"cpp plain\">{</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"cpp spaces\">    </code><code class=\"cpp functions bold\">printf</code><code class=\"cpp plain\">(</code><code class=\"cpp string\">\"Welcome\"</code><code class=\"cpp plain\">);</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"cpp spaces\">    </code><code class=\"cpp keyword bold\">return</code> <code class=\"cpp plain\">0;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"cpp plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nB3: Lưu lại với tên file là <strong>Test.c</strong> hoặc <strong>Test.cpp</strong>\r\nB4: Click nút chạy chương trình và bạn sẽ thấy một màn hình màu đen hiện lên như sau:\r\n\r\n<center><img title=\"Title\" src=\"https://i1.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c-welcome.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"674\" height=\"336\" /></center><center><em>Chương trình C đầu tiên khi chạy</em></center>Trong đó các bạn có thể thấy chữ <strong><em>Welcome</em></strong> hiện lên, đó chính là dòng chữ được in ra khi dùng lệnh <strong>printf</strong>. Phần dưới đường kẻ ngang là do Dev-C tự sinh ra.\r\n\r\n<strong>Mình giải thích một chút về code:</strong>\r\n<ul>\r\n 	<li><strong>Dòng 1:</strong> Chứa phát biểu tiền xử lý <code>#include &lt;stdio.h&gt;</code> . Vì trong chương trình này ta sử dụng các lệnh trong thư viện của C là printf, do đó bạn cần phải có khai báo của hàm thư viện này để báo cho trình biên dịch C biết. Nếu không khai báo chương trình sẽ báo lỗi. Thư viện <strong>stdio.h</strong> viết tắt của <strong>standard input output</strong> (std – i – o) là thư viện nhập xuất chuẩn).</li>\r\n 	<li><strong>Dòng 3: ** <code>int main()</code> là thành phần chính của mọi chương trình C. Mọi chương trình C đều bắt đầu thi hành từ hàm **main</strong>. Cặp dấu ngoặc <code>()</code> cho biết đây là khối hàm (function). Hàm main() có từ khóa <code>int</code> đầu tiên cho biết hàm này trả về giá trị kiểu nguyên (int).</li>\r\n 	<li><strong>Dòng 4 và 7:</strong> cặp dấu ngoặc móc <code>{}</code> giới hạn thân của hàm. Thân hàm bắt đầu bằng dấu { và kết thúc bằng dấu }.</li>\r\n 	<li><strong>Dòng 5:</strong> <code>printf (\"Welcome\");</code>, chỉ thị cho máy in ra chuỗi ký tự nằm trong nháy kép <code>\"\"</code>. Hàng này được gọi là một câu lệnh, kết thúc một câu lệnh trong C phải là dấu chấm phẩy( ; ).</li>\r\n 	<li><strong>Dòng 6:</strong> <code>return 0;</code> Trả về giá trị kiểu nguyên là 0 theo như đúng ban đầu là khai báo int main().</li>\r\n</ul>\r\n<strong>Lưu ý:</strong>\r\n<ol>\r\n 	<li>Trong chương trình này mình <strong>không dùng thư viện conio.h</strong> vì trong chuẩn C không có thư viện này, và từ đó cũng không dùng được getch() để dừng màn hình mà mình đã thay bằng lệnh <code>system(\"pause\");</code> trong thư viện <strong>stdlib.h</strong></li>\r\n 	<li>Khi dùng <code>return</code> để trả về giá trị của hàm thì các bạn có thể bỏ qua lệnh này chương trình vẫn chạy nhưng về chuẩn là sai, trả về 1 cũng sai, tóm lại là trả về 0. Nếu trả về 1 số khác không thì hệ thống máy tính sẽ hiểu là chương trình này của bạn sau khi chạy phát sinh ra cần đó lỗi.</li>\r\n</ol>\r\nBây giờ các bạn mở folder chứa file <strong>Test.c</strong> mà bạn vừa tạo ra, các bạn sẽ nhìn thấy một file có tên <strong>Test.exe</strong> (gọi tắt là file exe), đây chính là file chạy chương trình. Bây giờ nếu muốn bạn có thể click chuột vào file exe này là chạy được chương trình trên hoặc bạn có thể copy file exe này sang máy tính khác thì vẫn có thể chạy được, nó giống như bạn copy game từ máy này sang máy khác vậy.\r\n\r\nTừ đây ta có:\r\n<ul>\r\n 	<li>File <strong>Test.c</strong> là file chúng ta tạo ra và viết các lệnh để máy tính hiểu, file này gọi là <strong>file mã nguồn</strong>.</li>\r\n 	<li>File <strong>Test.exe</strong> là file sinh ra khi chúng ta ấn nút Chạy chương trình, file này gọi là <strong>file thực thi</strong>.</li>\r\n</ul>\r\n<center><img src=\"https://i0.wp.com/cachhoc.net/wp-content/uploads/2018/01/dev-c-file.png?w=780&amp;ssl=1\" alt=\"Dev-C++\" width=\"144\" height=\"91\" /></center>&nbsp;\r\n\r\n<center><em>File mã nguồn và file thực thi</em></center><strong><em>Lưu ý: Các chương trình sau này chúng ta làm sẽ chủ yếu chạy trên màn hình đen như trên (gọi là màn hình console – đọc là ‘con sâu’), tuy không có giao diện đẹp mắt nhưng đây là phần lõi của lập trình, học tốt phần này chúng ta mới có thể làm được các chương trình có giao diện đồ họa và các ngôn ngữ khác cũng hầu hết dựa vào phần lõi này.</em></strong>', 'Lập trình C: Bài 1 – Hello World', '', 'inherit', 'closed', 'closed', '', '149-revision-v1', '', '', '2018-12-10 04:09:52', '2018-12-09 21:09:52', '', 149, 'http://localhost/web-teach-code/blog/2018/12/10/149-revision-v1/', 0, 'revision', '', 0),
(237, 1, '2018-12-10 04:11:39', '2018-12-09 21:11:39', '', 'LOGO-Programming-Language', '', 'inherit', 'open', 'closed', '', 'logo-programming-language', '', '', '2018-12-10 04:11:39', '2018-12-09 21:11:39', '', 188, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/LOGO-Programming-Language.jpg', 0, 'attachment', 'image/jpeg', 0),
(238, 1, '2018-12-10 04:12:22', '2018-12-09 21:12:22', '', 'file-code-icon', '', 'inherit', 'open', 'closed', '', 'file-code-icon', '', '', '2018-12-10 04:12:22', '2018-12-09 21:12:22', '', 188, 'http://localhost/web-teach-code/blog/wp-content/uploads/2018/12/file-code-icon.png', 0, 'attachment', 'image/png', 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_termmeta`
--

CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) UNSIGNED NOT NULL,
  `term_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `wp_terms`
--

CREATE TABLE `wp_terms` (
  `term_id` bigint(20) UNSIGNED NOT NULL,
  `name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_terms`
--

INSERT INTO `wp_terms` (`term_id`, `name`, `slug`, `term_group`) VALUES
(1, 'Dễ', 'de', 0),
(2, 'menu1', 'menu1', 0),
(3, 'Trung bình', 'trung-binh', 0),
(4, 'Khó', 'kho', 0),
(5, 'Cực dễ', 'cuc-de', 0),
(6, 'Hướng dẫn', 'huong-dan', 0),
(7, 'Bài tập', 'bai-tap', 0),
(8, 'C', 'c', 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_term_relationships`
--

CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_term_relationships`
--

INSERT INTO `wp_term_relationships` (`object_id`, `term_taxonomy_id`, `term_order`) VALUES
(68, 3, 0),
(73, 1, 0),
(76, 1, 0),
(87, 5, 0),
(94, 1, 0),
(121, 8, 0),
(130, 1, 0),
(135, 2, 0),
(143, 2, 0),
(144, 2, 0),
(145, 2, 0),
(146, 2, 0),
(147, 2, 0),
(149, 8, 0),
(151, 8, 0),
(154, 8, 0),
(157, 8, 0),
(159, 8, 0),
(161, 8, 0),
(163, 8, 0),
(165, 8, 0),
(167, 8, 0),
(169, 8, 0),
(171, 8, 0),
(173, 8, 0),
(175, 8, 0),
(179, 2, 0),
(180, 2, 0),
(184, 5, 0),
(188, 1, 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_term_taxonomy`
--

CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) UNSIGNED NOT NULL,
  `term_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `parent` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_term_taxonomy`
--

INSERT INTO `wp_term_taxonomy` (`term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES
(1, 1, 'category', '', 7, 1),
(2, 2, 'nav_menu', '', 0, 8),
(3, 3, 'category', '', 7, 0),
(4, 4, 'category', '', 7, 0),
(5, 5, 'category', '', 7, 2),
(6, 6, 'category', '', 0, 0),
(7, 7, 'category', '', 0, 0),
(8, 8, 'category', '', 6, 14);

-- --------------------------------------------------------

--
-- Table structure for table `wp_usermeta`
--

CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) UNSIGNED NOT NULL,
  `user_id` bigint(20) UNSIGNED NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_usermeta`
--

INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`) VALUES
(1, 1, 'nickname', 'mducc'),
(2, 1, 'first_name', 'Đức'),
(3, 1, 'last_name', 'Nguyễn Minh'),
(4, 1, 'description', ''),
(5, 1, 'rich_editing', 'true'),
(6, 1, 'syntax_highlighting', 'true'),
(7, 1, 'comment_shortcuts', 'false'),
(8, 1, 'admin_color', 'fresh'),
(9, 1, 'use_ssl', '0'),
(10, 1, 'show_admin_bar_front', 'true'),
(11, 1, 'locale', ''),
(12, 1, 'wp_capabilities', 'a:1:{s:13:\"administrator\";b:1;}'),
(13, 1, 'wp_user_level', '10'),
(14, 1, 'dismissed_wp_pointers', 'wp496_privacy,theme_editor_notice'),
(15, 1, 'show_welcome_panel', '0'),
(17, 1, 'wp_dashboard_quick_press_last_post_id', '4'),
(18, 1, 'show_try_gutenberg_panel', '0'),
(20, 1, 'nav_menu_recently_edited', '2'),
(21, 1, 'managenav-menuscolumnshidden', 'a:5:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";i:4;s:15:\"title-attribute\";}'),
(22, 1, 'metaboxhidden_nav-menus', 'a:1:{i:0;s:12:\"add-post_tag\";}'),
(23, 2, 'nickname', 'tung'),
(24, 2, 'first_name', ''),
(25, 2, 'last_name', ''),
(26, 2, 'description', ''),
(27, 2, 'rich_editing', 'true'),
(28, 2, 'syntax_highlighting', 'true'),
(29, 2, 'comment_shortcuts', 'false'),
(30, 2, 'admin_color', 'coffee'),
(31, 2, 'use_ssl', '0'),
(32, 2, 'show_admin_bar_front', 'true'),
(33, 2, 'locale', ''),
(34, 2, 'wp_capabilities', 'a:1:{s:10:\"subscriber\";b:1;}'),
(35, 2, 'wp_user_level', '0'),
(36, 2, 'dismissed_wp_pointers', 'wp496_privacy'),
(49, 1, 'wp_user-settings', 'editor=tinymce&libraryContent=browse&post_dfw=off'),
(50, 1, 'wp_user-settings-time', '1544389063'),
(52, 1, 'session_tokens', 'a:5:{s:64:\"ca8f56bd07479db37ae2a43dc080d0ce30d1f90690e635706a69b3e04fda6ac4\";a:4:{s:10:\"expiration\";i:1544546341;s:2:\"ip\";s:3:\"::1\";s:2:\"ua\";s:68:\"Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\";s:5:\"login\";i:1544373541;}s:64:\"091bae781dac1c5e21c2d602d108ff6f394c00e899b13244c3a6dfa1def5c21c\";a:4:{s:10:\"expiration\";i:1544546426;s:2:\"ip\";s:3:\"::1\";s:2:\"ua\";s:68:\"Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\";s:5:\"login\";i:1544373626;}s:64:\"1f770fc97379a244afa40b7272353a92847906dae54585190f14b5ad0b48ea80\";a:4:{s:10:\"expiration\";i:1544546495;s:2:\"ip\";s:3:\"::1\";s:2:\"ua\";s:68:\"Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\";s:5:\"login\";i:1544373695;}s:64:\"cfc03763e6b26c2b09a980e1699c5b30235084cbd52cbeb0a1c4e7f69291ac8e\";a:4:{s:10:\"expiration\";i:1544551050;s:2:\"ip\";s:3:\"::1\";s:2:\"ua\";s:104:\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\";s:5:\"login\";i:1544378250;}s:64:\"42b52fc303fa7572e36f3f2a7abaced24f5cb8096ea6acb5505e634f87ac30d7\";a:4:{s:10:\"expiration\";i:1544561049;s:2:\"ip\";s:3:\"::1\";s:2:\"ua\";s:104:\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\";s:5:\"login\";i:1544388249;}}'),
(68, 4, 'nickname', 'tuan'),
(69, 4, 'first_name', ''),
(70, 4, 'last_name', ''),
(71, 4, 'description', ''),
(72, 4, 'rich_editing', 'true'),
(73, 4, 'syntax_highlighting', 'true'),
(74, 4, 'comment_shortcuts', 'false'),
(75, 4, 'admin_color', 'fresh'),
(76, 4, 'use_ssl', '0'),
(77, 4, 'show_admin_bar_front', 'true'),
(78, 4, 'locale', ''),
(79, 4, 'wp_capabilities', 'a:1:{s:10:\"subscriber\";b:1;}'),
(80, 4, 'wp_user_level', '0'),
(81, 4, 'default_password_nag', ''),
(84, 5, 'nickname', 'tuan1234'),
(85, 5, 'first_name', ''),
(86, 5, 'last_name', ''),
(87, 5, 'description', ''),
(88, 5, 'rich_editing', 'true'),
(89, 5, 'syntax_highlighting', 'true'),
(90, 5, 'comment_shortcuts', 'false'),
(91, 5, 'admin_color', 'fresh'),
(92, 5, 'use_ssl', '0'),
(93, 5, 'show_admin_bar_front', 'true'),
(94, 5, 'locale', ''),
(95, 5, 'wp_capabilities', 'a:1:{s:10:\"subscriber\";b:1;}'),
(96, 5, 'wp_user_level', '0'),
(97, 5, 'default_password_nag', ''),
(101, 2, 'session_tokens', 'a:1:{s:64:\"8e8e8e46ffbd44ba01bc39929684b67602fc643cba5bdc6e62be64b96478c129\";a:4:{s:10:\"expiration\";i:1544560206;s:2:\"ip\";s:3:\"::1\";s:2:\"ua\";s:68:\"Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\";s:5:\"login\";i:1544387406;}}');

-- --------------------------------------------------------

--
-- Table structure for table `wp_users`
--

CREATE TABLE `wp_users` (
  `ID` bigint(20) UNSIGNED NOT NULL,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `wp_users`
--

INSERT INTO `wp_users` (`ID`, `user_login`, `user_pass`, `user_nicename`, `user_email`, `user_url`, `user_registered`, `user_activation_key`, `user_status`, `display_name`) VALUES
(1, 'mducc', '$P$B8DWKFcTuoLwYr4UUFRRRLLKyi41/g.', 'mducc', 'minhduc2521997@gmail.com', '', '2018-12-03 08:31:35', '', 0, 'mducc'),
(2, 'tung', '$P$BrxLKTg7P0fVqu4noU8jGvwCfkIzG51', 'tung', 'tung@gmail.com', '', '2018-12-04 10:30:13', '1544377372:$P$BYXSxOgeLPeJbkWWA3I4kMex.eViba0', 0, 'tung'),
(4, 'tuan', '$P$BTm4nsvAwTfN9spOmc3Z1fiLA5eSAT.', 'tuan', 'tuan@gmail.com', '', '2018-12-09 16:46:11', '1544373972:$P$BBM00Q4gOtiRuj8j5i28Z9oR1NGI1J1', 0, 'tuan'),
(5, 'tuan1234', '$P$BS5dcaO6De4u/5uSj0cpE9G51R2QzW0', 'tuan1234', 'duc2521997@gmail.com', '', '2018-12-09 17:51:25', '1544377886:$P$B0CejRURbxKkMol79dV3yND8IUZ8la.', 0, 'tuan1234');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `wp_commentmeta`
--
ALTER TABLE `wp_commentmeta`
  ADD PRIMARY KEY (`meta_id`),
  ADD KEY `comment_id` (`comment_id`),
  ADD KEY `meta_key` (`meta_key`(191));

--
-- Indexes for table `wp_comments`
--
ALTER TABLE `wp_comments`
  ADD PRIMARY KEY (`comment_ID`),
  ADD KEY `comment_post_ID` (`comment_post_ID`),
  ADD KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  ADD KEY `comment_date_gmt` (`comment_date_gmt`),
  ADD KEY `comment_parent` (`comment_parent`),
  ADD KEY `comment_author_email` (`comment_author_email`(10));

--
-- Indexes for table `wp_links`
--
ALTER TABLE `wp_links`
  ADD PRIMARY KEY (`link_id`),
  ADD KEY `link_visible` (`link_visible`);

--
-- Indexes for table `wp_options`
--
ALTER TABLE `wp_options`
  ADD PRIMARY KEY (`option_id`),
  ADD UNIQUE KEY `option_name` (`option_name`);

--
-- Indexes for table `wp_postmeta`
--
ALTER TABLE `wp_postmeta`
  ADD PRIMARY KEY (`meta_id`),
  ADD KEY `post_id` (`post_id`),
  ADD KEY `meta_key` (`meta_key`(191));

--
-- Indexes for table `wp_posts`
--
ALTER TABLE `wp_posts`
  ADD PRIMARY KEY (`ID`),
  ADD KEY `post_name` (`post_name`(191)),
  ADD KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  ADD KEY `post_parent` (`post_parent`),
  ADD KEY `post_author` (`post_author`);

--
-- Indexes for table `wp_termmeta`
--
ALTER TABLE `wp_termmeta`
  ADD PRIMARY KEY (`meta_id`),
  ADD KEY `term_id` (`term_id`),
  ADD KEY `meta_key` (`meta_key`(191));

--
-- Indexes for table `wp_terms`
--
ALTER TABLE `wp_terms`
  ADD PRIMARY KEY (`term_id`),
  ADD KEY `slug` (`slug`(191)),
  ADD KEY `name` (`name`(191));

--
-- Indexes for table `wp_term_relationships`
--
ALTER TABLE `wp_term_relationships`
  ADD PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  ADD KEY `term_taxonomy_id` (`term_taxonomy_id`);

--
-- Indexes for table `wp_term_taxonomy`
--
ALTER TABLE `wp_term_taxonomy`
  ADD PRIMARY KEY (`term_taxonomy_id`),
  ADD UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  ADD KEY `taxonomy` (`taxonomy`);

--
-- Indexes for table `wp_usermeta`
--
ALTER TABLE `wp_usermeta`
  ADD PRIMARY KEY (`umeta_id`),
  ADD KEY `user_id` (`user_id`),
  ADD KEY `meta_key` (`meta_key`(191));

--
-- Indexes for table `wp_users`
--
ALTER TABLE `wp_users`
  ADD PRIMARY KEY (`ID`),
  ADD KEY `user_login_key` (`user_login`),
  ADD KEY `user_nicename` (`user_nicename`),
  ADD KEY `user_email` (`user_email`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `wp_commentmeta`
--
ALTER TABLE `wp_commentmeta`
  MODIFY `meta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `wp_comments`
--
ALTER TABLE `wp_comments`
  MODIFY `comment_ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `wp_links`
--
ALTER TABLE `wp_links`
  MODIFY `link_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `wp_options`
--
ALTER TABLE `wp_options`
  MODIFY `option_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=613;

--
-- AUTO_INCREMENT for table `wp_postmeta`
--
ALTER TABLE `wp_postmeta`
  MODIFY `meta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=615;

--
-- AUTO_INCREMENT for table `wp_posts`
--
ALTER TABLE `wp_posts`
  MODIFY `ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=239;

--
-- AUTO_INCREMENT for table `wp_termmeta`
--
ALTER TABLE `wp_termmeta`
  MODIFY `meta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `wp_terms`
--
ALTER TABLE `wp_terms`
  MODIFY `term_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `wp_term_taxonomy`
--
ALTER TABLE `wp_term_taxonomy`
  MODIFY `term_taxonomy_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `wp_usermeta`
--
ALTER TABLE `wp_usermeta`
  MODIFY `umeta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=102;

--
-- AUTO_INCREMENT for table `wp_users`
--
ALTER TABLE `wp_users`
  MODIFY `ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
